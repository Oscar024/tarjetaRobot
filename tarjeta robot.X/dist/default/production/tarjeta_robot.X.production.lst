

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Oct 04 14:19:02 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	idataCOMRAM
    64  001DAC                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _countup
    68  001DAC  0001               	dw	1
    69                           
    70                           	psect	idataBANK0
    71  001D7E                     __pidataBANK0:
    72                           	opt stack 0
    73                           
    74                           ;initializer for BT_Init@F5675
    75  001D7E  41                 	db	65
    76  001D7F  54                 	db	84
    77  001D80  2B                 	db	43
    78  001D81  4E                 	db	78
    79  001D82  41                 	db	65
    80  001D83  4D                 	db	77
    81  001D84  45                 	db	69
    82  001D85  3D                 	db	61
    83  001D86  72                 	db	114
    84  001D87  6F                 	db	111
    85  001D88  62                 	db	98
    86  001D89  6F                 	db	111
    87  001D8A  74                 	db	116
    88  001D8B  0D                 	db	13
    89  001D8C  0A                 	db	10
    90  001D8D  00                 	db	0
    91  001D8E  00                 	db	0
    92  001D8F  00                 	db	0
    93                           
    94                           	psect	smallconst
    95  000800                     __psmallconst:
    96                           	opt stack 0
    97  000800  00                 	db	0
    98  000801                     _dpowers:
    99                           	opt stack 0
   100  000801  0001               	dw	1
   101  000803  000A               	dw	10
   102  000805  0064               	dw	100
   103  000807  03E8               	dw	1000
   104  000809  2710               	dw	10000
   105  00080B                     __end_of_dpowers:
   106                           	opt stack 0
   107  0000                     _ADCON1bits	set	4033
   108  0000                     _CCP1CON	set	4029
   109  0000                     _CCP2CON	set	4026
   110  0000                     _CCPR1L	set	4030
   111  0000                     _CCPR2L	set	4027
   112  0000                     _INTCON	set	4082
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _INTCON3bits	set	4080
   115  0000                     _INTCONbits	set	4082
   116  0000                     _OSCCONbits	set	4051
   117  0000                     _PIE1	set	3997
   118  0000                     _PIE1bits	set	3997
   119  0000                     _PIR1bits	set	3998
   120  0000                     _PORTA	set	3968
   121  0000                     _PORTAbits	set	3968
   122  0000                     _PORTB	set	3969
   123  0000                     _PORTBbits	set	3969
   124  0000                     _PORTC	set	3970
   125  0000                     _PORTD	set	3971
   126  0000                     _PORTDbits	set	3971
   127  0000                     _PORTE	set	3972
   128  0000                     _PR2	set	4043
   129  0000                     _RCREG	set	4014
   130  0000                     _RCSTA	set	4011
   131  0000                     _RCSTAbits	set	4011
   132  0000                     _SPBRG	set	4015
   133  0000                     _SPBRGH	set	4016
   134  0000                     _T2CON	set	4042
   135  0000                     _T2CONbits	set	4042
   136  0000                     _TMR2	set	4044
   137  0000                     _TRISA	set	3986
   138  0000                     _TRISB	set	3987
   139  0000                     _TRISBbits	set	3987
   140  0000                     _TRISC	set	3988
   141  0000                     _TRISCbits	set	3988
   142  0000                     _TRISD	set	3989
   143  0000                     _TRISE	set	3990
   144  0000                     _TXREG	set	4013
   145  0000                     _TXSTA	set	4012
   146  0000                     _TXSTAbits	set	4012
   147  00080B                     __stringdata:
   148                           	opt stack 0
   149  00080B                     STR_2:
   150  00080B  41                 	db	65	;'A'
   151  00080C  54                 	db	84	;'T'
   152  00080D  2B                 	db	43
   153  00080E  50                 	db	80	;'P'
   154  00080F  53                 	db	83	;'S'
   155  000810  57                 	db	87	;'W'
   156  000811  44                 	db	68	;'D'
   157  000812  3D                 	db	61	;'='
   158  000813  30                 	db	48	;'0'
   159  000814  30                 	db	48	;'0'
   160  000815  30                 	db	48	;'0'
   161  000816  30                 	db	48	;'0'
   162  000817  0D                 	db	13
   163  000818  0A                 	db	10
   164  000819  00                 	db	0
   165  00081A  0A                 	db	10
   166  00081B  2B                 	db	43
   167  00081C  42                 	db	66	;'B'
   168  00081D  54                 	db	84	;'T'
   169  00081E  53                 	db	83	;'S'
   170  00081F  54                 	db	84	;'T'
   171  000820  41                 	db	65	;'A'
   172  000821  54                 	db	84	;'T'
   173  000822  45                 	db	69	;'E'
   174  000823  3A                 	db	58	;':'
   175  000824  31                 	db	49	;'1'
   176  000825  0D                 	db	13
   177  000826  0A                 	db	10
   178  000827  00                 	db	0
   179  000828  0A                 	db	10
   180  000829  2B                 	db	43
   181  00082A  42                 	db	66	;'B'
   182  00082B  54                 	db	84	;'T'
   183  00082C  53                 	db	83	;'S'
   184  00082D  54                 	db	84	;'T'
   185  00082E  41                 	db	65	;'A'
   186  00082F  54                 	db	84	;'T'
   187  000830  45                 	db	69	;'E'
   188  000831  3A                 	db	58	;':'
   189  000832  33                 	db	51	;'3'
   190  000833  0D                 	db	13
   191  000834  0A                 	db	10
   192  000835  00                 	db	0
   193  000836  0A                 	db	10
   194  000837  2B                 	db	43
   195  000838  42                 	db	66	;'B'
   196  000839  54                 	db	84	;'T'
   197  00083A  53                 	db	83	;'S'
   198  00083B  54                 	db	84	;'T'
   199  00083C  41                 	db	65	;'A'
   200  00083D  54                 	db	84	;'T'
   201  00083E  45                 	db	69	;'E'
   202  00083F  3A                 	db	58	;':'
   203  000840  34                 	db	52	;'4'
   204  000841  0D                 	db	13
   205  000842  0A                 	db	10
   206  000843  00                 	db	0
   207  000844  0A                 	db	10
   208  000845  43                 	db	67	;'C'
   209  000846  4F                 	db	79	;'O'
   210  000847  4E                 	db	78	;'N'
   211  000848  4E                 	db	78	;'N'
   212  000849  45                 	db	69	;'E'
   213  00084A  43                 	db	67	;'C'
   214  00084B  54                 	db	84	;'T'
   215  00084C  3A                 	db	58	;':'
   216  00084D  4F                 	db	79	;'O'
   217  00084E  4B                 	db	75	;'K'
   218  00084F  0D                 	db	13
   219  000850  0A                 	db	10
   220  000851  00                 	db	0
   221  000852                     STR_1:
   222  000852  41                 	db	65	;'A'
   223  000853  54                 	db	84	;'T'
   224  000854  2B                 	db	43
   225  000855  52                 	db	82	;'R'
   226  000856  4F                 	db	79	;'O'
   227  000857  4C                 	db	76	;'L'
   228  000858  45                 	db	69	;'E'
   229  000859  3D                 	db	61	;'='
   230  00085A  30                 	db	48	;'0'
   231  00085B  0D                 	db	13
   232  00085C  0A                 	db	10
   233  00085D  00                 	db	0
   234  00085E                     STR_3:
   235  00085E  41                 	db	65	;'A'
   236  00085F  54                 	db	84	;'T'
   237  000860  2B                 	db	43
   238  000861  49                 	db	73	;'I'
   239  000862  4E                 	db	78	;'N'
   240  000863  51                 	db	81	;'Q'
   241  000864  0D                 	db	13
   242  000865  0A                 	db	10
   243  000866  00                 	db	0
   244  000867                     STR_5:
   245  000867  25                 	db	37
   246  000868  64                 	db	100	;'d'
   247  000869  00                 	db	0
   248  00086A                     __end_of__stringdata:
   249                           	opt stack 0
   250                           
   251                           ; #config settings
   252  00086A  00                 	db	0	; dummy byte at the end
   253  0000                     
   254                           	psect	cinit
   255  0019B8                     __pcinit:
   256                           	opt stack 0
   257  0019B8                     start_initialization:
   258                           	opt stack 0
   259  0019B8                     __initialization:
   260                           	opt stack 0
   261                           
   262                           ; Clear objects allocated to BANK1 (40 bytes)
   263  0019B8  EE01  F000         	lfsr	0,__pbssBANK1
   264  0019BC  0E28               	movlw	40
   265  0019BE                     clear_0:
   266  0019BE  6AEE               	clrf	postinc0,c
   267  0019C0  06E8               	decf	wreg,f,c
   268  0019C2  E1FD               	bnz	clear_0
   269                           
   270                           ; Clear objects allocated to BANK0 (76 bytes)
   271  0019C4  EE00  F060         	lfsr	0,__pbssBANK0
   272  0019C8  0E4C               	movlw	76
   273  0019CA                     clear_1:
   274  0019CA  6AEE               	clrf	postinc0,c
   275  0019CC  06E8               	decf	wreg,f,c
   276  0019CE  E1FD               	bnz	clear_1
   277                           
   278                           ; Clear objects allocated to COMRAM (28 bytes)
   279  0019D0  EE00  F042         	lfsr	0,__pbssCOMRAM
   280  0019D4  0E1C               	movlw	28
   281  0019D6                     clear_2:
   282  0019D6  6AEE               	clrf	postinc0,c
   283  0019D8  06E8               	decf	wreg,f,c
   284  0019DA  E1FD               	bnz	clear_2
   285                           
   286                           ; Initialize objects allocated to BANK0 (18 bytes)
   287                           ; load TBLPTR registers with __pidataBANK0
   288  0019DC  0E7E               	movlw	low __pidataBANK0
   289  0019DE  6EF6               	movwf	tblptrl,c
   290  0019E0  0E1D               	movlw	high __pidataBANK0
   291  0019E2  6EF7               	movwf	tblptrh,c
   292  0019E4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   293  0019E6  6EF8               	movwf	tblptru,c
   294  0019E8  EE00  F0E4         	lfsr	0,__pdataBANK0
   295  0019EC  EE10 F012          	lfsr	1,18
   296  0019F0                     copy_data0:
   297  0019F0  0009               	tblrd		*+
   298  0019F2  CFF5 FFEE          	movff	tablat,postinc0
   299  0019F6  50E5               	movf	postdec1,w,c
   300  0019F8  50E1               	movf	fsr1l,w,c
   301  0019FA  E1FA               	bnz	copy_data0
   302                           
   303                           ; Initialize objects allocated to COMRAM (2 bytes)
   304                           ; load TBLPTR registers with __pidataCOMRAM
   305  0019FC  0EAC               	movlw	low __pidataCOMRAM
   306  0019FE  6EF6               	movwf	tblptrl,c
   307  001A00  0E1D               	movlw	high __pidataCOMRAM
   308  001A02  6EF7               	movwf	tblptrh,c
   309  001A04  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   310  001A06  6EF8               	movwf	tblptru,c
   311  001A08  0009               	tblrd		*+	;fetch initializer
   312  001A0A  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   313  001A0E  0009               	tblrd		*+	;fetch initializer
   314  001A10  CFF5 F05F          	movff	tablat,__pdataCOMRAM+1
   315  001A14                     end_of_initialization:
   316                           	opt stack 0
   317  001A14                     __end_of__initialization:
   318                           	opt stack 0
   319  001A14  0100               	movlb	0
   320  001A16  EF8A  F00B         	goto	_main	;jump to C main() function
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	bssCOMRAM
   331  000042                     __pbssCOMRAM:
   332                           	opt stack 0
   333  000042                     _Med_lsb:
   334                           	opt stack 0
   335  000042                     	ds	2
   336  000044                     _Med_msb:
   337                           	opt stack 0
   338  000044                     	ds	2
   339  000046                     _TamanhoTrama:
   340                           	opt stack 0
   341  000046                     	ds	2
   342  000048                     _i:
   343                           	opt stack 0
   344  000048                     	ds	2
   345  00004A                     _CheckSum:
   346                           	opt stack 0
   347  00004A                     	ds	1
   348  00004B                     _ComanBFlag:
   349                           	opt stack 0
   350  00004B                     	ds	1
   351  00004C                     _ComanTFlag:
   352                           	opt stack 0
   353  00004C                     	ds	1
   354  00004D                     _Comando:
   355                           	opt stack 0
   356  00004D                     	ds	1
   357  00004E                     _ComandoTablet:
   358                           	opt stack 0
   359  00004E                     	ds	1
   360  00004F                     _EntTrama:
   361                           	opt stack 0
   362  00004F                     	ds	1
   363  000050                     _InicioComando:
   364                           	opt stack 0
   365  000050                     	ds	1
   366  000051                     _RXComandoTB:
   367                           	opt stack 0
   368  000051                     	ds	1
   369  000052                     _SBUSART:
   370                           	opt stack 0
   371  000052                     	ds	1
   372  000053                     _Timer1:
   373                           	opt stack 0
   374  000053                     	ds	1
   375  000054                     _USART_Status:
   376                           	opt stack 0
   377  000054                     	ds	1
   378  000055                     _cad:
   379                           	opt stack 0
   380  000055                     	ds	1
   381  000056                     _contador:
   382                           	opt stack 0
   383  000056                     	ds	1
   384  000057                     _contador2:
   385                           	opt stack 0
   386  000057                     	ds	1
   387  000058                     _j:
   388                           	opt stack 0
   389  000058                     	ds	1
   390  000059                     _lenght:
   391                           	opt stack 0
   392  000059                     	ds	1
   393  00005A                     _num_med_hi:
   394                           	opt stack 0
   395  00005A                     	ds	1
   396  00005B                     _num_med_low:
   397                           	opt stack 0
   398  00005B                     	ds	1
   399  00005C                     _num_med_medium:
   400                           	opt stack 0
   401  00005C                     	ds	1
   402  00005D                     _packet:
   403                           	opt stack 0
   404  00005D                     	ds	1
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           postdec1	equ	0xFE5
   412                           fsr1l	equ	0xFE1
   413                           
   414                           	psect	dataCOMRAM
   415  00005E                     __pdataCOMRAM:
   416                           	opt stack 0
   417  00005E                     _countup:
   418                           	opt stack 0
   419  00005E                     	ds	2
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	bssBANK0
   430  000060                     __pbssBANK0:
   431                           	opt stack 0
   432  000060                     _DutyCycle:
   433                           	opt stack 0
   434  000060                     	ds	2
   435  000062                     _FinComandB:
   436                           	opt stack 0
   437  000062                     	ds	1
   438  000063                     _FinComandT:
   439                           	opt stack 0
   440  000063                     	ds	1
   441  000064                     _cleanBfer:
   442                           	opt stack 0
   443  000064                     	ds	1
   444  000065                     _BluetoothDato:
   445                           	opt stack 0
   446  000065                     	ds	50
   447  000097                     _comando:
   448                           	opt stack 0
   449  000097                     	ds	20
   450  0000AB                     _Timer2Config:
   451                           	opt stack 0
   452  0000AB                     	ds	1
   453                           tblptru	equ	0xFF8
   454                           tblptrh	equ	0xFF7
   455                           tblptrl	equ	0xFF6
   456                           tablat	equ	0xFF5
   457                           postinc0	equ	0xFEE
   458                           wreg	equ	0xFE8
   459                           postdec1	equ	0xFE5
   460                           fsr1l	equ	0xFE1
   461                           
   462                           	psect	dataBANK0
   463  0000E4                     __pdataBANK0:
   464                           	opt stack 0
   465  0000E4                     BT_Init@F5675:
   466                           	opt stack 0
   467  0000E4                     	ds	18
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           	psect	bssBANK1
   478  000100                     __pbssBANK1:
   479                           	opt stack 0
   480  000100                     _TramaTablet:
   481                           	opt stack 0
   482  000100                     	ds	20
   483  000114                     _array:
   484                           	opt stack 0
   485  000114                     	ds	20
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           postdec1	equ	0xFE5
   493                           fsr1l	equ	0xFE1
   494                           
   495                           	psect	cstackBANK0
   496  0000AC                     __pcstackBANK0:
   497                           	opt stack 0
   498  0000AC                     ??_OpenPWM2:
   499  0000AC                     ?_getCNY70Value:
   500                           	opt stack 0
   501  0000AC                     ?___lwdiv:
   502                           	opt stack 0
   503  0000AC                     ?___ftpack:
   504                           	opt stack 0
   505  0000AC                     OpenPWM1@period:
   506                           	opt stack 0
   507  0000AC                     WriteUSART@data:
   508                           	opt stack 0
   509  0000AC                     clrBufferUSART@i:
   510                           	opt stack 0
   511  0000AC                     Pause_ms@x:
   512                           	opt stack 0
   513  0000AC                     SetDCPWM1@dutycycle:
   514                           	opt stack 0
   515  0000AC                     SetDCPWM2@dutycycle:
   516                           	opt stack 0
   517  0000AC                     OpenUSART@spbrg:
   518                           	opt stack 0
   519  0000AC                     ___lwdiv@dividend:
   520                           	opt stack 0
   521  0000AC                     ___ftpack@arg:
   522                           	opt stack 0
   523                           
   524                           ; 3 bytes @ 0x0
   525  0000AC                     	ds	1
   526  0000AD                     putcTxU1@character:
   527                           	opt stack 0
   528  0000AD                     PWM_init1@period:
   529                           	opt stack 0
   530  0000AD                     OpenPWM2@period:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x1
   534  0000AD                     	ds	1
   535  0000AE                     ??_OpenUSART:
   536  0000AE                     ??_SetDCPWM1:
   537  0000AE                     ??_SetDCPWM2:
   538  0000AE                     ??_Pause_ms:
   539  0000AE                     OpenPWM2@ccp2mx:
   540                           	opt stack 0
   541  0000AE                     putSTRINGU1@dato:
   542                           	opt stack 0
   543  0000AE                     ___lwdiv@divisor:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x2
   547  0000AE                     	ds	1
   548  0000AF                     PWM_init2@period:
   549                           	opt stack 0
   550  0000AF                     ___ftpack@exp:
   551                           	opt stack 0
   552  0000AF                     Pause_ms@i:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x3
   556  0000AF                     	ds	1
   557  0000B0                     ___ftpack@sign:
   558                           	opt stack 0
   559  0000B0                     putSTRINGU1@total:
   560                           	opt stack 0
   561  0000B0                     SetDCPWM1@DCycle:
   562                           	opt stack 0
   563  0000B0                     SetDCPWM2@DCycle:
   564                           	opt stack 0
   565  0000B0                     ___lwdiv@quotient:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x4
   569  0000B0                     	ds	1
   570  0000B1                     ??___ftpack:
   571  0000B1                     Pause_seg@x:
   572                           	opt stack 0
   573  0000B1                     OpenUSART@config:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x5
   577  0000B1                     	ds	1
   578  0000B2                     ??_putSTRINGU1:
   579  0000B2                     Pause_seg@i:
   580                           	opt stack 0
   581  0000B2                     UART1_Init@bdr:
   582                           	opt stack 0
   583  0000B2                     ___lwdiv@counter:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x6
   587  0000B2                     	ds	1
   588  0000B3                     ?___lwmod:
   589                           	opt stack 0
   590  0000B3                     putcBluetoothString@a:
   591                           	opt stack 0
   592  0000B3                     ___lwmod@dividend:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x7
   596  0000B3                     	ds	1
   597  0000B4                     ?___lbtoft:
   598                           	opt stack 0
   599  0000B4                     putSTRINGU1@last:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x8
   603  0000B4                     	ds	1
   604  0000B5                     ??_putcBluetoothString:
   605  0000B5                     putSTRINGU1@cont:
   606                           	opt stack 0
   607  0000B5                     ___lwmod@divisor:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x9
   611  0000B5                     	ds	1
   612  0000B6                     SendBlueToothCommand@command:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0xA
   616  0000B6                     	ds	1
   617  0000B7                     ___lbtoft@c:
   618                           	opt stack 0
   619  0000B7                     ___lwmod@counter:
   620                           	opt stack 0
   621  0000B7                     putcBluetoothString@i:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0xB
   625  0000B7                     	ds	1
   626  0000B8                     ?_sprintf:
   627                           	opt stack 0
   628  0000B8                     ?___ftmul:
   629                           	opt stack 0
   630  0000B8                     SendBlueToothCommand@total:
   631                           	opt stack 0
   632  0000B8                     sprintf@sp:
   633                           	opt stack 0
   634  0000B8                     ___ftmul@f1:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0xC
   638  0000B8                     	ds	2
   639  0000BA                     sprintf@f:
   640                           	opt stack 0
   641  0000BA                     BT_Init@nameBT:
   642                           	opt stack 0
   643                           
   644                           ; 18 bytes @ 0xE
   645  0000BA                     	ds	1
   646  0000BB                     ___ftmul@f2:
   647                           	opt stack 0
   648                           
   649                           ; 3 bytes @ 0xF
   650  0000BB                     	ds	3
   651  0000BE                     ??_sprintf:
   652  0000BE                     ??___ftmul:
   653                           
   654                           ; 0 bytes @ 0x12
   655  0000BE                     	ds	2
   656  0000C0                     sprintf@ap:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x14
   660  0000C0                     	ds	1
   661  0000C1                     ___ftmul@exp:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x15
   665  0000C1                     	ds	1
   666  0000C2                     sprintf@flag:
   667                           	opt stack 0
   668  0000C2                     ___ftmul@f3_as_product:
   669                           	opt stack 0
   670                           
   671                           ; 3 bytes @ 0x16
   672  0000C2                     	ds	1
   673  0000C3                     sprintf@prec:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x17
   677  0000C3                     	ds	1
   678  0000C4                     sprintf@_val:
   679                           	opt stack 0
   680                           
   681                           ; 5 bytes @ 0x18
   682  0000C4                     	ds	1
   683  0000C5                     ___ftmul@cntr:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x19
   687  0000C5                     	ds	1
   688  0000C6                     ___ftmul@sign:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x1A
   692  0000C6                     	ds	1
   693  0000C7                     ?___fttol:
   694                           	opt stack 0
   695  0000C7                     ___fttol@f1:
   696                           	opt stack 0
   697                           
   698                           ; 3 bytes @ 0x1B
   699  0000C7                     	ds	2
   700  0000C9                     sprintf@c:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x1D
   704  0000C9                     	ds	1
   705  0000CA                     putcBluetoothInt@a:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x1E
   709  0000CA                     	ds	1
   710  0000CB                     ??___fttol:
   711                           
   712                           ; 0 bytes @ 0x1F
   713  0000CB                     	ds	1
   714  0000CC                     ??_Inicializa_Driveby:
   715  0000CC                     putcBluetoothInt@s:
   716                           	opt stack 0
   717                           
   718                           ; 20 bytes @ 0x20
   719  0000CC                     	ds	1
   720  0000CD                     Inicializa_Driveby@i:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x21
   724  0000CD                     	ds	3
   725  0000D0                     ___fttol@sign1:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x24
   729  0000D0                     	ds	1
   730  0000D1                     ___fttol@lval:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x25
   734  0000D1                     	ds	4
   735  0000D5                     ___fttol@exp1:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x29
   739  0000D5                     	ds	1
   740  0000D6                     ??_PWM_DutyCycle1:
   741  0000D6                     ??_PWM_DutyCycle2:
   742                           
   743                           ; 0 bytes @ 0x2A
   744  0000D6                     	ds	4
   745  0000DA                     PWM_DutyCycle1@DutyCycle:
   746                           	opt stack 0
   747  0000DA                     PWM_DutyCycle2@DutyCycle:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x2E
   751  0000DA                     	ds	2
   752  0000DC                     PWM_DutyCycle1@percentageDuty:
   753                           	opt stack 0
   754  0000DC                     PWM_DutyCycle2@percentageDuty:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x30
   758  0000DC                     	ds	1
   759  0000DD                     PWM_DutyCycle1@DC:
   760                           	opt stack 0
   761  0000DD                     PWM_DutyCycle2@DC:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x31
   765  0000DD                     	ds	3
   766  0000E0                     putcBluetoothInt@i:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x34
   770  0000E0                     	ds	2
   771  0000E2                     Comando_Tablet@sensed:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x36
   775  0000E2                     	ds	2
   776  0000E4                     tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           postdec1	equ	0xFE5
   783                           fsr1l	equ	0xFE1
   784                           
   785                           ; 0 bytes @ 0x38
   786                           
   787                           	psect	cstackCOMRAM
   788  000001                     __pcstackCOMRAM:
   789                           	opt stack 0
   790  000001                     ?i2___ftpack:
   791                           	opt stack 0
   792  000001                     ReadUSART@data:
   793                           	opt stack 0
   794  000001                     i2SetDCPWM1@dutycycle:
   795                           	opt stack 0
   796  000001                     i2SetDCPWM2@dutycycle:
   797                           	opt stack 0
   798  000001                     i2___ftpack@arg:
   799                           	opt stack 0
   800                           
   801                           ; 3 bytes @ 0x0
   802  000001                     	ds	2
   803  000003                     ??i2_SetDCPWM1:
   804  000003                     ??i2_SetDCPWM2:
   805                           
   806                           ; 0 bytes @ 0x2
   807  000003                     	ds	1
   808  000004                     i2___ftpack@exp:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x3
   812  000004                     	ds	1
   813  000005                     i2___ftpack@sign:
   814                           	opt stack 0
   815  000005                     i2SetDCPWM1@DCycle:
   816                           	opt stack 0
   817  000005                     i2SetDCPWM2@DCycle:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x4
   821  000005                     	ds	1
   822  000006                     ??i2___ftpack:
   823                           
   824                           ; 0 bytes @ 0x5
   825  000006                     	ds	3
   826  000009                     ?i2___lbtoft:
   827                           	opt stack 0
   828                           
   829                           ; 3 bytes @ 0x8
   830  000009                     	ds	3
   831  00000C                     i2___lbtoft@c:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0xB
   835  00000C                     	ds	1
   836  00000D                     ?i2___ftmul:
   837                           	opt stack 0
   838  00000D                     i2___ftmul@f1:
   839                           	opt stack 0
   840                           
   841                           ; 3 bytes @ 0xC
   842  00000D                     	ds	3
   843  000010                     i2___ftmul@f2:
   844                           	opt stack 0
   845                           
   846                           ; 3 bytes @ 0xF
   847  000010                     	ds	3
   848  000013                     ??i2___ftmul:
   849                           
   850                           ; 0 bytes @ 0x12
   851  000013                     	ds	3
   852  000016                     i2___ftmul@exp:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x15
   856  000016                     	ds	1
   857  000017                     i2___ftmul@f3_as_product:
   858                           	opt stack 0
   859                           
   860                           ; 3 bytes @ 0x16
   861  000017                     	ds	3
   862  00001A                     i2___ftmul@cntr:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x19
   866  00001A                     	ds	1
   867  00001B                     i2___ftmul@sign:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x1A
   871  00001B                     	ds	1
   872  00001C                     ?i2___fttol:
   873                           	opt stack 0
   874  00001C                     i2___fttol@f1:
   875                           	opt stack 0
   876                           
   877                           ; 3 bytes @ 0x1B
   878  00001C                     	ds	4
   879  000020                     ??i2___fttol:
   880                           
   881                           ; 0 bytes @ 0x1F
   882  000020                     	ds	5
   883  000025                     i2___fttol@sign1:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x24
   887  000025                     	ds	1
   888  000026                     i2___fttol@lval:
   889                           	opt stack 0
   890                           
   891                           ; 4 bytes @ 0x25
   892  000026                     	ds	4
   893  00002A                     i2___fttol@exp1:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x29
   897  00002A                     	ds	1
   898  00002B                     ??i2_PWM_DutyCycle1:
   899  00002B                     ??i2_PWM_DutyCycle2:
   900                           
   901                           ; 0 bytes @ 0x2A
   902  00002B                     	ds	4
   903  00002F                     i2PWM_DutyCycle1@DutyCycle:
   904                           	opt stack 0
   905  00002F                     i2PWM_DutyCycle2@DutyCycle:
   906                           	opt stack 0
   907                           
   908                           ; 2 bytes @ 0x2E
   909  00002F                     	ds	2
   910  000031                     i2PWM_DutyCycle1@percentageDuty:
   911                           	opt stack 0
   912  000031                     i2PWM_DutyCycle2@percentageDuty:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x30
   916  000031                     	ds	1
   917  000032                     i2PWM_DutyCycle1@DC:
   918                           	opt stack 0
   919  000032                     i2PWM_DutyCycle2@DC:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x31
   923  000032                     	ds	2
   924  000034                     ??_TMRO_USART:
   925                           
   926                           ; 0 bytes @ 0x33
   927  000034                     	ds	14
   928                           tblptru	equ	0xFF8
   929                           tblptrh	equ	0xFF7
   930                           tblptrl	equ	0xFF6
   931                           tablat	equ	0xFF5
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           postdec1	equ	0xFE5
   935                           fsr1l	equ	0xFE1
   936                           
   937 ;;
   938 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   939 ;;
   940 ;; *************** function _main *****************
   941 ;; Defined at:
   942 ;;		line 148 in file "robot.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  2  340[COMRAM] int 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   956 ;;      Params:         0       0       0       0       0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0       0       0       0       0
   959 ;;      Totals:         0       0       0       0       0       0       0       0       0
   960 ;;Total ram usage:        0 bytes
   961 ;; Hardware stack levels required when called:   10
   962 ;; This function calls:
   963 ;;		_Comando_Tablet
   964 ;;		_Inicializa_Driveby
   965 ;;		_PWM_DutyCycle1
   966 ;;		_PWM_DutyCycle2
   967 ;;		_UART1_Init
   968 ;;		_clrBufferUSART
   969 ;;		_motor_Backforward
   970 ;; This function is called by:
   971 ;;		Startup code after reset
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text0
   976  001714                     __ptext0:
   977                           	opt stack 0
   978  001714                     _main:
   979                           	opt stack 21
   980                           
   981                           ;robot.c: 150: INTCON =0X00;
   982                           
   983                           ;incstack = 0
   984  001714  0E00               	movlw	0
   985  001716  6EF2               	movwf	intcon,c	;volatile
   986                           
   987                           ;robot.c: 151: TRISD = 0x00;
   988  001718  0E00               	movlw	0
   989  00171A  6E95               	movwf	3989,c	;volatile
   990                           
   991                           ;robot.c: 152: TRISE = 0x00;
   992  00171C  0E00               	movlw	0
   993  00171E  6E96               	movwf	3990,c	;volatile
   994                           
   995                           ;robot.c: 153: ADCON1bits.PCFG=0b1111;
   996  001720  80C1               	bsf	4033,0,c	;volatile
   997  001722  82C1               	bsf	4033,1,c	;volatile
   998  001724  84C1               	bsf	4033,2,c	;volatile
   999  001726  86C1               	bsf	4033,3,c	;volatile
  1000                           
  1001                           ;robot.c: 155: Inicializa_Driveby();
  1002  001728  EC62  F008         	call	_Inicializa_Driveby	;wreg free
  1003                           
  1004                           ;robot.c: 156: PORTAbits.RA2 = 1;
  1005  00172C  8480               	bsf	3968,2,c	;volatile
  1006  00172E                     l3065:
  1007                           
  1008                           ;robot.c: 160: {
  1009                           ;robot.c: 163: if (cleanBfer == 1) {
  1010  00172E  0100               	movlb	0	; () banked
  1011  001730  0564               	decf	_cleanBfer& (0+255),w,b
  1012  001732  A4D8               	btfss	status,2,c
  1013  001734  D005               	goto	l3071
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;robot.c: 164: clrBufferUSART();
  1017  001736  ECCA  F00D         	call	_clrBufferUSART	;wreg free
  1018                           
  1019                           ;robot.c: 165: cleanBfer = 0;
  1020  00173A  0E00               	movlw	0
  1021  00173C  0100               	movlb	0	; () banked
  1022  00173E  6F64               	movwf	_cleanBfer& (0+255),b
  1023  001740                     l3071:
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;robot.c: 166: }
  1027                           ;robot.c: 167: if (FinComandT == 1) {
  1028  001740  0100               	movlb	0	; () banked
  1029  001742  0563               	decf	_FinComandT& (0+255),w,b
  1030  001744  A4D8               	btfss	status,2,c
  1031  001746  D00E               	goto	l3085
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;robot.c: 169: FinComandT = 0;
  1035  001748  0E00               	movlw	0
  1036  00174A  0100               	movlb	0	; () banked
  1037  00174C  6F63               	movwf	_FinComandT& (0+255),b
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;robot.c: 170: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1041  00174E  0E4F               	movlw	79
  1042  001750  16AB               	andwf	4011,f,c	;volatile
  1043                           
  1044                           ; BSR set to: 0
  1045  001752  9AAC               	bcf	4012,5,c	;volatile
  1046                           
  1047                           ; BSR set to: 0
  1048  001754  0ECF               	movlw	207
  1049  001756  169D               	andwf	3997,f,c	;volatile
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;robot.c: 171: Comando_Tablet();
  1053  001758  ECC7  F00B         	call	_Comando_Tablet	;wreg free
  1054                           
  1055                           ;robot.c: 172: UART1_Init(51);
  1056  00175C  0E33               	movlw	51
  1057  00175E  ECA0  F00E         	call	_UART1_Init
  1058                           
  1059                           ;robot.c: 174: }
  1060  001762  D00C               	goto	l3095
  1061  001764                     l3085:
  1062                           
  1063                           ;robot.c: 175: else if (FinComandB == 1) {
  1064  001764  0100               	movlb	0	; () banked
  1065  001766  0562               	decf	_FinComandB& (0+255),w,b
  1066  001768  A4D8               	btfss	status,2,c
  1067  00176A  D008               	goto	l3095
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;robot.c: 178: FinComandB = 0;
  1071  00176C  0E00               	movlw	0
  1072  00176E  0100               	movlb	0	; () banked
  1073  001770  6F62               	movwf	_FinComandB& (0+255),b
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;robot.c: 179: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1077  001772  0E4F               	movlw	79
  1078  001774  16AB               	andwf	4011,f,c	;volatile
  1079                           
  1080                           ; BSR set to: 0
  1081  001776  9AAC               	bcf	4012,5,c	;volatile
  1082                           
  1083                           ; BSR set to: 0
  1084  001778  0ECF               	movlw	207
  1085  00177A  169D               	andwf	3997,f,c	;volatile
  1086  00177C                     l3095:
  1087                           
  1088                           ;robot.c: 183: }
  1089                           ;robot.c: 184: PWM_DutyCycle1(50);
  1090  00177C  0E32               	movlw	50
  1091  00177E  EC4C  F00B         	call	_PWM_DutyCycle1
  1092                           
  1093                           ;robot.c: 185: PWM_DutyCycle2(50);
  1094  001782  0E32               	movlw	50
  1095  001784  EC0E  F00B         	call	_PWM_DutyCycle2
  1096                           
  1097                           ;robot.c: 187: motor_Backforward();
  1098  001788  ECD1  F00E         	call	_motor_Backforward	;wreg free
  1099  00178C  D7D0               	goto	l3065
  1100  00178E                     __end_of_main:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           intcon	equ	0xFF2
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           postdec1	equ	0xFE5
  1110                           fsr1l	equ	0xFE1
  1111                           status	equ	0xFD8
  1112                           
  1113 ;; *************** function _motor_Backforward *****************
  1114 ;; Defined at:
  1115 ;;		line 174 in file "Funciones_Db.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;		None               void
  1122 ;; Registers used:
  1123 ;;		None
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    4
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text1
  1144  001DA2                     __ptext1:
  1145                           	opt stack 0
  1146  001DA2                     _motor_Backforward:
  1147                           	opt stack 26
  1148                           
  1149                           ;Funciones_Db.c: 176: PORTDbits.RD7 = 0;
  1150                           
  1151                           ;incstack = 0
  1152  001DA2  9E83               	bcf	3971,7,c	;volatile
  1153                           
  1154                           ;Funciones_Db.c: 177: PORTDbits.RD4 = 1;
  1155  001DA4  8883               	bsf	3971,4,c	;volatile
  1156                           
  1157                           ;Funciones_Db.c: 178: PORTDbits.RD2 = 0;
  1158  001DA6  9483               	bcf	3971,2,c	;volatile
  1159                           
  1160                           ;Funciones_Db.c: 179: PORTDbits.RD3 = 1;
  1161  001DA8  8683               	bsf	3971,3,c	;volatile
  1162                           
  1163                           ;Funciones_Db.c: 181: return;
  1164  001DAA  0012               	return	
  1165  001DAC                     __end_of_motor_Backforward:
  1166                           	opt stack 0
  1167                           tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           intcon	equ	0xFF2
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           postdec1	equ	0xFE5
  1175                           fsr1l	equ	0xFE1
  1176                           status	equ	0xFD8
  1177                           
  1178 ;; *************** function _Inicializa_Driveby *****************
  1179 ;; Defined at:
  1180 ;;		line 62 in file "Funciones_Db.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  i               2   33[BANK0 ] int 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;		None               void
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1194 ;;      Params:         0       0       0       0       0       0       0       0       0
  1195 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1196 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1197 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1198 ;;Total ram usage:        3 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    9
  1201 ;; This function calls:
  1202 ;;		_BT_Init
  1203 ;;		_PWM_init1
  1204 ;;		_PWM_init2
  1205 ;;		_Pause_seg
  1206 ;;		_clrBufferUSART
  1207 ;;		_external_interrupt_init
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text2
  1214  0010C4                     __ptext2:
  1215                           	opt stack 0
  1216  0010C4                     _Inicializa_Driveby:
  1217                           	opt stack 21
  1218                           
  1219                           ;Funciones_Db.c: 63: TRISA = TRISB = TRISC = TRISD = 0;
  1220                           
  1221                           ;incstack = 0
  1222  0010C4  0E00               	movlw	0
  1223  0010C6  6E95               	movwf	3989,c	;volatile
  1224  0010C8  CF95 FF94          	movff	3989,3988	;volatile
  1225  0010CC  CF94 FF93          	movff	3988,3987	;volatile
  1226  0010D0  CF93 FF92          	movff	3987,3986	;volatile
  1227                           
  1228                           ;Funciones_Db.c: 64: INTCON = 0b11000000;
  1229  0010D4  0EC0               	movlw	192
  1230  0010D6  6EF2               	movwf	intcon,c	;volatile
  1231                           
  1232                           ;Funciones_Db.c: 67: int i = 0;
  1233  0010D8  0E00               	movlw	0
  1234  0010DA  0100               	movlb	0	; () banked
  1235  0010DC  6FCE               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1236  0010DE  0E00               	movlw	0
  1237  0010E0  0100               	movlb	0	; () banked
  1238  0010E2  6FCD               	movwf	Inicializa_Driveby@i& (0+255),b
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;Funciones_Db.c: 68: _delay((unsigned long)((40)*(4000000/4000.0)));
  1242  0010E4  0E34               	movlw	52
  1243  0010E6  0100               	movlb	0	; () banked
  1244  0010E8  6FCC               	movwf	??_Inicializa_Driveby& (0+255),b
  1245  0010EA  0EF2               	movlw	242
  1246  0010EC                     u3187:
  1247  0010EC  2EE8               	decfsz	wreg,f,c
  1248  0010EE  D7FE               	goto	u3187
  1249  0010F0  2FCC               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1250  0010F2  D7FC               	goto	u3187
  1251                           
  1252                           ;Funciones_Db.c: 69: OSCCONbits.IRCF = 0b111;
  1253  0010F4  88D3               	bsf	4051,4,c	;volatile
  1254  0010F6  8AD3               	bsf	4051,5,c	;volatile
  1255  0010F8  8CD3               	bsf	4051,6,c	;volatile
  1256                           
  1257                           ;Funciones_Db.c: 74: TRISA = TRISB = TRISC = TRISD = TRISE = 0;
  1258  0010FA  0E00               	movlw	0
  1259  0010FC  6E96               	movwf	3990,c	;volatile
  1260  0010FE  CF96 FF95          	movff	3990,3989	;volatile
  1261  001102  CF95 FF94          	movff	3989,3988	;volatile
  1262  001106  CF94 FF93          	movff	3988,3987	;volatile
  1263  00110A  CF93 FF92          	movff	3987,3986	;volatile
  1264                           
  1265                           ;Funciones_Db.c: 75: PORTA = PORTB = PORTC = PORTD = PORTE = 0;
  1266  00110E  0E00               	movlw	0
  1267  001110  6E84               	movwf	3972,c	;volatile
  1268  001112  CF84 FF83          	movff	3972,3971	;volatile
  1269  001116  CF83 FF82          	movff	3971,3970	;volatile
  1270  00111A  CF82 FF81          	movff	3970,3969	;volatile
  1271  00111E  CF81 FF80          	movff	3969,3968	;volatile
  1272                           
  1273                           ;Funciones_Db.c: 76: TRISCbits.TRISC7 = 1;
  1274  001122  8E94               	bsf	3988,7,c	;volatile
  1275                           
  1276                           ;Funciones_Db.c: 77: TRISCbits.TRISC6 = 0;
  1277  001124  9C94               	bcf	3988,6,c	;volatile
  1278                           
  1279                           ;Funciones_Db.c: 78: for (i = 1; i <= 50; i++)
  1280  001126  0E00               	movlw	0
  1281  001128  0100               	movlb	0	; () banked
  1282  00112A  6FCE               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1283  00112C  0E01               	movlw	1
  1284  00112E  0100               	movlb	0	; () banked
  1285  001130  6FCD               	movwf	Inicializa_Driveby@i& (0+255),b
  1286  001132                     
  1287                           ; BSR set to: 0
  1288  001132  0100               	movlb	0	; () banked
  1289  001134  51CE               	movf	(Inicializa_Driveby@i+1)& (0+255),w,b
  1290  001136  0A80               	xorlw	128
  1291  001138  0F80               	addlw	-128
  1292  00113A  0E33               	movlw	51
  1293  00113C  B4D8               	btfsc	status,2,c
  1294  00113E  5DCD               	subwf	Inicializa_Driveby@i& (0+255),w,b
  1295  001140  B0D8               	btfsc	status,0,c
  1296  001142  D00D               	goto	l2909
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;Funciones_Db.c: 79: _delay((unsigned long)((20)*(4000000/4000.0)));
  1300                           
  1301                           ; BSR set to: 0
  1302                           
  1303                           ; BSR set to: 0
  1304  001144  0E1A               	movlw	26
  1305  001146  0100               	movlb	0	; () banked
  1306  001148  6FCC               	movwf	??_Inicializa_Driveby& (0+255),b
  1307  00114A  0EF8               	movlw	248
  1308  00114C                     u3197:
  1309  00114C  2EE8               	decfsz	wreg,f,c
  1310  00114E  D7FE               	goto	u3197
  1311  001150  2FCC               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1312  001152  D7FC               	goto	u3197
  1313  001154  D000               	nop2	
  1314  001156  0100               	movlb	0	; () banked
  1315  001158  4BCD               	infsnz	Inicializa_Driveby@i& (0+255),f,b
  1316  00115A  2BCE               	incf	(Inicializa_Driveby@i+1)& (0+255),f,b
  1317  00115C  D7EA               	goto	L1
  1318  00115E                     l2909:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;Funciones_Db.c: 80: PORTE = 0;
  1322  00115E  0E00               	movlw	0
  1323  001160  6E84               	movwf	3972,c	;volatile
  1324                           
  1325                           ;Funciones_Db.c: 81: PORTB = 0;
  1326  001162  0E00               	movlw	0
  1327  001164  6E81               	movwf	3969,c	;volatile
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;Funciones_Db.c: 82: TRISBbits.TRISB0 = 1;
  1331  001166  8093               	bsf	3987,0,c	;volatile
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;Funciones_Db.c: 83: TRISBbits.TRISB1 = 1;
  1335  001168  8293               	bsf	3987,1,c	;volatile
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;Funciones_Db.c: 84: TRISBbits.TRISB2 = 1;
  1339  00116A  8493               	bsf	3987,2,c	;volatile
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;Funciones_Db.c: 85: TRISBbits.TRISB3 = 1;
  1343  00116C  8693               	bsf	3987,3,c	;volatile
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;Funciones_Db.c: 86: TRISBbits.TRISB4 = 1;
  1347  00116E  8893               	bsf	3987,4,c	;volatile
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;Funciones_Db.c: 87: external_interrupt_init();
  1351  001170  EC86  F00E         	call	_external_interrupt_init	;wreg free
  1352                           
  1353                           ;Funciones_Db.c: 90: BT_Init();
  1354  001174  ECCA  F008         	call	_BT_Init	;wreg free
  1355                           
  1356                           ;Funciones_Db.c: 93: Pause_seg(7);
  1357  001178  0E07               	movlw	7
  1358  00117A  ECAA  F00C         	call	_Pause_seg
  1359                           
  1360                           ;Funciones_Db.c: 94: cad = 0;
  1361  00117E  0E00               	movlw	0
  1362  001180  6E55               	movwf	_cad,c
  1363                           
  1364                           ;Funciones_Db.c: 95: clrBufferUSART();
  1365  001182  ECCA  F00D         	call	_clrBufferUSART	;wreg free
  1366                           
  1367                           ;Funciones_Db.c: 98: PWM_init1(0xff);
  1368  001186  0EFF               	movlw	255
  1369  001188  EC52  F00E         	call	_PWM_init1
  1370                           
  1371                           ;Funciones_Db.c: 99: PWM_init2(0xff);
  1372  00118C  0EFF               	movlw	255
  1373  00118E  EC3F  F00E         	call	_PWM_init2
  1374                           
  1375                           ;Funciones_Db.c: 100: return;
  1376  001192  0012               	return	
  1377  001194                     __end_of_Inicializa_Driveby:
  1378                           	opt stack 0
  1379                           tblptru	equ	0xFF8
  1380                           tblptrh	equ	0xFF7
  1381                           tblptrl	equ	0xFF6
  1382                           tablat	equ	0xFF5
  1383                           intcon	equ	0xFF2
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           postdec1	equ	0xFE5
  1387                           fsr1l	equ	0xFE1
  1388                           status	equ	0xFD8
  1389                           
  1390 ;; *************** function _external_interrupt_init *****************
  1391 ;; Defined at:
  1392 ;;		line 103 in file "Funciones_Db.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;		None               void
  1399 ;; Registers used:
  1400 ;;		None
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1406 ;;      Params:         0       0       0       0       0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1409 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1410 ;;Total ram usage:        0 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    4
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_Inicializa_Driveby
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text3
  1421  001D0C                     __ptext3:
  1422                           	opt stack 0
  1423  001D0C                     _external_interrupt_init:
  1424                           	opt stack 25
  1425                           
  1426                           ;Funciones_Db.c: 106: TRISBbits.TRISB0 = 1;
  1427                           
  1428                           ;incstack = 0
  1429  001D0C  8093               	bsf	3987,0,c	;volatile
  1430                           
  1431                           ;Funciones_Db.c: 107: INTCONbits.INT0E = 1;
  1432  001D0E  88F2               	bsf	intcon,4,c	;volatile
  1433                           
  1434                           ;Funciones_Db.c: 108: INTCON2bits.INTEDG0 = 0;
  1435  001D10  9CF1               	bcf	intcon2,6,c	;volatile
  1436                           
  1437                           ;Funciones_Db.c: 109: INTCONbits.INT0F = 0;
  1438  001D12  92F2               	bcf	intcon,1,c	;volatile
  1439                           
  1440                           ;Funciones_Db.c: 111: TRISBbits.TRISB1 = 1;
  1441  001D14  8293               	bsf	3987,1,c	;volatile
  1442                           
  1443                           ;Funciones_Db.c: 112: INTCON3bits.INT1E = 1;
  1444  001D16  86F0               	bsf	intcon3,3,c	;volatile
  1445                           
  1446                           ;Funciones_Db.c: 113: INTCON2bits.INTEDG1 = 0;
  1447  001D18  9AF1               	bcf	intcon2,5,c	;volatile
  1448                           
  1449                           ;Funciones_Db.c: 114: INTCON3bits.INT1F = 0;
  1450  001D1A  90F0               	bcf	intcon3,0,c	;volatile
  1451                           
  1452                           ;Funciones_Db.c: 116: TRISBbits.TRISB2 = 1;
  1453  001D1C  8493               	bsf	3987,2,c	;volatile
  1454                           
  1455                           ;Funciones_Db.c: 117: INTCON3bits.INT2E = 1;
  1456  001D1E  88F0               	bsf	intcon3,4,c	;volatile
  1457                           
  1458                           ;Funciones_Db.c: 118: INTCON2bits.INTEDG2 = 0;
  1459  001D20  98F1               	bcf	intcon2,4,c	;volatile
  1460                           
  1461                           ;Funciones_Db.c: 119: INTCON3bits.INT2F = 0;
  1462  001D22  92F0               	bcf	intcon3,1,c	;volatile
  1463                           
  1464                           ;Funciones_Db.c: 120: return;
  1465  001D24  0012               	return	
  1466  001D26                     __end_of_external_interrupt_init:
  1467                           	opt stack 0
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           intcon	equ	0xFF2
  1473                           intcon2	equ	0xFF1
  1474                           intcon3	equ	0xFF0
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postdec1	equ	0xFE5
  1478                           fsr1l	equ	0xFE1
  1479                           status	equ	0xFD8
  1480                           
  1481 ;; *************** function _PWM_init2 *****************
  1482 ;; Defined at:
  1483 ;;		line 42 in file "pwm.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  period          1    wreg     unsigned char 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  period          1    3[BANK0 ] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;		None               void
  1490 ;; Registers used:
  1491 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0
  1498 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1500 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1501 ;;Total ram usage:        1 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    5
  1504 ;; This function calls:
  1505 ;;		_OpenPWM2
  1506 ;; This function is called by:
  1507 ;;		_Inicializa_Driveby
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text4
  1512  001C7E                     __ptext4:
  1513                           	opt stack 0
  1514  001C7E                     _PWM_init2:
  1515                           	opt stack 24
  1516                           
  1517                           ;incstack = 0
  1518                           ;PWM_init2@period stored from wreg
  1519  001C7E  0100               	movlb	0	; () banked
  1520  001C80  6FAF               	movwf	PWM_init2@period& (0+255),b
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;pwm.c: 43: Timer2Config = 0b11111110;
  1524  001C82  0EFE               	movlw	254
  1525  001C84  0100               	movlb	0	; () banked
  1526  001C86  6FAB               	movwf	_Timer2Config& (0+255),b
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;pwm.c: 44: T2CON = (0xfb & Timer2Config);
  1530  001C88  0100               	movlb	0	; () banked
  1531  001C8A  51AB               	movf	_Timer2Config& (0+255),w,b
  1532  001C8C  0BFB               	andlw	251
  1533  001C8E  6ECA               	movwf	4042,c	;volatile
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;pwm.c: 47: TMR2 = 0;
  1537  001C90  0E00               	movlw	0
  1538  001C92  6ECC               	movwf	4044,c	;volatile
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;pwm.c: 48: PIR1bits.TMR2IF = 0;
  1542  001C94  929E               	bcf	3998,1,c	;volatile
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;pwm.c: 49: PIE1bits.TMR2IE = 0;
  1546  001C96  929D               	bcf	3997,1,c	;volatile
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;pwm.c: 50: T2CONbits.TMR2ON = 1;
  1550  001C98  84CA               	bsf	4042,2,c	;volatile
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;pwm.c: 51: OpenPWM2(period);
  1554  001C9A  0100               	movlb	0	; () banked
  1555  001C9C  51AF               	movf	PWM_init2@period& (0+255),w,b
  1556  001C9E  ECA8  F00D         	call	_OpenPWM2
  1557                           
  1558                           ;pwm.c: 53: return;
  1559  001CA2  0012               	return	
  1560  001CA4                     __end_of_PWM_init2:
  1561                           	opt stack 0
  1562                           tblptru	equ	0xFF8
  1563                           tblptrh	equ	0xFF7
  1564                           tblptrl	equ	0xFF6
  1565                           tablat	equ	0xFF5
  1566                           intcon	equ	0xFF2
  1567                           intcon2	equ	0xFF1
  1568                           intcon3	equ	0xFF0
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           postdec1	equ	0xFE5
  1572                           fsr1l	equ	0xFE1
  1573                           status	equ	0xFD8
  1574                           
  1575 ;; *************** function _OpenPWM2 *****************
  1576 ;; Defined at:
  1577 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  period          1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  period          1    1[BANK0 ] unsigned char 
  1582 ;;  ccp2mx          1    2[BANK0 ] unsigned char 
  1583 ;;  pmmode          1    0        unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;		None               void
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0
  1594 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1595 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1596 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1597 ;;Total ram usage:        3 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    4
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_PWM_init2
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text5
  1608  001B50                     __ptext5:
  1609                           	opt stack 0
  1610  001B50                     _OpenPWM2:
  1611                           	opt stack 24
  1612                           
  1613                           ;incstack = 0
  1614                           ;OpenPWM2@period stored from wreg
  1615  001B50  0100               	movlb	0	; () banked
  1616  001B52  6FAD               	movwf	OpenPWM2@period& (0+255),b
  1617                           
  1618                           ; BSR set to: 0
  1619  001B54  0E0C               	movlw	12
  1620  001B56  6EBA               	movwf	4026,c	;volatile
  1621                           
  1622                           ; BSR set to: 0
  1623  001B58  0E05               	movlw	5
  1624  001B5A  6EF6               	movwf	tblptrl,c
  1625  001B5C                     	if	1	;There is more than 1 active tblptr byte
  1626  001B5C  0E00               	movlw	0
  1627  001B5E  6EF7               	movwf	tblptrh,c
  1628  001B60                     	endif
  1629  001B60                     	if	1	;There are 3 active tblptr bytes
  1630  001B60  0E30               	movlw	48
  1631  001B62  6EF8               	movwf	tblptru,c
  1632  001B64                     	endif
  1633  001B64  0008               	tblrd		*
  1634  001B66  CFF5 F0AC          	movff	tablat,??_OpenPWM2
  1635  001B6A  0100               	movlb	0	; () banked
  1636  001B6C  A1AC               	btfss	??_OpenPWM2& (0+255),0,b
  1637  001B6E  D003               	goto	l2371
  1638                           
  1639                           ; BSR set to: 0
  1640  001B70  0100               	movlb	0	; () banked
  1641  001B72  69AE               	setf	OpenPWM2@ccp2mx& (0+255),b
  1642  001B74  D003               	goto	l472
  1643  001B76                     l2371:
  1644                           
  1645                           ; BSR set to: 0
  1646  001B76  0E00               	movlw	0
  1647  001B78  0100               	movlb	0	; () banked
  1648  001B7A  6FAE               	movwf	OpenPWM2@ccp2mx& (0+255),b
  1649  001B7C                     l472:
  1650                           
  1651                           ; BSR set to: 0
  1652  001B7C  0100               	movlb	0	; () banked
  1653  001B7E  51AE               	movf	OpenPWM2@ccp2mx& (0+255),w,b
  1654  001B80  B4D8               	btfsc	status,2,c
  1655  001B82  D002               	goto	l473
  1656                           
  1657                           ; BSR set to: 0
  1658  001B84  9294               	bcf	3988,1,c	;volatile
  1659  001B86  D001               	goto	l474
  1660  001B88                     l473:
  1661                           
  1662                           ; BSR set to: 0
  1663  001B88  9693               	bcf	3987,3,c	;volatile
  1664  001B8A                     l474:
  1665                           
  1666                           ; BSR set to: 0
  1667  001B8A  94CA               	bcf	4042,2,c	;volatile
  1668  001B8C  C0AD  FFCB         	movff	OpenPWM2@period,4043	;volatile
  1669  001B90  84CA               	bsf	4042,2,c	;volatile
  1670                           
  1671                           ; BSR set to: 0
  1672  001B92  0012               	return	
  1673  001B94                     __end_of_OpenPWM2:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           intcon	equ	0xFF2
  1680                           intcon2	equ	0xFF1
  1681                           intcon3	equ	0xFF0
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1l	equ	0xFE1
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function _PWM_init1 *****************
  1689 ;; Defined at:
  1690 ;;		line 20 in file "pwm.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  period          1    wreg     unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  period          1    1[BANK0 ] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;		None               void
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0
  1705 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1707 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1708 ;;Total ram usage:        1 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    5
  1711 ;; This function calls:
  1712 ;;		_OpenPWM1
  1713 ;; This function is called by:
  1714 ;;		_Inicializa_Driveby
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text6
  1719  001CA4                     __ptext6:
  1720                           	opt stack 0
  1721  001CA4                     _PWM_init1:
  1722                           	opt stack 24
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;incstack = 0
  1726                           ;PWM_init1@period stored from wreg
  1727  001CA4  0100               	movlb	0	; () banked
  1728  001CA6  6FAD               	movwf	PWM_init1@period& (0+255),b
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;pwm.c: 21: Timer2Config = 0b11111110;
  1732  001CA8  0EFE               	movlw	254
  1733  001CAA  0100               	movlb	0	; () banked
  1734  001CAC  6FAB               	movwf	_Timer2Config& (0+255),b
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;pwm.c: 22: T2CON = (0xfb & Timer2Config);
  1738  001CAE  0100               	movlb	0	; () banked
  1739  001CB0  51AB               	movf	_Timer2Config& (0+255),w,b
  1740  001CB2  0BFB               	andlw	251
  1741  001CB4  6ECA               	movwf	4042,c	;volatile
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;pwm.c: 25: TMR2 = 0;
  1745  001CB6  0E00               	movlw	0
  1746  001CB8  6ECC               	movwf	4044,c	;volatile
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;pwm.c: 26: PIR1bits.TMR2IF = 0;
  1750  001CBA  929E               	bcf	3998,1,c	;volatile
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;pwm.c: 27: PIE1bits.TMR2IE = 0;
  1754  001CBC  929D               	bcf	3997,1,c	;volatile
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;pwm.c: 28: T2CONbits.TMR2ON = 1;
  1758  001CBE  84CA               	bsf	4042,2,c	;volatile
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;pwm.c: 29: OpenPWM1(period);
  1762  001CC0  0100               	movlb	0	; () banked
  1763  001CC2  51AD               	movf	PWM_init1@period& (0+255),w,b
  1764  001CC4  ECAB  F00E         	call	_OpenPWM1
  1765                           
  1766                           ;pwm.c: 31: return;
  1767  001CC8  0012               	return	
  1768  001CCA                     __end_of_PWM_init1:
  1769                           	opt stack 0
  1770                           tblptru	equ	0xFF8
  1771                           tblptrh	equ	0xFF7
  1772                           tblptrl	equ	0xFF6
  1773                           tablat	equ	0xFF5
  1774                           intcon	equ	0xFF2
  1775                           intcon2	equ	0xFF1
  1776                           intcon3	equ	0xFF0
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           postdec1	equ	0xFE5
  1780                           fsr1l	equ	0xFE1
  1781                           status	equ	0xFD8
  1782                           
  1783 ;; *************** function _OpenPWM1 *****************
  1784 ;; Defined at:
  1785 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  period          1    wreg     unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  period          1    0[BANK0 ] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;		None               void
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0
  1800 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1802 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1803 ;;Total ram usage:        1 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    4
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_PWM_init1
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text7
  1814  001D56                     __ptext7:
  1815                           	opt stack 0
  1816  001D56                     _OpenPWM1:
  1817                           	opt stack 24
  1818                           
  1819                           ;incstack = 0
  1820                           ;OpenPWM1@period stored from wreg
  1821  001D56  0100               	movlb	0	; () banked
  1822  001D58  6FAC               	movwf	OpenPWM1@period& (0+255),b
  1823                           
  1824                           ; BSR set to: 0
  1825  001D5A  0E0C               	movlw	12
  1826  001D5C  12BD               	iorwf	4029,f,c	;volatile
  1827                           
  1828                           ; BSR set to: 0
  1829  001D5E  9494               	bcf	3988,2,c	;volatile
  1830                           
  1831                           ; BSR set to: 0
  1832  001D60  94CA               	bcf	4042,2,c	;volatile
  1833                           
  1834                           ; BSR set to: 0
  1835  001D62  C0AC  FFCB         	movff	OpenPWM1@period,4043	;volatile
  1836                           
  1837                           ; BSR set to: 0
  1838  001D66  84CA               	bsf	4042,2,c	;volatile
  1839                           
  1840                           ; BSR set to: 0
  1841  001D68  0012               	return	
  1842  001D6A                     __end_of_OpenPWM1:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           intcon	equ	0xFF2
  1849                           intcon2	equ	0xFF1
  1850                           intcon3	equ	0xFF0
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           postdec1	equ	0xFE5
  1854                           fsr1l	equ	0xFE1
  1855                           status	equ	0xFD8
  1856                           
  1857 ;; *************** function _BT_Init *****************
  1858 ;; Defined at:
  1859 ;;		line 16 in file "Bluetooth.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  nameBT         18   14[BANK0 ] unsigned char [18]
  1864 ;; Return value:  Size  Location     Type
  1865 ;;		None               void
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1873 ;;      Params:         0       0       0       0       0       0       0       0       0
  1874 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1876 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1877 ;;Total ram usage:       18 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    8
  1880 ;; This function calls:
  1881 ;;		_Pause_seg
  1882 ;;		_SendBlueToothCommand
  1883 ;;		_UART1_Init
  1884 ;; This function is called by:
  1885 ;;		_Inicializa_Driveby
  1886 ;;		_EstadoBluetooth
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text8
  1891  001194                     __ptext8:
  1892                           	opt stack 0
  1893  001194                     _BT_Init:
  1894                           	opt stack 21
  1895                           
  1896                           ;Bluetooth.c: 18: UART1_Init(51);
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;incstack = 0
  1900  001194  0E33               	movlw	51
  1901  001196  ECA0  F00E         	call	_UART1_Init
  1902                           
  1903                           ;Bluetooth.c: 21: Pause_seg(1);
  1904  00119A  0E01               	movlw	1
  1905  00119C  ECAA  F00C         	call	_Pause_seg
  1906                           
  1907                           ;Bluetooth.c: 22: char nameBT[18] = {
  1908                           ;Bluetooth.c: 23: "AT+NAME=robot\r\n\0"
  1909                           ;Bluetooth.c: 24: };
  1910  0011A0  EE20  F0E4         	lfsr	2,BT_Init@F5675
  1911  0011A4  EE10  F0BA         	lfsr	1,BT_Init@nameBT
  1912  0011A8  0E12               	movlw	18
  1913  0011AA                     u2241:
  1914  0011AA  CFDE FFE6          	movff	postinc2,postinc1
  1915  0011AE  2EE8               	decfsz	wreg,f,c
  1916  0011B0  D7FC               	goto	u2241
  1917                           
  1918                           ;Bluetooth.c: 27: SendBlueToothCommand("AT+ROLE=0\r\n", 11);
  1919  0011B2  0E08               	movlw	high STR_1
  1920  0011B4  0100               	movlb	0	; () banked
  1921  0011B6  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1922  0011B8  0E52               	movlw	low STR_1
  1923  0011BA  0100               	movlb	0	; () banked
  1924  0011BC  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1925  0011BE  0E00               	movlw	0
  1926  0011C0  0100               	movlb	0	; () banked
  1927  0011C2  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1928  0011C4  0E0B               	movlw	11
  1929  0011C6  0100               	movlb	0	; () banked
  1930  0011C8  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1931  0011CA  EC93  F00E         	call	_SendBlueToothCommand	;wreg free
  1932                           
  1933                           ;Bluetooth.c: 29: Pause_seg(1);
  1934  0011CE  0E01               	movlw	1
  1935  0011D0  ECAA  F00C         	call	_Pause_seg
  1936                           
  1937                           ;Bluetooth.c: 32: SendBlueToothCommand((const char * ) nameBT, sizeof(nameBT));
  1938  0011D4  0100               	movlb	0	; () banked
  1939  0011D6  0E00               	movlw	high BT_Init@nameBT
  1940  0011D8  0100               	movlb	0	; () banked
  1941  0011DA  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1942  0011DC  0100               	movlb	0	; () banked
  1943  0011DE  0EBA               	movlw	low BT_Init@nameBT
  1944  0011E0  0100               	movlb	0	; () banked
  1945  0011E2  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1946  0011E4  0E00               	movlw	0
  1947  0011E6  0100               	movlb	0	; () banked
  1948  0011E8  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1949  0011EA  0E12               	movlw	18
  1950  0011EC  0100               	movlb	0	; () banked
  1951  0011EE  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1952  0011F0  EC93  F00E         	call	_SendBlueToothCommand	;wreg free
  1953                           
  1954                           ;Bluetooth.c: 33: Pause_seg(2);
  1955  0011F4  0E02               	movlw	2
  1956  0011F6  ECAA  F00C         	call	_Pause_seg
  1957                           
  1958                           ;Bluetooth.c: 35: SendBlueToothCommand("AT+PSWD=0000\r\n", 14);
  1959  0011FA  0E08               	movlw	high STR_2
  1960  0011FC  0100               	movlb	0	; () banked
  1961  0011FE  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1962  001200  0E0B               	movlw	low STR_2
  1963  001202  0100               	movlb	0	; () banked
  1964  001204  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1965  001206  0E00               	movlw	0
  1966  001208  0100               	movlb	0	; () banked
  1967  00120A  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1968  00120C  0E0E               	movlw	14
  1969  00120E  0100               	movlb	0	; () banked
  1970  001210  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1971  001212  EC93  F00E         	call	_SendBlueToothCommand	;wreg free
  1972                           
  1973                           ;Bluetooth.c: 36: Pause_seg(2);
  1974  001216  0E02               	movlw	2
  1975  001218  ECAA  F00C         	call	_Pause_seg
  1976                           
  1977                           ;Bluetooth.c: 40: SendBlueToothCommand("AT+INQ\r\n", 8);
  1978  00121C  0E08               	movlw	high STR_3
  1979  00121E  0100               	movlb	0	; () banked
  1980  001220  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1981  001222  0E5E               	movlw	low STR_3
  1982  001224  0100               	movlb	0	; () banked
  1983  001226  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1984  001228  0E00               	movlw	0
  1985  00122A  0100               	movlb	0	; () banked
  1986  00122C  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1987  00122E  0E08               	movlw	8
  1988  001230  0100               	movlb	0	; () banked
  1989  001232  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1990  001234  EC93  F00E         	call	_SendBlueToothCommand	;wreg free
  1991                           
  1992                           ;Bluetooth.c: 41: Pause_seg(2);
  1993  001238  0E02               	movlw	2
  1994  00123A  ECAA  F00C         	call	_Pause_seg
  1995                           
  1996                           ;Bluetooth.c: 43: SendBlueToothCommand("AT+INQ\r\n", 8);
  1997  00123E  0E08               	movlw	high STR_3
  1998  001240  0100               	movlb	0	; () banked
  1999  001242  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  2000  001244  0E5E               	movlw	low STR_3
  2001  001246  0100               	movlb	0	; () banked
  2002  001248  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  2003  00124A  0E00               	movlw	0
  2004  00124C  0100               	movlb	0	; () banked
  2005  00124E  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  2006  001250  0E08               	movlw	8
  2007  001252  0100               	movlb	0	; () banked
  2008  001254  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  2009  001256  EC93  F00E         	call	_SendBlueToothCommand	;wreg free
  2010                           
  2011                           ;Bluetooth.c: 44: Pause_seg(2);
  2012  00125A  0E02               	movlw	2
  2013  00125C  ECAA  F00C         	call	_Pause_seg
  2014                           
  2015                           ;Bluetooth.c: 45: return;
  2016  001260  0012               	return	
  2017  001262                     __end_of_BT_Init:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           intcon	equ	0xFF2
  2024                           intcon2	equ	0xFF1
  2025                           intcon3	equ	0xFF0
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           postinc1	equ	0xFE6
  2029                           postdec1	equ	0xFE5
  2030                           fsr1l	equ	0xFE1
  2031                           postinc2	equ	0xFDE
  2032                           status	equ	0xFD8
  2033                           
  2034 ;; *************** function _SendBlueToothCommand *****************
  2035 ;; Defined at:
  2036 ;;		line 48 in file "Bluetooth.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  command         2   10[BANK0 ] PTR const unsigned char 
  2039 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  2040 ;;		 -> BT_Init@nameBT(18), 
  2041 ;;  total           2   12[BANK0 ] unsigned int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;		None               void
  2046 ;; Registers used:
  2047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2053 ;;      Params:         0       4       0       0       0       0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2056 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2057 ;;Total ram usage:        4 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    7
  2060 ;; This function calls:
  2061 ;;		_putSTRINGU1
  2062 ;; This function is called by:
  2063 ;;		_BT_Init
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text9
  2068  001D26                     __ptext9:
  2069                           	opt stack 0
  2070  001D26                     _SendBlueToothCommand:
  2071                           	opt stack 21
  2072                           
  2073                           ;Bluetooth.c: 49: putSTRINGU1(command, total);
  2074                           
  2075                           ;incstack = 0
  2076  001D26  0100               	movlb	0	; () banked
  2077  001D28  C0B7  F0AF         	movff	SendBlueToothCommand@command+1,putSTRINGU1@dato+1
  2078  001D2C  0100               	movlb	0	; () banked
  2079  001D2E  C0B6  F0AE         	movff	SendBlueToothCommand@command,putSTRINGU1@dato
  2080  001D32  C0B8  F0B0         	movff	SendBlueToothCommand@total,putSTRINGU1@total
  2081  001D36  C0B9  F0B1         	movff	SendBlueToothCommand@total+1,putSTRINGU1@total+1
  2082  001D3A  EC94  F009         	call	_putSTRINGU1	;wreg free
  2083                           
  2084                           ;Bluetooth.c: 50: return;
  2085  001D3E  0012               	return	
  2086  001D40                     __end_of_SendBlueToothCommand:
  2087                           	opt stack 0
  2088                           tblptru	equ	0xFF8
  2089                           tblptrh	equ	0xFF7
  2090                           tblptrl	equ	0xFF6
  2091                           tablat	equ	0xFF5
  2092                           intcon	equ	0xFF2
  2093                           intcon2	equ	0xFF1
  2094                           intcon3	equ	0xFF0
  2095                           postinc0	equ	0xFEE
  2096                           wreg	equ	0xFE8
  2097                           postinc1	equ	0xFE6
  2098                           postdec1	equ	0xFE5
  2099                           fsr1l	equ	0xFE1
  2100                           postinc2	equ	0xFDE
  2101                           status	equ	0xFD8
  2102                           
  2103 ;; *************** function _putSTRINGU1 *****************
  2104 ;; Defined at:
  2105 ;;		line 18 in file "UART1.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  dato            2    2[BANK0 ] PTR const unsigned char 
  2108 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  2109 ;;		 -> BT_Init@nameBT(18), 
  2110 ;;  total           2    4[BANK0 ] unsigned int 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  cont            1    9[BANK0 ] unsigned char 
  2113 ;;  last            1    8[BANK0 ] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       4       0       0       0       0       0       0       0
  2124 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2126 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        8 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    6
  2130 ;; This function calls:
  2131 ;;		_putcTxU1
  2132 ;; This function is called by:
  2133 ;;		_SendBlueToothCommand
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text10
  2138  001328                     __ptext10:
  2139                           	opt stack 0
  2140  001328                     _putSTRINGU1:
  2141                           	opt stack 21
  2142                           
  2143                           ;UART1.c: 19: unsigned char cont,last;
  2144                           ;UART1.c: 21: for(cont=0,last=0;cont<total;cont++){
  2145                           
  2146                           ;incstack = 0
  2147  001328  0E00               	movlw	0
  2148  00132A  0100               	movlb	0	; () banked
  2149  00132C  6FB5               	movwf	putSTRINGU1@cont& (0+255),b
  2150  00132E  0E00               	movlw	0
  2151  001330  0100               	movlb	0	; () banked
  2152  001332  6FB4               	movwf	putSTRINGU1@last& (0+255),b
  2153  001334  D025               	goto	l2137
  2154  001336                     l2131:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;UART1.c: 22: if(dato[cont]!='\0') last=cont;
  2158  001336  0100               	movlb	0	; () banked
  2159  001338  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2160  00133A  0D01               	mullw	1
  2161  00133C  0100               	movlb	0	; () banked
  2162  00133E  C0AE  F0B2         	movff	putSTRINGU1@dato,??_putSTRINGU1
  2163  001342  0100               	movlb	0	; () banked
  2164  001344  C0AF  F0B3         	movff	putSTRINGU1@dato+1,??_putSTRINGU1+1
  2165  001348  50F3               	movf	prodl,w,c
  2166  00134A  0100               	movlb	0	; () banked
  2167  00134C  27B2               	addwf	??_putSTRINGU1& (0+255),f,b
  2168  00134E  50F4               	movf	prodh,w,c
  2169  001350  0100               	movlb	0	; () banked
  2170  001352  23B3               	addwfc	(??_putSTRINGU1+1)& (0+255),f,b
  2171  001354  C0B2  FFF6         	movff	??_putSTRINGU1,tblptrl
  2172  001358  C0B3  FFF7         	movff	??_putSTRINGU1+1,tblptrh
  2173  00135C  6AF8               	clrf	tblptru,c
  2174  00135E  0E07               	movlw	(high __ramtop+-1)
  2175  001360  64F7               	cpfsgt	tblptrh,c
  2176  001362  D003               	bra	u1617
  2177  001364  0008               	tblrd		*
  2178  001366  50F5               	movf	tablat,w,c
  2179  001368  D005               	bra	u1610
  2180  00136A                     u1617:
  2181  00136A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2182  00136E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2183  001372  50EF               	movf	indf0,w,c
  2184  001374                     u1610:
  2185  001374  0900               	iorlw	0
  2186  001376  A4D8               	btfss	status,2,c
  2187  001378  C0B5  F0B4         	movff	putSTRINGU1@cont,putSTRINGU1@last
  2188  00137C  0100               	movlb	0	; () banked
  2189  00137E  2BB5               	incf	putSTRINGU1@cont& (0+255),f,b
  2190  001380                     l2137:
  2191                           
  2192                           ; BSR set to: 0
  2193  001380  0100               	movlb	0	; () banked
  2194  001382  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2195  001384  0100               	movlb	0	; () banked
  2196  001386  6FB2               	movwf	??_putSTRINGU1& (0+255),b
  2197  001388  6BB3               	clrf	(??_putSTRINGU1+1)& (0+255),b
  2198  00138A  0100               	movlb	0	; () banked
  2199  00138C  51B0               	movf	putSTRINGU1@total& (0+255),w,b
  2200  00138E  0100               	movlb	0	; () banked
  2201  001390  5DB2               	subwf	??_putSTRINGU1& (0+255),w,b
  2202  001392  0100               	movlb	0	; () banked
  2203  001394  51B1               	movf	(putSTRINGU1@total+1)& (0+255),w,b
  2204  001396  0100               	movlb	0	; () banked
  2205  001398  59B3               	subwfb	(??_putSTRINGU1+1)& (0+255),w,b
  2206  00139A  A0D8               	btfss	status,0,c
  2207  00139C  D7CC               	goto	l2131
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;UART1.c: 23: }
  2211                           ;UART1.c: 25: for (cont=0;cont<=last;cont++){
  2212                           
  2213                           ; BSR set to: 0
  2214  00139E  0E00               	movlw	0
  2215  0013A0  0100               	movlb	0	; () banked
  2216  0013A2  6FB5               	movwf	putSTRINGU1@cont& (0+255),b
  2217  0013A4  D019               	goto	l2147
  2218  0013A6                     l2141:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;UART1.c: 26: putcTxU1(*dato++);
  2222  0013A6  0100               	movlb	0	; () banked
  2223  0013A8  C0AE  FFF6         	movff	putSTRINGU1@dato,tblptrl
  2224  0013AC  0100               	movlb	0	; () banked
  2225  0013AE  C0AF  FFF7         	movff	putSTRINGU1@dato+1,tblptrh
  2226  0013B2  6AF8               	clrf	tblptru,c
  2227  0013B4  0E07               	movlw	(high __ramtop+-1)
  2228  0013B6  64F7               	cpfsgt	tblptrh,c
  2229  0013B8  D003               	bra	u1647
  2230  0013BA  0008               	tblrd		*
  2231  0013BC  50F5               	movf	tablat,w,c
  2232  0013BE  D005               	bra	u1640
  2233  0013C0                     u1647:
  2234  0013C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2235  0013C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2236  0013C8  50EF               	movf	indf0,w,c
  2237  0013CA                     u1640:
  2238  0013CA  ECC8  F00E         	call	_putcTxU1
  2239  0013CE  0100               	movlb	0	; () banked
  2240  0013D0  4BAE               	infsnz	putSTRINGU1@dato& (0+255),f,b
  2241  0013D2  2BAF               	incf	(putSTRINGU1@dato+1)& (0+255),f,b
  2242                           
  2243                           ; BSR set to: 0
  2244  0013D4  0100               	movlb	0	; () banked
  2245  0013D6  2BB5               	incf	putSTRINGU1@cont& (0+255),f,b
  2246  0013D8                     l2147:
  2247                           
  2248                           ; BSR set to: 0
  2249  0013D8  0100               	movlb	0	; () banked
  2250  0013DA  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2251  0013DC  0100               	movlb	0	; () banked
  2252  0013DE  5DB4               	subwf	putSTRINGU1@last& (0+255),w,b
  2253  0013E0  A0D8               	btfss	status,0,c
  2254                           
  2255                           ; BSR set to: 0
  2256                           
  2257                           ; BSR set to: 0
  2258  0013E2  0012               	return	
  2259  0013E4  D7E0               	goto	l2141
  2260  0013E6                     __end_of_putSTRINGU1:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           prodh	equ	0xFF4
  2267                           prodl	equ	0xFF3
  2268                           intcon	equ	0xFF2
  2269                           intcon2	equ	0xFF1
  2270                           intcon3	equ	0xFF0
  2271                           indf0	equ	0xFEF
  2272                           postinc0	equ	0xFEE
  2273                           fsr0h	equ	0xFEA
  2274                           fsr0l	equ	0xFE9
  2275                           wreg	equ	0xFE8
  2276                           postinc1	equ	0xFE6
  2277                           postdec1	equ	0xFE5
  2278                           fsr1l	equ	0xFE1
  2279                           postinc2	equ	0xFDE
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _putcTxU1 *****************
  2283 ;; Defined at:
  2284 ;;		line 12 in file "UART1.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  character       1    wreg     unsigned char 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  character       1    1[BANK0 ] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2298 ;;      Params:         0       0       0       0       0       0       0       0       0
  2299 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2301 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    5
  2305 ;; This function calls:
  2306 ;;		_WriteUSART
  2307 ;; This function is called by:
  2308 ;;		_putSTRINGU1
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text11
  2313  001D90                     __ptext11:
  2314                           	opt stack 0
  2315  001D90                     _putcTxU1:
  2316                           	opt stack 21
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;incstack = 0
  2320                           ;putcTxU1@character stored from wreg
  2321  001D90  0100               	movlb	0	; () banked
  2322  001D92  6FAD               	movwf	putcTxU1@character& (0+255),b
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;UART1.c: 14: WriteUSART(character);
  2326  001D94  0100               	movlb	0	; () banked
  2327  001D96  51AD               	movf	putcTxU1@character& (0+255),w,b
  2328  001D98  ECB5  F00E         	call	_WriteUSART
  2329  001D9C                     l235:
  2330  001D9C  B2AC               	btfsc	4012,1,c	;volatile
  2331  001D9E  0012               	return	
  2332  001DA0  D7FD               	goto	l235
  2333  001DA2                     __end_of_putcTxU1:
  2334                           	opt stack 0
  2335                           tblptru	equ	0xFF8
  2336                           tblptrh	equ	0xFF7
  2337                           tblptrl	equ	0xFF6
  2338                           tablat	equ	0xFF5
  2339                           prodh	equ	0xFF4
  2340                           prodl	equ	0xFF3
  2341                           intcon	equ	0xFF2
  2342                           intcon2	equ	0xFF1
  2343                           intcon3	equ	0xFF0
  2344                           indf0	equ	0xFEF
  2345                           postinc0	equ	0xFEE
  2346                           fsr0h	equ	0xFEA
  2347                           fsr0l	equ	0xFE9
  2348                           wreg	equ	0xFE8
  2349                           postinc1	equ	0xFE6
  2350                           postdec1	equ	0xFE5
  2351                           fsr1l	equ	0xFE1
  2352                           postinc2	equ	0xFDE
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function _Pause_seg *****************
  2356 ;; Defined at:
  2357 ;;		line 18 in file "Retardos.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  x               1    wreg     unsigned char 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  x               1    5[BANK0 ] unsigned char 
  2362 ;;  i               1    6[BANK0 ] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;		None               void
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2372 ;;      Params:         0       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2376 ;;Total ram usage:        2 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    5
  2379 ;; This function calls:
  2380 ;;		_Pause_ms
  2381 ;; This function is called by:
  2382 ;;		_BT_Init
  2383 ;;		_Inicializa_Driveby
  2384 ;;		_EstadoBluetooth
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text12
  2389  001954                     __ptext12:
  2390                           	opt stack 0
  2391  001954                     _Pause_seg:
  2392                           	opt stack 24
  2393                           
  2394                           ;incstack = 0
  2395                           ;Pause_seg@x stored from wreg
  2396  001954  0100               	movlb	0	; () banked
  2397  001956  6FB1               	movwf	Pause_seg@x& (0+255),b
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;Retardos.c: 19: unsigned char i=0;
  2401  001958  0E00               	movlw	0
  2402  00195A  0100               	movlb	0	; () banked
  2403  00195C  6FB2               	movwf	Pause_seg@i& (0+255),b
  2404                           
  2405                           ;Retardos.c: 20: for(i=0;i<=x;i++){
  2406  00195E  0E00               	movlw	0
  2407  001960  0100               	movlb	0	; () banked
  2408  001962  6FB2               	movwf	Pause_seg@i& (0+255),b
  2409  001964  D022               	goto	l2285
  2410  001966                     l2281:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;Retardos.c: 21: Pause_ms(250);Pause_ms(250);
  2414  001966  0E00               	movlw	0
  2415  001968  0100               	movlb	0	; () banked
  2416  00196A  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2417  00196C  0EFA               	movlw	250
  2418  00196E  0100               	movlb	0	; () banked
  2419  001970  6FAC               	movwf	Pause_ms@x& (0+255),b
  2420  001972  EC85  F00D         	call	_Pause_ms	;wreg free
  2421  001976  0E00               	movlw	0
  2422  001978  0100               	movlb	0	; () banked
  2423  00197A  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2424  00197C  0EFA               	movlw	250
  2425  00197E  0100               	movlb	0	; () banked
  2426  001980  6FAC               	movwf	Pause_ms@x& (0+255),b
  2427  001982  EC85  F00D         	call	_Pause_ms	;wreg free
  2428                           
  2429                           ;Retardos.c: 22: Pause_ms(250);Pause_ms(250);
  2430  001986  0E00               	movlw	0
  2431  001988  0100               	movlb	0	; () banked
  2432  00198A  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2433  00198C  0EFA               	movlw	250
  2434  00198E  0100               	movlb	0	; () banked
  2435  001990  6FAC               	movwf	Pause_ms@x& (0+255),b
  2436  001992  EC85  F00D         	call	_Pause_ms	;wreg free
  2437  001996  0E00               	movlw	0
  2438  001998  0100               	movlb	0	; () banked
  2439  00199A  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2440  00199C  0EFA               	movlw	250
  2441  00199E  0100               	movlb	0	; () banked
  2442  0019A0  6FAC               	movwf	Pause_ms@x& (0+255),b
  2443  0019A2  EC85  F00D         	call	_Pause_ms	;wreg free
  2444  0019A6  0100               	movlb	0	; () banked
  2445  0019A8  2BB2               	incf	Pause_seg@i& (0+255),f,b
  2446  0019AA                     l2285:
  2447                           
  2448                           ; BSR set to: 0
  2449  0019AA  0100               	movlb	0	; () banked
  2450  0019AC  51B2               	movf	Pause_seg@i& (0+255),w,b
  2451  0019AE  0100               	movlb	0	; () banked
  2452  0019B0  5DB1               	subwf	Pause_seg@x& (0+255),w,b
  2453  0019B2  A0D8               	btfss	status,0,c
  2454                           
  2455                           ; BSR set to: 0
  2456                           
  2457                           ; BSR set to: 0
  2458  0019B4  0012               	return	
  2459  0019B6  D7D7               	goto	l2281
  2460  0019B8                     __end_of_Pause_seg:
  2461                           	opt stack 0
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           prodh	equ	0xFF4
  2467                           prodl	equ	0xFF3
  2468                           intcon	equ	0xFF2
  2469                           intcon2	equ	0xFF1
  2470                           intcon3	equ	0xFF0
  2471                           indf0	equ	0xFEF
  2472                           postinc0	equ	0xFEE
  2473                           fsr0h	equ	0xFEA
  2474                           fsr0l	equ	0xFE9
  2475                           wreg	equ	0xFE8
  2476                           postinc1	equ	0xFE6
  2477                           postdec1	equ	0xFE5
  2478                           fsr1l	equ	0xFE1
  2479                           postinc2	equ	0xFDE
  2480                           status	equ	0xFD8
  2481                           
  2482 ;; *************** function _Pause_ms *****************
  2483 ;; Defined at:
  2484 ;;		line 11 in file "Retardos.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  x               2    0[BANK0 ] unsigned int 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  i               2    3[BANK0 ] unsigned int 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;		None               void
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2498 ;;      Params:         0       2       0       0       0       0       0       0       0
  2499 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2500 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2501 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2502 ;;Total ram usage:        5 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    4
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_Pause_seg
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text13
  2513  001B0A                     __ptext13:
  2514                           	opt stack 0
  2515  001B0A                     _Pause_ms:
  2516                           	opt stack 24
  2517                           
  2518                           ;Retardos.c: 12: unsigned int i=0;
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;incstack = 0
  2522  001B0A  0E00               	movlw	0
  2523  001B0C  0100               	movlb	0	; () banked
  2524  001B0E  6FB0               	movwf	(Pause_ms@i+1)& (0+255),b
  2525  001B10  0E00               	movlw	0
  2526  001B12  0100               	movlb	0	; () banked
  2527  001B14  6FAF               	movwf	Pause_ms@i& (0+255),b
  2528                           
  2529                           ;Retardos.c: 13: for(i=0;i<=x;i++){
  2530  001B16  0E00               	movlw	0
  2531  001B18  0100               	movlb	0	; () banked
  2532  001B1A  6FB0               	movwf	(Pause_ms@i+1)& (0+255),b
  2533  001B1C  0E00               	movlw	0
  2534  001B1E  0100               	movlb	0	; () banked
  2535  001B20  6FAF               	movwf	Pause_ms@i& (0+255),b
  2536  001B22  D00B               	goto	l214
  2537  001B24                     l2151:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;Retardos.c: 14: _delay((unsigned long)((1)*(8000000/4000.0)));
  2541  001B24  0E03               	movlw	3
  2542  001B26  0100               	movlb	0	; () banked
  2543  001B28  6FAE               	movwf	??_Pause_ms& (0+255),b
  2544  001B2A  0E98               	movlw	152
  2545  001B2C                     u3207:
  2546  001B2C  2EE8               	decfsz	wreg,f,c
  2547  001B2E  D7FE               	goto	u3207
  2548  001B30  2FAE               	decfsz	??_Pause_ms& (0+255),f,b
  2549  001B32  D7FC               	goto	u3207
  2550  001B34  0100               	movlb	0	; () banked
  2551  001B36  4BAF               	infsnz	Pause_ms@i& (0+255),f,b
  2552  001B38  2BB0               	incf	(Pause_ms@i+1)& (0+255),f,b
  2553  001B3A                     l214:
  2554                           
  2555                           ; BSR set to: 0
  2556  001B3A  0100               	movlb	0	; () banked
  2557  001B3C  51AF               	movf	Pause_ms@i& (0+255),w,b
  2558  001B3E  0100               	movlb	0	; () banked
  2559  001B40  5DAC               	subwf	Pause_ms@x& (0+255),w,b
  2560  001B42  0100               	movlb	0	; () banked
  2561  001B44  51B0               	movf	(Pause_ms@i+1)& (0+255),w,b
  2562  001B46  0100               	movlb	0	; () banked
  2563  001B48  59AD               	subwfb	(Pause_ms@x+1)& (0+255),w,b
  2564  001B4A  A0D8               	btfss	status,0,c
  2565                           
  2566                           ; BSR set to: 0
  2567                           
  2568                           ; BSR set to: 0
  2569  001B4C  0012               	return	
  2570  001B4E  D7EA               	goto	l2151
  2571  001B50                     __end_of_Pause_ms:
  2572                           	opt stack 0
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           prodh	equ	0xFF4
  2578                           prodl	equ	0xFF3
  2579                           intcon	equ	0xFF2
  2580                           intcon2	equ	0xFF1
  2581                           intcon3	equ	0xFF0
  2582                           indf0	equ	0xFEF
  2583                           postinc0	equ	0xFEE
  2584                           fsr0h	equ	0xFEA
  2585                           fsr0l	equ	0xFE9
  2586                           wreg	equ	0xFE8
  2587                           postinc1	equ	0xFE6
  2588                           postdec1	equ	0xFE5
  2589                           fsr1l	equ	0xFE1
  2590                           postinc2	equ	0xFDE
  2591                           status	equ	0xFD8
  2592                           
  2593 ;; *************** function _Comando_Tablet *****************
  2594 ;; Defined at:
  2595 ;;		line 124 in file "Funciones_Db.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  sensed          2   54[BANK0 ] int 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0
  2610 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2612 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2613 ;;Total ram usage:        2 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    7
  2616 ;; This function calls:
  2617 ;;		_PWM_DutyCycle1
  2618 ;;		_PWM_DutyCycle2
  2619 ;;		_clrBufferUSART
  2620 ;;		_getCNY70Value
  2621 ;;		_putcBluetoothInt
  2622 ;;		_putcBluetoothString
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text14
  2629  00178E                     __ptext14:
  2630                           	opt stack 0
  2631  00178E                     _Comando_Tablet:
  2632                           	opt stack 23
  2633                           
  2634                           ;Funciones_Db.c: 126: int sensed=0;
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;incstack = 0
  2638  00178E  0E00               	movlw	0
  2639  001790  0100               	movlb	0	; () banked
  2640  001792  6FE3               	movwf	(Comando_Tablet@sensed+1)& (0+255),b
  2641  001794  0E00               	movlw	0
  2642  001796  0100               	movlb	0	; () banked
  2643  001798  6FE2               	movwf	Comando_Tablet@sensed& (0+255),b
  2644                           
  2645                           ;Funciones_Db.c: 127: switch (BluetoothDato[1]) {
  2646  00179A  D022               	goto	l2949
  2647  00179C                     l194:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;Funciones_Db.c: 140: PORTAbits.RA1 = ~ PORTAbits.RA1;
  2651  00179C  7280               	btg	3968,1,c	;volatile
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;Funciones_Db.c: 141: sensed = getCNY70Value();
  2655  00179E  EC31  F009         	call	_getCNY70Value	;wreg free
  2656  0017A2  0100               	movlb	0	; () banked
  2657  0017A4  C0AC  F0E2         	movff	?_getCNY70Value,Comando_Tablet@sensed
  2658  0017A8  0100               	movlb	0	; () banked
  2659  0017AA  C0AD  F0E3         	movff	?_getCNY70Value+1,Comando_Tablet@sensed+1
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;Funciones_Db.c: 143: putcBluetoothInt(sensed);
  2663  0017AE  C0E2  F0CA         	movff	Comando_Tablet@sensed,putcBluetoothInt@a
  2664  0017B2  C0E3  F0CB         	movff	Comando_Tablet@sensed+1,putcBluetoothInt@a+1
  2665  0017B6  EC8B  F00A         	call	_putcBluetoothInt	;wreg free
  2666                           
  2667                           ;Funciones_Db.c: 144: putcBluetoothString("\n");
  2668  0017BA  0E08               	movlw	high (STR_2+13)
  2669  0017BC  0100               	movlb	0	; () banked
  2670  0017BE  6FB4               	movwf	(putcBluetoothString@a+1)& (0+255),b
  2671  0017C0  0E18               	movlw	low (STR_2+13)
  2672  0017C2  0100               	movlb	0	; () banked
  2673  0017C4  6FB3               	movwf	putcBluetoothString@a& (0+255),b
  2674  0017C6  EC47  F00A         	call	_putcBluetoothString	;wreg free
  2675                           
  2676                           ;Funciones_Db.c: 145: break;
  2677  0017CA  D01B               	goto	l2951
  2678  0017CC                     l195:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;Funciones_Db.c: 147: PORTAbits.RA0 = ~ PORTAbits.RA0;
  2682  0017CC  7080               	btg	3968,0,c	;volatile
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;Funciones_Db.c: 151: PWM_DutyCycle1(BluetoothDato[3]);
  2686  0017CE  0100               	movlb	0	; () banked
  2687  0017D0  5168               	movf	(_BluetoothDato+3)& (0+255),w,b
  2688  0017D2  EC4C  F00B         	call	_PWM_DutyCycle1
  2689                           
  2690                           ;Funciones_Db.c: 152: PWM_DutyCycle2(BluetoothDato[4]);
  2691  0017D6  0100               	movlb	0	; () banked
  2692  0017D8  5169               	movf	(_BluetoothDato+4)& (0+255),w,b
  2693  0017DA  EC0E  F00B         	call	_PWM_DutyCycle2
  2694                           
  2695                           ;Funciones_Db.c: 153: break;
  2696  0017DE  D011               	goto	l2951
  2697  0017E0                     l2949:
  2698  0017E0  0100               	movlb	0	; () banked
  2699  0017E2  5166               	movf	(_BluetoothDato+1)& (0+255),w,b
  2700                           
  2701                           ; Switch size 1, requested type "space"
  2702                           ; Number of cases is 5, Range of values is 1 to 5
  2703                           ; switch strategies available:
  2704                           ; Name         Instructions Cycles
  2705                           ; simple_byte           16     9 (average)
  2706                           ;	Chosen strategy is simple_byte
  2707  0017E4  0A01               	xorlw	1	; case 1
  2708  0017E6  B4D8               	btfsc	status,2,c
  2709  0017E8  D00C               	goto	l2951
  2710  0017EA  0A03               	xorlw	3	; case 2
  2711  0017EC  B4D8               	btfsc	status,2,c
  2712  0017EE  D009               	goto	l2951
  2713  0017F0  0A01               	xorlw	1	; case 3
  2714  0017F2  B4D8               	btfsc	status,2,c
  2715  0017F4  D006               	goto	l2951
  2716  0017F6  0A07               	xorlw	7	; case 4
  2717  0017F8  B4D8               	btfsc	status,2,c
  2718  0017FA  D7D0               	goto	l194
  2719  0017FC  0A01               	xorlw	1	; case 5
  2720  0017FE  B4D8               	btfsc	status,2,c
  2721  001800  D7E5               	goto	l195
  2722  001802                     l2951:
  2723                           
  2724                           ;Funciones_Db.c: 158: clrBufferUSART();
  2725  001802  ECCA  F00D         	call	_clrBufferUSART	;wreg free
  2726                           
  2727                           ;Funciones_Db.c: 159: return;
  2728  001806  0012               	return	
  2729  001808                     __end_of_Comando_Tablet:
  2730                           	opt stack 0
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           prodh	equ	0xFF4
  2736                           prodl	equ	0xFF3
  2737                           intcon	equ	0xFF2
  2738                           intcon2	equ	0xFF1
  2739                           intcon3	equ	0xFF0
  2740                           indf0	equ	0xFEF
  2741                           postinc0	equ	0xFEE
  2742                           fsr0h	equ	0xFEA
  2743                           fsr0l	equ	0xFE9
  2744                           wreg	equ	0xFE8
  2745                           postinc1	equ	0xFE6
  2746                           postdec1	equ	0xFE5
  2747                           fsr1l	equ	0xFE1
  2748                           postinc2	equ	0xFDE
  2749                           status	equ	0xFD8
  2750                           
  2751 ;; *************** function _putcBluetoothString *****************
  2752 ;; Defined at:
  2753 ;;		line 90 in file "Bluetooth.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  a               2    7[BANK0 ] PTR unsigned char 
  2756 ;;		 -> STR_10(2), 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  i               2   11[BANK0 ] int 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;		None               void
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2768 ;;      Params:         0       2       0       0       0       0       0       0       0
  2769 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2770 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2771 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2772 ;;Total ram usage:        6 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    6
  2775 ;; This function calls:
  2776 ;;		_UART1_Init
  2777 ;;		_WriteUSART
  2778 ;; This function is called by:
  2779 ;;		_Comando_Tablet
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text15
  2784  00148E                     __ptext15:
  2785                           	opt stack 0
  2786  00148E                     _putcBluetoothString:
  2787                           	opt stack 23
  2788                           
  2789                           ;Bluetooth.c: 92: int i;
  2790                           ;Bluetooth.c: 93: UART1_Init(51);
  2791                           
  2792                           ;incstack = 0
  2793  00148E  0E33               	movlw	51
  2794  001490  ECA0  F00E         	call	_UART1_Init
  2795                           
  2796                           ;Bluetooth.c: 95: for (i = 0; a[i] != '\0'; i++){
  2797  001494  0E00               	movlw	0
  2798  001496  0100               	movlb	0	; () banked
  2799  001498  6FB8               	movwf	(putcBluetoothString@i+1)& (0+255),b
  2800  00149A  0E00               	movlw	0
  2801  00149C  0100               	movlb	0	; () banked
  2802  00149E  6FB7               	movwf	putcBluetoothString@i& (0+255),b
  2803  0014A0  D01C               	goto	l2561
  2804  0014A2                     l2557:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;Bluetooth.c: 96: WriteUSART(a[i]);
  2808  0014A2  0100               	movlb	0	; () banked
  2809  0014A4  C0B3  F0B5         	movff	putcBluetoothString@a,??_putcBluetoothString
  2810  0014A8  0100               	movlb	0	; () banked
  2811  0014AA  C0B4  F0B6         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  2812  0014AE  0100               	movlb	0	; () banked
  2813  0014B0  51B7               	movf	putcBluetoothString@i& (0+255),w,b
  2814  0014B2  0100               	movlb	0	; () banked
  2815  0014B4  27B5               	addwf	??_putcBluetoothString& (0+255),f,b
  2816  0014B6  0100               	movlb	0	; () banked
  2817  0014B8  51B8               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  2818  0014BA  0100               	movlb	0	; () banked
  2819  0014BC  23B6               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  2820  0014BE  C0B5  FFF6         	movff	??_putcBluetoothString,tblptrl
  2821  0014C2  C0B6  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  2822  0014C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2823  0014C6  6AF8               	clrf	tblptru,c
  2824  0014C8                     	endif
  2825  0014C8                     	if	0	;tblptru may be non-zero
  2826  0014C8                     	endif
  2827  0014C8  0008               	tblrd		*
  2828  0014CA  50F5               	movf	tablat,w,c
  2829  0014CC  ECB5  F00E         	call	_WriteUSART
  2830  0014D0                     l59:
  2831  0014D0  A2AC               	btfss	4012,1,c	;volatile
  2832  0014D2  D7FE               	goto	l59
  2833  0014D4  0100               	movlb	0	; () banked
  2834  0014D6  4BB7               	infsnz	putcBluetoothString@i& (0+255),f,b
  2835  0014D8  2BB8               	incf	(putcBluetoothString@i+1)& (0+255),f,b
  2836  0014DA                     l2561:
  2837                           
  2838                           ; BSR set to: 0
  2839  0014DA  0100               	movlb	0	; () banked
  2840  0014DC  C0B3  F0B5         	movff	putcBluetoothString@a,??_putcBluetoothString
  2841  0014E0  0100               	movlb	0	; () banked
  2842  0014E2  C0B4  F0B6         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  2843  0014E6  0100               	movlb	0	; () banked
  2844  0014E8  51B7               	movf	putcBluetoothString@i& (0+255),w,b
  2845  0014EA  0100               	movlb	0	; () banked
  2846  0014EC  27B5               	addwf	??_putcBluetoothString& (0+255),f,b
  2847  0014EE  0100               	movlb	0	; () banked
  2848  0014F0  51B8               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  2849  0014F2  0100               	movlb	0	; () banked
  2850  0014F4  23B6               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  2851  0014F6  C0B5  FFF6         	movff	??_putcBluetoothString,tblptrl
  2852  0014FA  C0B6  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  2853  0014FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2854  0014FE  6AF8               	clrf	tblptru,c
  2855  001500                     	endif
  2856  001500                     	if	0	;tblptru may be non-zero
  2857  001500                     	endif
  2858  001500  0008               	tblrd		*
  2859  001502  50F5               	movf	tablat,w,c
  2860  001504  0900               	iorlw	0
  2861  001506  A4D8               	btfss	status,2,c
  2862  001508  D7CC               	goto	l2557
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;Bluetooth.c: 98: }
  2866                           ;Bluetooth.c: 99: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  2867                           
  2868                           ; BSR set to: 0
  2869  00150A  0E4F               	movlw	79
  2870  00150C  16AB               	andwf	4011,f,c	;volatile
  2871                           
  2872                           ; BSR set to: 0
  2873  00150E  9AAC               	bcf	4012,5,c	;volatile
  2874  001510  0ECF               	movlw	207
  2875  001512  169D               	andwf	3997,f,c	;volatile
  2876                           
  2877                           ; BSR set to: 0
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;Bluetooth.c: 100: return;
  2881  001514  0012               	return	
  2882  001516                     __end_of_putcBluetoothString:
  2883                           	opt stack 0
  2884                           tblptru	equ	0xFF8
  2885                           tblptrh	equ	0xFF7
  2886                           tblptrl	equ	0xFF6
  2887                           tablat	equ	0xFF5
  2888                           prodh	equ	0xFF4
  2889                           prodl	equ	0xFF3
  2890                           intcon	equ	0xFF2
  2891                           intcon2	equ	0xFF1
  2892                           intcon3	equ	0xFF0
  2893                           indf0	equ	0xFEF
  2894                           postinc0	equ	0xFEE
  2895                           fsr0h	equ	0xFEA
  2896                           fsr0l	equ	0xFE9
  2897                           wreg	equ	0xFE8
  2898                           postinc1	equ	0xFE6
  2899                           postdec1	equ	0xFE5
  2900                           fsr1l	equ	0xFE1
  2901                           postinc2	equ	0xFDE
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _putcBluetoothInt *****************
  2905 ;; Defined at:
  2906 ;;		line 102 in file "Bluetooth.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  a               2   30[BANK0 ] int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  s              20   32[BANK0 ] unsigned char [20]
  2911 ;;  i               2   52[BANK0 ] int 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;		None               void
  2914 ;; Registers used:
  2915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2921 ;;      Params:         0       2       0       0       0       0       0       0       0
  2922 ;;      Locals:         0      22       0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2924 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2925 ;;Total ram usage:       24 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    6
  2928 ;; This function calls:
  2929 ;;		_UART1_Init
  2930 ;;		_WriteUSART
  2931 ;;		_sprintf
  2932 ;; This function is called by:
  2933 ;;		_Comando_Tablet
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text16
  2938  001516                     __ptext16:
  2939                           	opt stack 0
  2940  001516                     _putcBluetoothInt:
  2941                           	opt stack 23
  2942                           
  2943                           ;Bluetooth.c: 104: int i;
  2944                           ;Bluetooth.c: 105: unsigned char s[20];
  2945                           ;Bluetooth.c: 106: UART1_Init(51);
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;incstack = 0
  2949  001516  0E33               	movlw	51
  2950  001518  ECA0  F00E         	call	_UART1_Init
  2951                           
  2952                           ;Bluetooth.c: 108: sprintf(s,"%d",a);
  2953  00151C  0100               	movlb	0	; () banked
  2954  00151E  0E00               	movlw	high putcBluetoothInt@s
  2955  001520  0100               	movlb	0	; () banked
  2956  001522  6FB9               	movwf	(sprintf@sp+1)& (0+255),b
  2957  001524  0100               	movlb	0	; () banked
  2958  001526  0ECC               	movlw	low putcBluetoothInt@s
  2959  001528  0100               	movlb	0	; () banked
  2960  00152A  6FB8               	movwf	sprintf@sp& (0+255),b
  2961  00152C  0E08               	movlw	high STR_5
  2962  00152E  0100               	movlb	0	; () banked
  2963  001530  6FBB               	movwf	(sprintf@f+1)& (0+255),b
  2964  001532  0E67               	movlw	low STR_5
  2965  001534  0100               	movlb	0	; () banked
  2966  001536  6FBA               	movwf	sprintf@f& (0+255),b
  2967  001538  C0CA  F0BC         	movff	putcBluetoothInt@a,?_sprintf+4
  2968  00153C  C0CB  F0BD         	movff	putcBluetoothInt@a+1,?_sprintf+5
  2969  001540  EC36  F004         	call	_sprintf	;wreg free
  2970                           
  2971                           ;Bluetooth.c: 109: for (i = 0; s[i] != '\0'; i++){
  2972  001544  0E00               	movlw	0
  2973  001546  0100               	movlb	0	; () banked
  2974  001548  6FE1               	movwf	(putcBluetoothInt@i+1)& (0+255),b
  2975  00154A  0E00               	movlw	0
  2976  00154C  0100               	movlb	0	; () banked
  2977  00154E  6FE0               	movwf	putcBluetoothInt@i& (0+255),b
  2978  001550  D012               	goto	l2579
  2979  001552                     l2575:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;Bluetooth.c: 110: WriteUSART(s[i]);
  2983  001552  0100               	movlb	0	; () banked
  2984  001554  0ECC               	movlw	low putcBluetoothInt@s
  2985  001556  0100               	movlb	0	; () banked
  2986  001558  25E0               	addwf	putcBluetoothInt@i& (0+255),w,b
  2987  00155A  6ED9               	movwf	fsr2l,c
  2988  00155C  0100               	movlb	0	; () banked
  2989  00155E  0E00               	movlw	high putcBluetoothInt@s
  2990  001560  0100               	movlb	0	; () banked
  2991  001562  21E1               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  2992  001564  6EDA               	movwf	fsr2h,c
  2993  001566  50DF               	movf	indf2,w,c
  2994  001568  ECB5  F00E         	call	_WriteUSART
  2995  00156C                     l68:
  2996  00156C  A2AC               	btfss	4012,1,c	;volatile
  2997  00156E  D7FE               	goto	l68
  2998  001570  0100               	movlb	0	; () banked
  2999  001572  4BE0               	infsnz	putcBluetoothInt@i& (0+255),f,b
  3000  001574  2BE1               	incf	(putcBluetoothInt@i+1)& (0+255),f,b
  3001  001576                     l2579:
  3002                           
  3003                           ; BSR set to: 0
  3004  001576  0100               	movlb	0	; () banked
  3005  001578  0ECC               	movlw	low putcBluetoothInt@s
  3006  00157A  0100               	movlb	0	; () banked
  3007  00157C  25E0               	addwf	putcBluetoothInt@i& (0+255),w,b
  3008  00157E  6ED9               	movwf	fsr2l,c
  3009  001580  0100               	movlb	0	; () banked
  3010  001582  0E00               	movlw	high putcBluetoothInt@s
  3011  001584  0100               	movlb	0	; () banked
  3012  001586  21E1               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  3013  001588  6EDA               	movwf	fsr2h,c
  3014  00158A  50DF               	movf	indf2,w,c
  3015  00158C  A4D8               	btfss	status,2,c
  3016  00158E  D7E1               	goto	l2575
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;Bluetooth.c: 112: }
  3020                           ;Bluetooth.c: 113: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  3021                           
  3022                           ; BSR set to: 0
  3023  001590  0E4F               	movlw	79
  3024  001592  16AB               	andwf	4011,f,c	;volatile
  3025                           
  3026                           ; BSR set to: 0
  3027  001594  9AAC               	bcf	4012,5,c	;volatile
  3028  001596  0ECF               	movlw	207
  3029  001598  169D               	andwf	3997,f,c	;volatile
  3030                           
  3031                           ; BSR set to: 0
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;Bluetooth.c: 114: return;
  3035  00159A  0012               	return	
  3036  00159C                     __end_of_putcBluetoothInt:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           prodh	equ	0xFF4
  3043                           prodl	equ	0xFF3
  3044                           intcon	equ	0xFF2
  3045                           intcon2	equ	0xFF1
  3046                           intcon3	equ	0xFF0
  3047                           indf0	equ	0xFEF
  3048                           postinc0	equ	0xFEE
  3049                           fsr0h	equ	0xFEA
  3050                           fsr0l	equ	0xFE9
  3051                           wreg	equ	0xFE8
  3052                           postinc1	equ	0xFE6
  3053                           postdec1	equ	0xFE5
  3054                           fsr1l	equ	0xFE1
  3055                           indf2	equ	0xFDF
  3056                           postinc2	equ	0xFDE
  3057                           fsr2h	equ	0xFDA
  3058                           fsr2l	equ	0xFD9
  3059                           status	equ	0xFD8
  3060                           
  3061 ;; *************** function _sprintf *****************
  3062 ;; Defined at:
  3063 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  3066 ;;		 -> putcBluetoothInt@s(20), 
  3067 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3068 ;;		 -> STR_5(3), 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  _val            5   24[BANK0 ] struct .
  3071 ;;  ap              2   20[BANK0 ] PTR void [1]
  3072 ;;		 -> ?_sprintf(2), 
  3073 ;;  c               1   29[BANK0 ] char 
  3074 ;;  prec            1   23[BANK0 ] char 
  3075 ;;  flag            1   22[BANK0 ] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  2   12[BANK0 ] int 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3085 ;;      Params:         0       6       0       0       0       0       0       0       0
  3086 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3087 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3088 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3089 ;;Total ram usage:       18 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    5
  3092 ;; This function calls:
  3093 ;;		___lwdiv
  3094 ;;		___lwmod
  3095 ;; This function is called by:
  3096 ;;		_putcBluetoothInt
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text17
  3101  00086C                     __ptext17:
  3102                           	opt stack 0
  3103  00086C                     _sprintf:
  3104                           	opt stack 23
  3105                           
  3106                           ;doprnt.c: 494: va_list ap;
  3107                           ;doprnt.c: 499: signed char c;
  3108                           ;doprnt.c: 506: signed char prec;
  3109                           ;doprnt.c: 508: unsigned char flag;
  3110                           ;doprnt.c: 527: union {
  3111                           ;doprnt.c: 528: unsigned int _val;
  3112                           ;doprnt.c: 529: struct {
  3113                           ;doprnt.c: 530: const char * _cp;
  3114                           ;doprnt.c: 531: unsigned _len;
  3115                           ;doprnt.c: 532: } _str;
  3116                           ;doprnt.c: 533: } _val;
  3117                           ;doprnt.c: 542: *ap = __va_start();
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;incstack = 0
  3121  00086C  0100               	movlb	0	; () banked
  3122  00086E  0E00               	movlw	high (?_sprintf+4)
  3123  000870  0100               	movlb	0	; () banked
  3124  000872  6FC1               	movwf	(sprintf@ap+1)& (0+255),b
  3125  000874  0100               	movlb	0	; () banked
  3126  000876  0EBC               	movlw	low (?_sprintf+4)
  3127  000878  0100               	movlb	0	; () banked
  3128  00087A  6FC0               	movwf	sprintf@ap& (0+255),b
  3129                           
  3130                           ;doprnt.c: 545: while(c = *f++) {
  3131  00087C  D0C7               	goto	l2345
  3132  00087E                     l2293:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;doprnt.c: 547: if(c != '%')
  3136  00087E  0100               	movlb	0	; () banked
  3137  000880  51C9               	movf	sprintf@c& (0+255),w,b
  3138  000882  0A25               	xorlw	37
  3139  000884  B4D8               	btfsc	status,2,c
  3140  000886  D00B               	goto	l2299
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;doprnt.c: 549: {
  3144                           ;doprnt.c: 550: ((*sp++ = (c)));
  3145  000888  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3146  00088C  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3147  000890  0100               	movlb	0	; () banked
  3148  000892  C0C9  FFDF         	movff	sprintf@c,indf2
  3149                           
  3150                           ; BSR set to: 0
  3151  000896  0100               	movlb	0	; () banked
  3152  000898  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3153  00089A  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3154                           
  3155                           ;doprnt.c: 551: continue;
  3156  00089C  D0B7               	goto	l2345
  3157  00089E                     l2299:
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;doprnt.c: 552: }
  3161                           ;doprnt.c: 557: flag = 0;
  3162  00089E  0E00               	movlw	0
  3163  0008A0  0100               	movlb	0	; () banked
  3164  0008A2  6FC2               	movwf	sprintf@flag& (0+255),b
  3165                           
  3166                           ; BSR set to: 0
  3167                           
  3168                           ; BSR set to: 0
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;doprnt.c: 831: }
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;doprnt.c: 822: continue;
  3175                           
  3176                           ;doprnt.c: 811: default:
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;doprnt.c: 707: case 'i':
  3180                           ;doprnt.c: 708: break;
  3181                           
  3182                           ; BSR set to: 0
  3183                           
  3184                           ;doprnt.c: 706: case 'd':
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;doprnt.c: 647: goto alldone;
  3188                           
  3189                           ;doprnt.c: 646: case 0:
  3190                           
  3191                           ;doprnt.c: 644: switch(c = *f++) {
  3192  0008A4  0100               	movlb	0	; () banked
  3193  0008A6  C0BA  FFF6         	movff	sprintf@f,tblptrl
  3194  0008AA  0100               	movlb	0	; () banked
  3195  0008AC  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  3196  0008B0  0100               	movlb	0	; () banked
  3197  0008B2  4BBA               	infsnz	sprintf@f& (0+255),f,b
  3198  0008B4  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  3199  0008B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3200  0008B6  6AF8               	clrf	tblptru,c
  3201  0008B8                     	endif
  3202  0008B8                     	if	0	;tblptru may be non-zero
  3203  0008B8                     	endif
  3204  0008B8  0008               	tblrd		*
  3205  0008BA  0100               	movlb	0	; () banked
  3206  0008BC  CFF5 F0C9          	movff	tablat,sprintf@c
  3207  0008C0  0100               	movlb	0	; () banked
  3208  0008C2  51C9               	movf	sprintf@c& (0+255),w,b
  3209                           
  3210                           ; Switch size 1, requested type "space"
  3211                           ; Number of cases is 3, Range of values is 0 to 105
  3212                           ; switch strategies available:
  3213                           ; Name         Instructions Cycles
  3214                           ; simple_byte           10     6 (average)
  3215                           ;	Chosen strategy is simple_byte
  3216  0008C4  0A00               	xorlw	0	; case 0
  3217  0008C6  B4D8               	btfsc	status,2,c
  3218  0008C8  D0B2               	goto	l2347
  3219  0008CA  0A64               	xorlw	100	; case 100
  3220  0008CC  B4D8               	btfsc	status,2,c
  3221  0008CE  D003               	goto	l2305
  3222  0008D0  0A0D               	xorlw	13	; case 105
  3223  0008D2  A4D8               	btfss	status,2,c
  3224  0008D4  D09B               	goto	l2345
  3225  0008D6                     l2305:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;doprnt.c: 1262: {
  3229                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3230  0008D6  C0C0  FFD9         	movff	sprintf@ap,fsr2l
  3231  0008DA  C0C1  FFDA         	movff	sprintf@ap+1,fsr2h
  3232  0008DE  0100               	movlb	0	; () banked
  3233  0008E0  CFDE F0C4          	movff	postinc2,sprintf@_val
  3234  0008E4  0100               	movlb	0	; () banked
  3235  0008E6  CFDD F0C5          	movff	postdec2,sprintf@_val+1
  3236                           
  3237                           ; BSR set to: 0
  3238  0008EA  0E02               	movlw	2
  3239  0008EC  0100               	movlb	0	; () banked
  3240  0008EE  27C0               	addwf	sprintf@ap& (0+255),f,b
  3241  0008F0  0E00               	movlw	0
  3242  0008F2  0100               	movlb	0	; () banked
  3243  0008F4  23C1               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3247  0008F6  0100               	movlb	0	; () banked
  3248  0008F8  51C5               	movf	(sprintf@_val+1)& (0+255),w,b
  3249  0008FA  0A80               	xorlw	128
  3250  0008FC  6EF3               	movwf	prodl,c
  3251  0008FE  0E80               	movlw	128
  3252  000900  5CF3               	subwf	prodl,w,c
  3253  000902  0E00               	movlw	0
  3254  000904  B4D8               	btfsc	status,2,c
  3255  000906  5DC4               	subwf	sprintf@_val& (0+255),w,b
  3256  000908  B0D8               	btfsc	status,0,c
  3257  00090A  D009               	goto	l2315
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;doprnt.c: 1271: flag |= 0x03;
  3261  00090C  0E03               	movlw	3
  3262  00090E  0100               	movlb	0	; () banked
  3263  000910  13C2               	iorwf	sprintf@flag& (0+255),f,b
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;doprnt.c: 1272: _val._val = -_val._val;
  3267  000912  0100               	movlb	0	; () banked
  3268  000914  6DC4               	negf	sprintf@_val& (0+255),b
  3269  000916  0100               	movlb	0	; () banked
  3270  000918  1FC5               	comf	(sprintf@_val+1)& (0+255),f,b
  3271  00091A  B0D8               	btfsc	status,0,c
  3272  00091C  2BC5               	incf	(sprintf@_val+1)& (0+255),f,b
  3273  00091E                     l2315:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;doprnt.c: 1273: }
  3277                           ;doprnt.c: 1275: }
  3278                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3279  00091E  0E01               	movlw	1
  3280  000920  0100               	movlb	0	; () banked
  3281  000922  6FC9               	movwf	sprintf@c& (0+255),b
  3282  000924                     
  3283                           ; BSR set to: 0
  3284  000924  0100               	movlb	0	; () banked
  3285  000926  51C9               	movf	sprintf@c& (0+255),w,b
  3286  000928  0A05               	xorlw	5
  3287  00092A  B4D8               	btfsc	status,2,c
  3288  00092C  D01F               	goto	l2329
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3292                           
  3293                           ; BSR set to: 0
  3294                           
  3295                           ; BSR set to: 0
  3296  00092E  0100               	movlb	0	; () banked
  3297  000930  51C9               	movf	sprintf@c& (0+255),w,b
  3298  000932  0D02               	mullw	2
  3299  000934  0E01               	movlw	low _dpowers
  3300  000936  24F3               	addwf	prodl,w,c
  3301  000938  6EF6               	movwf	tblptrl,c
  3302  00093A  0E08               	movlw	high _dpowers
  3303  00093C  20F4               	addwfc	prodh,w,c
  3304  00093E  6EF7               	movwf	tblptrh,c
  3305  000940                     	if	1	;There are 3 active tblptr bytes
  3306  000940  6AF8               	clrf	tblptru,c
  3307  000942  0E00               	movlw	low (__mediumconst shr (0+16))
  3308  000944  22F8               	addwfc	tblptru,f,c
  3309  000946                     	endif
  3310  000946  0009               	tblrd		*+
  3311  000948  CFF5 F0BE          	movff	tablat,??_sprintf
  3312  00094C  0009               	tblrd		*+
  3313  00094E  CFF5 F0BF          	movff	tablat,??_sprintf+1
  3314  000952  0100               	movlb	0	; () banked
  3315  000954  51BE               	movf	??_sprintf& (0+255),w,b
  3316  000956  0100               	movlb	0	; () banked
  3317  000958  5DC4               	subwf	sprintf@_val& (0+255),w,b
  3318  00095A  0100               	movlb	0	; () banked
  3319  00095C  51BF               	movf	(??_sprintf+1)& (0+255),w,b
  3320  00095E  0100               	movlb	0	; () banked
  3321  000960  59C5               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3322  000962  A0D8               	btfss	status,0,c
  3323  000964  D003               	goto	l2329
  3324                           
  3325                           ; BSR set to: 0
  3326                           
  3327                           ; BSR set to: 0
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;doprnt.c: 1316: break;
  3331  000966  0100               	movlb	0	; () banked
  3332  000968  2BC9               	incf	sprintf@c& (0+255),f,b
  3333  00096A  D7DC               	goto	L2
  3334  00096C                     l2329:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;doprnt.c: 1431: {
  3338                           ;doprnt.c: 1447: if(flag & 0x03)
  3339  00096C  C0C2  F0BE         	movff	sprintf@flag,??_sprintf
  3340  000970  0E03               	movlw	3
  3341  000972  0100               	movlb	0	; () banked
  3342  000974  17BE               	andwf	??_sprintf& (0+255),f,b
  3343  000976  B4D8               	btfsc	status,2,c
  3344  000978  D009               	goto	l2335
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3348  00097A  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3349  00097E  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3350  000982  0E2D               	movlw	45
  3351  000984  6EDF               	movwf	indf2,c
  3352                           
  3353                           ; BSR set to: 0
  3354  000986  0100               	movlb	0	; () banked
  3355  000988  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3356  00098A  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3357  00098C                     l2335:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;doprnt.c: 1478: }
  3361                           ;doprnt.c: 1481: prec = c;
  3362  00098C  C0C9  F0C3         	movff	sprintf@c,sprintf@prec
  3363                           
  3364                           ;doprnt.c: 1483: while(prec--) {
  3365  000990  D037               	goto	l2343
  3366  000992                     l2337:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;doprnt.c: 1487: {
  3370                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3371  000992  0100               	movlb	0	; () banked
  3372  000994  51C3               	movf	sprintf@prec& (0+255),w,b
  3373  000996  0D02               	mullw	2
  3374  000998  0E01               	movlw	low _dpowers
  3375  00099A  24F3               	addwf	prodl,w,c
  3376  00099C  6EF6               	movwf	tblptrl,c
  3377  00099E  0E08               	movlw	high _dpowers
  3378  0009A0  20F4               	addwfc	prodh,w,c
  3379  0009A2  6EF7               	movwf	tblptrh,c
  3380  0009A4                     	if	1	;There are 3 active tblptr bytes
  3381  0009A4  6AF8               	clrf	tblptru,c
  3382  0009A6  0E00               	movlw	low (__mediumconst shr (0+16))
  3383  0009A8  22F8               	addwfc	tblptru,f,c
  3384  0009AA                     	endif
  3385  0009AA  0009               	tblrd		*+
  3386  0009AC  0100               	movlb	0	; () banked
  3387  0009AE  CFF5 F0AE          	movff	tablat,___lwdiv@divisor
  3388  0009B2  000A               	tblrd		*-
  3389  0009B4  0100               	movlb	0	; () banked
  3390  0009B6  CFF5 F0AF          	movff	tablat,___lwdiv@divisor+1
  3391  0009BA  C0C4  F0AC         	movff	sprintf@_val,___lwdiv@dividend
  3392  0009BE  C0C5  F0AD         	movff	sprintf@_val+1,___lwdiv@dividend+1
  3393  0009C2  EC04  F00C         	call	___lwdiv	;wreg free
  3394  0009C6  0100               	movlb	0	; () banked
  3395  0009C8  C0AC  F0B3         	movff	?___lwdiv,___lwmod@dividend
  3396  0009CC  0100               	movlb	0	; () banked
  3397  0009CE  C0AD  F0B4         	movff	?___lwdiv+1,___lwmod@dividend+1
  3398  0009D2  0E00               	movlw	0
  3399  0009D4  0100               	movlb	0	; () banked
  3400  0009D6  6FB6               	movwf	(___lwmod@divisor+1)& (0+255),b
  3401  0009D8  0E0A               	movlw	10
  3402  0009DA  0100               	movlb	0	; () banked
  3403  0009DC  6FB5               	movwf	___lwmod@divisor& (0+255),b
  3404  0009DE  EC0D  F00D         	call	___lwmod	;wreg free
  3405  0009E2  0100               	movlb	0	; () banked
  3406  0009E4  51B3               	movf	?___lwmod& (0+255),w,b
  3407  0009E6  0F30               	addlw	48
  3408  0009E8  0100               	movlb	0	; () banked
  3409  0009EA  6FC9               	movwf	sprintf@c& (0+255),b
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;doprnt.c: 1532: }
  3413                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3414  0009EC  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3415  0009F0  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3416  0009F4  0100               	movlb	0	; () banked
  3417  0009F6  C0C9  FFDF         	movff	sprintf@c,indf2
  3418                           
  3419                           ; BSR set to: 0
  3420  0009FA  0100               	movlb	0	; () banked
  3421  0009FC  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3422  0009FE  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3423  000A00                     l2343:
  3424                           
  3425                           ; BSR set to: 0
  3426  000A00  0100               	movlb	0	; () banked
  3427  000A02  07C3               	decf	sprintf@prec& (0+255),f,b
  3428  000A04  0100               	movlb	0	; () banked
  3429  000A06  29C3               	incf	sprintf@prec& (0+255),w,b
  3430  000A08  A4D8               	btfss	status,2,c
  3431  000A0A  D7C3               	goto	l2337
  3432  000A0C                     l2345:
  3433                           
  3434                           ; BSR set to: 0
  3435  000A0C  0100               	movlb	0	; () banked
  3436  000A0E  C0BA  FFF6         	movff	sprintf@f,tblptrl
  3437  000A12  0100               	movlb	0	; () banked
  3438  000A14  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  3439  000A18  0100               	movlb	0	; () banked
  3440  000A1A  4BBA               	infsnz	sprintf@f& (0+255),f,b
  3441  000A1C  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  3442  000A1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3443  000A1E  6AF8               	clrf	tblptru,c
  3444  000A20                     	endif
  3445  000A20                     	if	0	;tblptru may be non-zero
  3446  000A20                     	endif
  3447  000A20  0008               	tblrd		*
  3448  000A22  0100               	movlb	0	; () banked
  3449  000A24  CFF5 F0C9          	movff	tablat,sprintf@c
  3450  000A28  0100               	movlb	0	; () banked
  3451  000A2A  67C9               	tstfsz	sprintf@c& (0+255),b
  3452  000A2C  D728               	goto	l2293
  3453  000A2E                     l2347:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;doprnt.c: 1547: *sp = 0;
  3457  000A2E  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3458  000A32  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3459  000A36  0E00               	movlw	0
  3460  000A38  6EDF               	movwf	indf2,c
  3461                           
  3462                           ; BSR set to: 0
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;doprnt.c: 1549: return 0;
  3466                           ;	Return value of _sprintf is never used
  3467  000A3A  0012               	return	
  3468  000A3C                     __end_of_sprintf:
  3469                           	opt stack 0
  3470                           tblptru	equ	0xFF8
  3471                           tblptrh	equ	0xFF7
  3472                           tblptrl	equ	0xFF6
  3473                           tablat	equ	0xFF5
  3474                           prodh	equ	0xFF4
  3475                           prodl	equ	0xFF3
  3476                           intcon	equ	0xFF2
  3477                           intcon2	equ	0xFF1
  3478                           intcon3	equ	0xFF0
  3479                           indf0	equ	0xFEF
  3480                           postinc0	equ	0xFEE
  3481                           fsr0h	equ	0xFEA
  3482                           fsr0l	equ	0xFE9
  3483                           wreg	equ	0xFE8
  3484                           postinc1	equ	0xFE6
  3485                           postdec1	equ	0xFE5
  3486                           fsr1l	equ	0xFE1
  3487                           indf2	equ	0xFDF
  3488                           postinc2	equ	0xFDE
  3489                           postdec2	equ	0xFDD
  3490                           fsr2h	equ	0xFDA
  3491                           fsr2l	equ	0xFD9
  3492                           status	equ	0xFD8
  3493                           
  3494 ;; *************** function ___lwmod *****************
  3495 ;; Defined at:
  3496 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  dividend        2    7[BANK0 ] unsigned int 
  3499 ;;  divisor         2    9[BANK0 ] unsigned int 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  counter         1   11[BANK0 ] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  2    7[BANK0 ] unsigned int 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3511 ;;      Params:         0       4       0       0       0       0       0       0       0
  3512 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3514 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3515 ;;Total ram usage:        5 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    4
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_sprintf
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text18
  3526  001A1A                     __ptext18:
  3527                           	opt stack 0
  3528  001A1A                     ___lwmod:
  3529                           	opt stack 23
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;incstack = 0
  3533  001A1A  0100               	movlb	0	; () banked
  3534  001A1C  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3535  001A1E  11B5               	iorwf	___lwmod@divisor& (0+255),w,b
  3536  001A20  B4D8               	btfsc	status,2,c
  3537  001A22  D026               	goto	l1064
  3538                           
  3539                           ; BSR set to: 0
  3540  001A24  0E01               	movlw	1
  3541  001A26  0100               	movlb	0	; () banked
  3542  001A28  6FB7               	movwf	___lwmod@counter& (0+255),b
  3543  001A2A  D006               	goto	l2267
  3544  001A2C                     l2265:
  3545                           
  3546                           ; BSR set to: 0
  3547  001A2C  0100               	movlb	0	; () banked
  3548  001A2E  90D8               	bcf	status,0,c
  3549  001A30  37B5               	rlcf	___lwmod@divisor& (0+255),f,b
  3550  001A32  37B6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3551  001A34  0100               	movlb	0	; () banked
  3552  001A36  2BB7               	incf	___lwmod@counter& (0+255),f,b
  3553  001A38                     l2267:
  3554                           
  3555                           ; BSR set to: 0
  3556  001A38  0100               	movlb	0	; () banked
  3557  001A3A  AFB6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3558  001A3C  D7F7               	goto	l2265
  3559  001A3E                     l2269:
  3560                           
  3561                           ; BSR set to: 0
  3562  001A3E  0100               	movlb	0	; () banked
  3563  001A40  51B5               	movf	___lwmod@divisor& (0+255),w,b
  3564  001A42  0100               	movlb	0	; () banked
  3565  001A44  5DB3               	subwf	___lwmod@dividend& (0+255),w,b
  3566  001A46  0100               	movlb	0	; () banked
  3567  001A48  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3568  001A4A  0100               	movlb	0	; () banked
  3569  001A4C  59B4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3570  001A4E  A0D8               	btfss	status,0,c
  3571  001A50  D008               	goto	l2273
  3572                           
  3573                           ; BSR set to: 0
  3574  001A52  0100               	movlb	0	; () banked
  3575  001A54  51B5               	movf	___lwmod@divisor& (0+255),w,b
  3576  001A56  0100               	movlb	0	; () banked
  3577  001A58  5FB3               	subwf	___lwmod@dividend& (0+255),f,b
  3578  001A5A  0100               	movlb	0	; () banked
  3579  001A5C  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3580  001A5E  0100               	movlb	0	; () banked
  3581  001A60  5BB4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3582  001A62                     l2273:
  3583                           
  3584                           ; BSR set to: 0
  3585  001A62  0100               	movlb	0	; () banked
  3586  001A64  90D8               	bcf	status,0,c
  3587  001A66  33B6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3588  001A68  33B5               	rrcf	___lwmod@divisor& (0+255),f,b
  3589                           
  3590                           ; BSR set to: 0
  3591  001A6A  0100               	movlb	0	; () banked
  3592  001A6C  2FB7               	decfsz	___lwmod@counter& (0+255),f,b
  3593  001A6E  D7E7               	goto	l2269
  3594  001A70                     l1064:
  3595                           
  3596                           ; BSR set to: 0
  3597  001A70  C0B3  F0B3         	movff	___lwmod@dividend,?___lwmod
  3598  001A74  C0B4  F0B4         	movff	___lwmod@dividend+1,?___lwmod+1
  3599                           
  3600                           ; BSR set to: 0
  3601  001A78  0012               	return	
  3602  001A7A                     __end_of___lwmod:
  3603                           	opt stack 0
  3604                           tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           prodh	equ	0xFF4
  3609                           prodl	equ	0xFF3
  3610                           intcon	equ	0xFF2
  3611                           intcon2	equ	0xFF1
  3612                           intcon3	equ	0xFF0
  3613                           indf0	equ	0xFEF
  3614                           postinc0	equ	0xFEE
  3615                           fsr0h	equ	0xFEA
  3616                           fsr0l	equ	0xFE9
  3617                           wreg	equ	0xFE8
  3618                           postinc1	equ	0xFE6
  3619                           postdec1	equ	0xFE5
  3620                           fsr1l	equ	0xFE1
  3621                           indf2	equ	0xFDF
  3622                           postinc2	equ	0xFDE
  3623                           postdec2	equ	0xFDD
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function ___lwdiv *****************
  3629 ;; Defined at:
  3630 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  dividend        2    0[BANK0 ] unsigned int 
  3633 ;;  divisor         2    2[BANK0 ] unsigned int 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  quotient        2    4[BANK0 ] unsigned int 
  3636 ;;  counter         1    6[BANK0 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  2    0[BANK0 ] unsigned int 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3646 ;;      Params:         0       4       0       0       0       0       0       0       0
  3647 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3649 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3650 ;;Total ram usage:        7 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    4
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_sprintf
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text19
  3661  001808                     __ptext19:
  3662                           	opt stack 0
  3663  001808                     ___lwdiv:
  3664                           	opt stack 23
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;incstack = 0
  3668  001808  0E00               	movlw	0
  3669  00180A  0100               	movlb	0	; () banked
  3670  00180C  6FB1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3671  00180E  0E00               	movlw	0
  3672  001810  0100               	movlb	0	; () banked
  3673  001812  6FB0               	movwf	___lwdiv@quotient& (0+255),b
  3674                           
  3675                           ; BSR set to: 0
  3676  001814  0100               	movlb	0	; () banked
  3677  001816  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3678  001818  11AE               	iorwf	___lwdiv@divisor& (0+255),w,b
  3679  00181A  B4D8               	btfsc	status,2,c
  3680  00181C  D02C               	goto	l1054
  3681                           
  3682                           ; BSR set to: 0
  3683  00181E  0E01               	movlw	1
  3684  001820  0100               	movlb	0	; () banked
  3685  001822  6FB2               	movwf	___lwdiv@counter& (0+255),b
  3686  001824  D006               	goto	l2247
  3687  001826                     l2245:
  3688                           
  3689                           ; BSR set to: 0
  3690  001826  0100               	movlb	0	; () banked
  3691  001828  90D8               	bcf	status,0,c
  3692  00182A  37AE               	rlcf	___lwdiv@divisor& (0+255),f,b
  3693  00182C  37AF               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3694  00182E  0100               	movlb	0	; () banked
  3695  001830  2BB2               	incf	___lwdiv@counter& (0+255),f,b
  3696  001832                     l2247:
  3697                           
  3698                           ; BSR set to: 0
  3699  001832  0100               	movlb	0	; () banked
  3700  001834  AFAF               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3701  001836  D7F7               	goto	l2245
  3702  001838                     l2249:
  3703                           
  3704                           ; BSR set to: 0
  3705  001838  0100               	movlb	0	; () banked
  3706  00183A  90D8               	bcf	status,0,c
  3707  00183C  37B0               	rlcf	___lwdiv@quotient& (0+255),f,b
  3708  00183E  37B1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3709                           
  3710                           ; BSR set to: 0
  3711  001840  0100               	movlb	0	; () banked
  3712  001842  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  3713  001844  0100               	movlb	0	; () banked
  3714  001846  5DAC               	subwf	___lwdiv@dividend& (0+255),w,b
  3715  001848  0100               	movlb	0	; () banked
  3716  00184A  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3717  00184C  0100               	movlb	0	; () banked
  3718  00184E  59AD               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3719  001850  A0D8               	btfss	status,0,c
  3720  001852  D00A               	goto	l2257
  3721                           
  3722                           ; BSR set to: 0
  3723  001854  0100               	movlb	0	; () banked
  3724  001856  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  3725  001858  0100               	movlb	0	; () banked
  3726  00185A  5FAC               	subwf	___lwdiv@dividend& (0+255),f,b
  3727  00185C  0100               	movlb	0	; () banked
  3728  00185E  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3729  001860  0100               	movlb	0	; () banked
  3730  001862  5BAD               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3731                           
  3732                           ; BSR set to: 0
  3733  001864  0100               	movlb	0	; () banked
  3734  001866  81B0               	bsf	___lwdiv@quotient& (0+255),0,b
  3735  001868                     l2257:
  3736                           
  3737                           ; BSR set to: 0
  3738  001868  0100               	movlb	0	; () banked
  3739  00186A  90D8               	bcf	status,0,c
  3740  00186C  33AF               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3741  00186E  33AE               	rrcf	___lwdiv@divisor& (0+255),f,b
  3742                           
  3743                           ; BSR set to: 0
  3744  001870  0100               	movlb	0	; () banked
  3745  001872  2FB2               	decfsz	___lwdiv@counter& (0+255),f,b
  3746  001874  D7E1               	goto	l2249
  3747  001876                     l1054:
  3748                           
  3749                           ; BSR set to: 0
  3750  001876  C0B0  F0AC         	movff	___lwdiv@quotient,?___lwdiv
  3751  00187A  C0B1  F0AD         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3752                           
  3753                           ; BSR set to: 0
  3754  00187E  0012               	return	
  3755  001880                     __end_of___lwdiv:
  3756                           	opt stack 0
  3757                           tblptru	equ	0xFF8
  3758                           tblptrh	equ	0xFF7
  3759                           tblptrl	equ	0xFF6
  3760                           tablat	equ	0xFF5
  3761                           prodh	equ	0xFF4
  3762                           prodl	equ	0xFF3
  3763                           intcon	equ	0xFF2
  3764                           intcon2	equ	0xFF1
  3765                           intcon3	equ	0xFF0
  3766                           indf0	equ	0xFEF
  3767                           postinc0	equ	0xFEE
  3768                           fsr0h	equ	0xFEA
  3769                           fsr0l	equ	0xFE9
  3770                           wreg	equ	0xFE8
  3771                           postinc1	equ	0xFE6
  3772                           postdec1	equ	0xFE5
  3773                           fsr1l	equ	0xFE1
  3774                           indf2	equ	0xFDF
  3775                           postinc2	equ	0xFDE
  3776                           postdec2	equ	0xFDD
  3777                           fsr2h	equ	0xFDA
  3778                           fsr2l	equ	0xFD9
  3779                           status	equ	0xFD8
  3780                           
  3781 ;; *************** function _WriteUSART *****************
  3782 ;; Defined at:
  3783 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  data            1    wreg     unsigned char 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  data            1    0[BANK0 ] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;		None               void
  3790 ;; Registers used:
  3791 ;;		wreg
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0
  3798 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3800 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3801 ;;Total ram usage:        1 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    4
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_putcBluetoothString
  3808 ;;		_putcBluetoothInt
  3809 ;;		_putcTxU1
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text20
  3814  001D6A                     __ptext20:
  3815                           	opt stack 0
  3816  001D6A                     _WriteUSART:
  3817                           	opt stack 21
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;incstack = 0
  3821                           ;WriteUSART@data stored from wreg
  3822  001D6A  0100               	movlb	0	; () banked
  3823  001D6C  6FAC               	movwf	WriteUSART@data& (0+255),b
  3824                           
  3825                           ; BSR set to: 0
  3826  001D6E  ACAC               	btfss	4012,6,c	;volatile
  3827  001D70  D003               	goto	l2125
  3828                           
  3829                           ; BSR set to: 0
  3830  001D72  90AC               	bcf	4012,0,c	;volatile
  3831  001D74  B254               	btfsc	_USART_Status,1,c
  3832                           
  3833                           ; BSR set to: 0
  3834  001D76  80AC               	bsf	4012,0,c	;volatile
  3835  001D78                     l2125:
  3836                           
  3837                           ; BSR set to: 0
  3838  001D78  C0AC  FFAD         	movff	WriteUSART@data,4013	;volatile
  3839                           
  3840                           ; BSR set to: 0
  3841  001D7C  0012               	return	
  3842  001D7E                     __end_of_WriteUSART:
  3843                           	opt stack 0
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           intcon	equ	0xFF2
  3851                           intcon2	equ	0xFF1
  3852                           intcon3	equ	0xFF0
  3853                           indf0	equ	0xFEF
  3854                           postinc0	equ	0xFEE
  3855                           fsr0h	equ	0xFEA
  3856                           fsr0l	equ	0xFE9
  3857                           wreg	equ	0xFE8
  3858                           postinc1	equ	0xFE6
  3859                           postdec1	equ	0xFE5
  3860                           fsr1l	equ	0xFE1
  3861                           indf2	equ	0xFDF
  3862                           postinc2	equ	0xFDE
  3863                           postdec2	equ	0xFDD
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8
  3867                           
  3868 ;; *************** function _UART1_Init *****************
  3869 ;; Defined at:
  3870 ;;		line 5 in file "UART1.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  bdr             1    wreg     unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  bdr             1    6[BANK0 ] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;		None               void
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0
  3885 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3887 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3888 ;;Total ram usage:        1 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    5
  3891 ;; This function calls:
  3892 ;;		_OpenUSART
  3893 ;; This function is called by:
  3894 ;;		_BT_Init
  3895 ;;		_putcBluetoothString
  3896 ;;		_putcBluetoothInt
  3897 ;;		_main
  3898 ;;		_EstadoBluetooth
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text21
  3903  001D40                     __ptext21:
  3904                           	opt stack 0
  3905  001D40                     _UART1_Init:
  3906                           	opt stack 25
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;incstack = 0
  3910                           ;UART1_Init@bdr stored from wreg
  3911  001D40  0100               	movlb	0	; () banked
  3912  001D42  6FB2               	movwf	UART1_Init@bdr& (0+255),b
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;UART1.c: 8: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111,bdr);
  3916  001D44  0100               	movlb	0	; () banked
  3917  001D46  C0B2  F0AC         	movff	UART1_Init@bdr,OpenUSART@spbrg
  3918  001D4A  0100               	movlb	0	; () banked
  3919  001D4C  6BAD               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  3920  001D4E  0E7C               	movlw	124
  3921  001D50  ECCE  F00A         	call	_OpenUSART
  3922  001D54  0012               	return	
  3923  001D56                     __end_of_UART1_Init:
  3924                           	opt stack 0
  3925                           tblptru	equ	0xFF8
  3926                           tblptrh	equ	0xFF7
  3927                           tblptrl	equ	0xFF6
  3928                           tablat	equ	0xFF5
  3929                           prodh	equ	0xFF4
  3930                           prodl	equ	0xFF3
  3931                           intcon	equ	0xFF2
  3932                           intcon2	equ	0xFF1
  3933                           intcon3	equ	0xFF0
  3934                           indf0	equ	0xFEF
  3935                           postinc0	equ	0xFEE
  3936                           fsr0h	equ	0xFEA
  3937                           fsr0l	equ	0xFE9
  3938                           wreg	equ	0xFE8
  3939                           postinc1	equ	0xFE6
  3940                           postdec1	equ	0xFE5
  3941                           fsr1l	equ	0xFE1
  3942                           indf2	equ	0xFDF
  3943                           postinc2	equ	0xFDE
  3944                           postdec2	equ	0xFDD
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8
  3948                           
  3949 ;; *************** function _OpenUSART *****************
  3950 ;; Defined at:
  3951 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  config          1    wreg     unsigned char 
  3954 ;;  spbrg           2    0[BANK0 ] unsigned int 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  config          1    5[BANK0 ] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;		None               void
  3959 ;; Registers used:
  3960 ;;		wreg, status,2
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3966 ;;      Params:         0       2       0       0       0       0       0       0       0
  3967 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3968 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3969 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3970 ;;Total ram usage:        6 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    4
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_UART1_Init
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text22
  3981  00159C                     __ptext22:
  3982                           	opt stack 0
  3983  00159C                     _OpenUSART:
  3984                           	opt stack 25
  3985                           
  3986                           ;incstack = 0
  3987                           ;OpenUSART@config stored from wreg
  3988  00159C  0100               	movlb	0	; () banked
  3989  00159E  6FB1               	movwf	OpenUSART@config& (0+255),b
  3990                           
  3991                           ; BSR set to: 0
  3992  0015A0  0E00               	movlw	0
  3993  0015A2  6EAC               	movwf	4012,c	;volatile
  3994  0015A4  0E00               	movlw	0
  3995  0015A6  6EAB               	movwf	4011,c	;volatile
  3996                           
  3997                           ; BSR set to: 0
  3998  0015A8  0100               	movlb	0	; () banked
  3999  0015AA  B1B1               	btfsc	OpenUSART@config& (0+255),0,b
  4000                           
  4001                           ; BSR set to: 0
  4002  0015AC  88AC               	bsf	4012,4,c	;volatile
  4003                           
  4004                           ; BSR set to: 0
  4005                           
  4006                           ; BSR set to: 0
  4007  0015AE  0100               	movlb	0	; () banked
  4008  0015B0  A3B1               	btfss	OpenUSART@config& (0+255),1,b
  4009  0015B2  D002               	goto	l2165
  4010                           
  4011                           ; BSR set to: 0
  4012  0015B4  8CAC               	bsf	4012,6,c	;volatile
  4013  0015B6  8CAB               	bsf	4011,6,c	;volatile
  4014  0015B8                     l2165:
  4015                           
  4016                           ; BSR set to: 0
  4017  0015B8  0100               	movlb	0	; () banked
  4018  0015BA  B5B1               	btfsc	OpenUSART@config& (0+255),2,b
  4019                           
  4020                           ; BSR set to: 0
  4021  0015BC  8EAC               	bsf	4012,7,c	;volatile
  4022                           
  4023                           ; BSR set to: 0
  4024                           
  4025                           ; BSR set to: 0
  4026  0015BE  0100               	movlb	0	; () banked
  4027  0015C0  A7B1               	btfss	OpenUSART@config& (0+255),3,b
  4028  0015C2  D002               	goto	l506
  4029                           
  4030                           ; BSR set to: 0
  4031  0015C4  88AB               	bsf	4011,4,c	;volatile
  4032  0015C6  D001               	goto	l2173
  4033  0015C8                     l506:
  4034                           
  4035                           ; BSR set to: 0
  4036  0015C8  8AAB               	bsf	4011,5,c	;volatile
  4037  0015CA                     l2173:
  4038                           
  4039                           ; BSR set to: 0
  4040  0015CA  0100               	movlb	0	; () banked
  4041  0015CC  B9B1               	btfsc	OpenUSART@config& (0+255),4,b
  4042                           
  4043                           ; BSR set to: 0
  4044  0015CE  84AC               	bsf	4012,2,c	;volatile
  4045                           
  4046                           ; BSR set to: 0
  4047  0015D0  989E               	bcf	3998,4,c	;volatile
  4048                           
  4049                           ; BSR set to: 0
  4050  0015D2  0100               	movlb	0	; () banked
  4051  0015D4  BBB1               	btfsc	OpenUSART@config& (0+255),5,b
  4052                           
  4053                           ; BSR set to: 0
  4054  0015D6  86AB               	bsf	4011,3,c	;volatile
  4055                           
  4056                           ; BSR set to: 0
  4057                           
  4058                           ; BSR set to: 0
  4059  0015D8  0100               	movlb	0	; () banked
  4060  0015DA  ADB1               	btfss	OpenUSART@config& (0+255),6,b
  4061  0015DC  D002               	goto	l510
  4062                           
  4063                           ; BSR set to: 0
  4064  0015DE  8A9D               	bsf	3997,5,c	;volatile
  4065  0015E0  D001               	goto	l511
  4066  0015E2                     l510:
  4067                           
  4068                           ; BSR set to: 0
  4069  0015E2  9A9D               	bcf	3997,5,c	;volatile
  4070  0015E4                     l511:
  4071                           
  4072                           ; BSR set to: 0
  4073  0015E4  9A9E               	bcf	3998,5,c	;volatile
  4074                           
  4075                           ; BSR set to: 0
  4076  0015E6  0100               	movlb	0	; () banked
  4077  0015E8  AFB1               	btfss	OpenUSART@config& (0+255),7,b
  4078  0015EA  D002               	goto	l512
  4079                           
  4080                           ; BSR set to: 0
  4081  0015EC  889D               	bsf	3997,4,c	;volatile
  4082  0015EE  D001               	goto	l513
  4083  0015F0                     l512:
  4084                           
  4085                           ; BSR set to: 0
  4086  0015F0  989D               	bcf	3997,4,c	;volatile
  4087  0015F2                     l513:
  4088                           
  4089                           ; BSR set to: 0
  4090  0015F2  C0AC  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4091                           
  4092                           ; BSR set to: 0
  4093  0015F6  0100               	movlb	0	; () banked
  4094  0015F8  C0AD  F0AE         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4095  0015FC  C0AE  F0AF         	movff	??_OpenUSART,??_OpenUSART+1
  4096  001600  0100               	movlb	0	; () banked
  4097  001602  6BB0               	clrf	(??_OpenUSART+2)& (0+255),b
  4098  001604  0100               	movlb	0	; () banked
  4099  001606  51AF               	movf	(??_OpenUSART+1)& (0+255),w,b
  4100  001608  6EB0               	movwf	4016,c	;volatile
  4101                           
  4102                           ; BSR set to: 0
  4103  00160A  8AAC               	bsf	4012,5,c	;volatile
  4104                           
  4105                           ; BSR set to: 0
  4106  00160C  8EAB               	bsf	4011,7,c	;volatile
  4107                           
  4108                           ; BSR set to: 0
  4109  00160E  9C94               	bcf	3988,6,c	;volatile
  4110                           
  4111                           ; BSR set to: 0
  4112  001610  8E94               	bsf	3988,7,c	;volatile
  4113                           
  4114                           ; BSR set to: 0
  4115  001612  B8AC               	btfsc	4012,4,c	;volatile
  4116                           
  4117                           ; BSR set to: 0
  4118  001614  BEAC               	btfsc	4012,7,c	;volatile
  4119  001616  D001               	goto	l515
  4120                           
  4121                           ; BSR set to: 0
  4122  001618  8C94               	bsf	3988,6,c	;volatile
  4123  00161A                     l515:
  4124                           
  4125                           ; BSR set to: 0
  4126  00161A  0012               	return	
  4127  00161C                     __end_of_OpenUSART:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           intcon	equ	0xFF2
  4136                           intcon2	equ	0xFF1
  4137                           intcon3	equ	0xFF0
  4138                           indf0	equ	0xFEF
  4139                           postinc0	equ	0xFEE
  4140                           fsr0h	equ	0xFEA
  4141                           fsr0l	equ	0xFE9
  4142                           wreg	equ	0xFE8
  4143                           postinc1	equ	0xFE6
  4144                           postdec1	equ	0xFE5
  4145                           fsr1l	equ	0xFE1
  4146                           indf2	equ	0xFDF
  4147                           postinc2	equ	0xFDE
  4148                           postdec2	equ	0xFDD
  4149                           fsr2h	equ	0xFDA
  4150                           fsr2l	equ	0xFD9
  4151                           status	equ	0xFD8
  4152                           
  4153 ;; *************** function _getCNY70Value *****************
  4154 ;; Defined at:
  4155 ;;		line 3 in file "cny70.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  2    0[BANK0 ] int 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4169 ;;      Params:         0       2       0       0       0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4172 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4173 ;;Total ram usage:        2 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    4
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_Comando_Tablet
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text23
  4184  001262                     __ptext23:
  4185                           	opt stack 0
  4186  001262                     _getCNY70Value:
  4187                           	opt stack 25
  4188                           
  4189                           ;cny70.c: 5: if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 0 && PORTBb
      +                          its.RB3 == 1 && PORTBbits.RB4 == 1)
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;incstack = 0
  4193  001262  B081               	btfsc	3969,0,c	;volatile
  4194  001264  A281               	btfss	3969,1,c	;volatile
  4195  001266  D005               	goto	l391
  4196  001268  A481               	btfss	3969,2,c	;volatile
  4197  00126A  A681               	btfss	3969,3,c	;volatile
  4198  00126C  D002               	goto	l391
  4199  00126E  B881               	btfsc	3969,4,c	;volatile
  4200  001270  D054               	goto	l2745
  4201  001272                     l391:
  4202                           
  4203                           ;cny70.c: 7: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 0 && PORTBbits.RB2 == 1 && P
      +                          ORTBbits.RB3 == 1 && PORTBbits.RB4 == 1)
  4204  001272  B081               	btfsc	3969,0,c	;volatile
  4205  001274  B281               	btfsc	3969,1,c	;volatile
  4206  001276  D005               	goto	l394
  4207  001278  B481               	btfsc	3969,2,c	;volatile
  4208  00127A  A681               	btfss	3969,3,c	;volatile
  4209  00127C  D002               	goto	l394
  4210  00127E  B881               	btfsc	3969,4,c	;volatile
  4211  001280  D03A               	goto	u2700
  4212  001282                     l394:
  4213                           
  4214                           ;cny70.c: 9: else if(PORTBbits.RB0 == 0 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && P
      +                          ORTBbits.RB3 == 1 && PORTBbits.RB4 == 1)
  4215  001282  A081               	btfss	3969,0,c	;volatile
  4216  001284  A281               	btfss	3969,1,c	;volatile
  4217  001286  D00A               	goto	l396
  4218  001288  B481               	btfsc	3969,2,c	;volatile
  4219  00128A  A681               	btfss	3969,3,c	;volatile
  4220  00128C  D007               	goto	l396
  4221  00128E  A881               	btfss	3969,4,c	;volatile
  4222  001290  D005               	goto	l396
  4223  001292                     
  4224                           ;cny70.c: 10: return -2;
  4225  001292  0EFF               	movlw	255
  4226  001294  0100               	movlb	0	; () banked
  4227  001296  6FAD               	movwf	(?_getCNY70Value+1)& (0+255),b
  4228  001298  0EFE               	movlw	254
  4229  00129A  D043               	goto	L6
  4230  00129C                     l396:
  4231                           
  4232                           ;cny70.c: 11: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && 
      +                          PORTBbits.RB3 == 0 && PORTBbits.RB4 == 1)
  4233  00129C  B081               	btfsc	3969,0,c	;volatile
  4234  00129E  A281               	btfss	3969,1,c	;volatile
  4235  0012A0  D005               	goto	l398
  4236  0012A2  B481               	btfsc	3969,2,c	;volatile
  4237  0012A4  B681               	btfsc	3969,3,c	;volatile
  4238  0012A6  D002               	goto	l398
  4239  0012A8  B881               	btfsc	3969,4,c	;volatile
  4240  0012AA  D032               	goto	u2750
  4241  0012AC                     l398:
  4242                           
  4243                           ;cny70.c: 13: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && 
      +                          PORTBbits.RB3 == 1 && PORTBbits.RB4 == 0)
  4244  0012AC  B081               	btfsc	3969,0,c	;volatile
  4245  0012AE  A281               	btfss	3969,1,c	;volatile
  4246  0012B0  D005               	goto	l400
  4247  0012B2  B481               	btfsc	3969,2,c	;volatile
  4248  0012B4  A681               	btfss	3969,3,c	;volatile
  4249  0012B6  D002               	goto	l400
  4250  0012B8  A881               	btfss	3969,4,c	;volatile
  4251  0012BA  D008               	goto	u2600
  4252  0012BC                     l400:
  4253                           
  4254                           ;cny70.c: 15: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && 
      +                          PORTBbits.RB3 == 0 && PORTBbits.RB4 == 0)
  4255  0012BC  B081               	btfsc	3969,0,c	;volatile
  4256  0012BE  A281               	btfss	3969,1,c	;volatile
  4257  0012C0  D00A               	goto	l402
  4258  0012C2  B481               	btfsc	3969,2,c	;volatile
  4259  0012C4  B681               	btfsc	3969,3,c	;volatile
  4260  0012C6  D007               	goto	l402
  4261  0012C8  B881               	btfsc	3969,4,c	;volatile
  4262  0012CA  D005               	goto	l402
  4263  0012CC                     u2600:
  4264                           
  4265                           ;cny70.c: 16: return 2;
  4266  0012CC  0E00               	movlw	0
  4267  0012CE  0100               	movlb	0	; () banked
  4268  0012D0  6FAD               	movwf	(?_getCNY70Value+1)& (0+255),b
  4269  0012D2  0E02               	movlw	2
  4270  0012D4  D026               	goto	L6
  4271  0012D6                     l402:
  4272                           
  4273                           ;cny70.c: 17: else if(PORTBbits.RB0 == 0 && PORTBbits.RB1 == 0 && PORTBbits.RB2 == 1 && 
      +                          PORTBbits.RB3 == 1 && PORTBbits.RB4 == 1)
  4274  0012D6  A081               	btfss	3969,0,c	;volatile
  4275  0012D8  B281               	btfsc	3969,1,c	;volatile
  4276  0012DA  D005               	goto	l404
  4277  0012DC  B481               	btfsc	3969,2,c	;volatile
  4278  0012DE  A681               	btfss	3969,3,c	;volatile
  4279  0012E0  D002               	goto	l404
  4280  0012E2  B881               	btfsc	3969,4,c	;volatile
  4281  0012E4  D7D6               	goto	L7
  4282  0012E6                     l404:
  4283                           
  4284                           ;cny70.c: 19: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 0 && PORTBbits.RB2 == 0 && 
      +                          PORTBbits.RB3 == 1 && PORTBbits.RB4 == 1)
  4285  0012E6  B081               	btfsc	3969,0,c	;volatile
  4286  0012E8  B281               	btfsc	3969,1,c	;volatile
  4287  0012EA  D00A               	goto	l406
  4288  0012EC  A481               	btfss	3969,2,c	;volatile
  4289  0012EE  A681               	btfss	3969,3,c	;volatile
  4290  0012F0  D007               	goto	l406
  4291  0012F2  A881               	btfss	3969,4,c	;volatile
  4292  0012F4  D005               	goto	l406
  4293  0012F6                     u2700:
  4294                           
  4295                           ;cny70.c: 20: return -1;
  4296  0012F6  0100               	movlb	0	; () banked
  4297  0012F8  69AC               	setf	?_getCNY70Value& (0+255),b
  4298  0012FA  0100               	movlb	0	; () banked
  4299  0012FC  69AD               	setf	(?_getCNY70Value+1)& (0+255),b
  4300  0012FE  D013               	goto	l392
  4301  001300                     l406:
  4302                           
  4303                           ;cny70.c: 21: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 0 && 
      +                          PORTBbits.RB3 == 0 && PORTBbits.RB4 == 1)
  4304  001300  B081               	btfsc	3969,0,c	;volatile
  4305  001302  A281               	btfss	3969,1,c	;volatile
  4306  001304  D00A               	goto	l2745
  4307  001306  A481               	btfss	3969,2,c	;volatile
  4308  001308  B681               	btfsc	3969,3,c	;volatile
  4309  00130A  D007               	goto	l2745
  4310  00130C  A881               	btfss	3969,4,c	;volatile
  4311  00130E  D005               	goto	l2745
  4312  001310                     u2750:
  4313                           
  4314                           ;cny70.c: 22: return 1;
  4315  001310  0E00               	movlw	0
  4316  001312  0100               	movlb	0	; () banked
  4317  001314  6FAD               	movwf	(?_getCNY70Value+1)& (0+255),b
  4318  001316  0E01               	movlw	1
  4319  001318  D004               	goto	L6
  4320  00131A                     l2745:
  4321                           
  4322                           ;cny70.c: 23: else
  4323                           ;cny70.c: 24: return 0;
  4324  00131A  0E00               	movlw	0
  4325  00131C  0100               	movlb	0	; () banked
  4326  00131E  6FAD               	movwf	(?_getCNY70Value+1)& (0+255),b
  4327  001320  0E00               	movlw	0
  4328  001322                     L6:
  4329  001322  0100               	movlb	0	; () banked
  4330  001324  6FAC               	movwf	?_getCNY70Value& (0+255),b
  4331  001326                     l392:
  4332                           
  4333                           ; BSR set to: 0
  4334  001326  0012               	return	
  4335  001328                     __end_of_getCNY70Value:
  4336                           	opt stack 0
  4337                           tblptru	equ	0xFF8
  4338                           tblptrh	equ	0xFF7
  4339                           tblptrl	equ	0xFF6
  4340                           tablat	equ	0xFF5
  4341                           prodh	equ	0xFF4
  4342                           prodl	equ	0xFF3
  4343                           intcon	equ	0xFF2
  4344                           intcon2	equ	0xFF1
  4345                           intcon3	equ	0xFF0
  4346                           indf0	equ	0xFEF
  4347                           postinc0	equ	0xFEE
  4348                           fsr0h	equ	0xFEA
  4349                           fsr0l	equ	0xFE9
  4350                           wreg	equ	0xFE8
  4351                           postinc1	equ	0xFE6
  4352                           postdec1	equ	0xFE5
  4353                           fsr1l	equ	0xFE1
  4354                           indf2	equ	0xFDF
  4355                           postinc2	equ	0xFDE
  4356                           postdec2	equ	0xFDD
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361 ;; *************** function _clrBufferUSART *****************
  4362 ;; Defined at:
  4363 ;;		line 68 in file "Bluetooth.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  i               2    0[BANK0 ] int 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;		None               void
  4370 ;; Registers used:
  4371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0
  4378 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4380 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4381 ;;Total ram usage:        2 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    4
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_Inicializa_Driveby
  4388 ;;		_Comando_Tablet
  4389 ;;		_main
  4390 ;;		_CheckTX
  4391 ;;		_EstadoBluetooth
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text24
  4396  001B94                     __ptext24:
  4397                           	opt stack 0
  4398  001B94                     _clrBufferUSART:
  4399                           	opt stack 26
  4400                           
  4401                           ;Bluetooth.c: 69: int i;
  4402                           ;Bluetooth.c: 70: for (i = 0; i < 20; i++) {
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;incstack = 0
  4406  001B94  0E00               	movlw	0
  4407  001B96  0100               	movlb	0	; () banked
  4408  001B98  6FAD               	movwf	(clrBufferUSART@i+1)& (0+255),b
  4409  001B9A  0E00               	movlw	0
  4410  001B9C  0100               	movlb	0	; () banked
  4411  001B9E  6FAC               	movwf	clrBufferUSART@i& (0+255),b
  4412  001BA0                     
  4413                           ; BSR set to: 0
  4414  001BA0  0100               	movlb	0	; () banked
  4415  001BA2  51AD               	movf	(clrBufferUSART@i+1)& (0+255),w,b
  4416  001BA4  0A80               	xorlw	128
  4417  001BA6  0F80               	addlw	-128
  4418  001BA8  0E14               	movlw	20
  4419  001BAA  B4D8               	btfsc	status,2,c
  4420  001BAC  5DAC               	subwf	clrBufferUSART@i& (0+255),w,b
  4421  001BAE  B0D8               	btfsc	status,0,c
  4422  001BB0  D012               	goto	l54
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;Bluetooth.c: 71: BluetoothDato[i] = 0;
  4426                           
  4427                           ; BSR set to: 0
  4428                           
  4429                           ; BSR set to: 0
  4430  001BB2  0100               	movlb	0	; () banked
  4431  001BB4  0E65               	movlw	low _BluetoothDato
  4432  001BB6  0100               	movlb	0	; () banked
  4433  001BB8  25AC               	addwf	clrBufferUSART@i& (0+255),w,b
  4434  001BBA  6ED9               	movwf	fsr2l,c
  4435  001BBC  0100               	movlb	0	; () banked
  4436  001BBE  0E00               	movlw	high _BluetoothDato
  4437  001BC0  0100               	movlb	0	; () banked
  4438  001BC2  21AD               	addwfc	(clrBufferUSART@i+1)& (0+255),w,b
  4439  001BC4  6EDA               	movwf	fsr2h,c
  4440  001BC6  0E00               	movlw	0
  4441  001BC8  6EDF               	movwf	indf2,c
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;Bluetooth.c: 72: cad = 0;
  4445  001BCA  0E00               	movlw	0
  4446  001BCC  6E55               	movwf	_cad,c
  4447                           
  4448                           ; BSR set to: 0
  4449  001BCE  0100               	movlb	0	; () banked
  4450  001BD0  4BAC               	infsnz	clrBufferUSART@i& (0+255),f,b
  4451  001BD2  2BAD               	incf	(clrBufferUSART@i+1)& (0+255),f,b
  4452  001BD4  D7E5               	goto	L8
  4453  001BD6                     l54:
  4454                           
  4455                           ; BSR set to: 0
  4456  001BD6  0012               	return	
  4457  001BD8                     __end_of_clrBufferUSART:
  4458                           	opt stack 0
  4459                           tblptru	equ	0xFF8
  4460                           tblptrh	equ	0xFF7
  4461                           tblptrl	equ	0xFF6
  4462                           tablat	equ	0xFF5
  4463                           prodh	equ	0xFF4
  4464                           prodl	equ	0xFF3
  4465                           intcon	equ	0xFF2
  4466                           intcon2	equ	0xFF1
  4467                           intcon3	equ	0xFF0
  4468                           indf0	equ	0xFEF
  4469                           postinc0	equ	0xFEE
  4470                           fsr0h	equ	0xFEA
  4471                           fsr0l	equ	0xFE9
  4472                           wreg	equ	0xFE8
  4473                           postinc1	equ	0xFE6
  4474                           postdec1	equ	0xFE5
  4475                           fsr1l	equ	0xFE1
  4476                           indf2	equ	0xFDF
  4477                           postinc2	equ	0xFDE
  4478                           postdec2	equ	0xFDD
  4479                           fsr2h	equ	0xFDA
  4480                           fsr2l	equ	0xFD9
  4481                           status	equ	0xFD8
  4482                           
  4483 ;; *************** function _PWM_DutyCycle2 *****************
  4484 ;; Defined at:
  4485 ;;		line 55 in file "pwm.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  percentageDu    1    wreg     unsigned char 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  percentageDu    1   48[BANK0 ] unsigned char 
  4490 ;;  DC              2   49[BANK0 ] unsigned int 
  4491 ;;  DutyCycle       2   46[BANK0 ] unsigned int 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;		None               void
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0
  4502 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4503 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4504 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4505 ;;Total ram usage:        9 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    6
  4508 ;; This function calls:
  4509 ;;		_SetDCPWM2
  4510 ;;		___ftmul
  4511 ;;		___fttol
  4512 ;;		___lbtoft
  4513 ;; This function is called by:
  4514 ;;		_Comando_Tablet
  4515 ;;		_main
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text25
  4520  00161C                     __ptext25:
  4521                           	opt stack 0
  4522  00161C                     _PWM_DutyCycle2:
  4523                           	opt stack 24
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;incstack = 0
  4527                           ;PWM_DutyCycle2@percentageDuty stored from wreg
  4528  00161C  0100               	movlb	0	; () banked
  4529  00161E  6FDC               	movwf	PWM_DutyCycle2@percentageDuty& (0+255),b
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  4533  001620  0E00               	movlw	0
  4534  001622  0100               	movlb	0	; () banked
  4535  001624  6FDE               	movwf	(PWM_DutyCycle2@DC+1)& (0+255),b
  4536  001626  0E00               	movlw	0
  4537  001628  0100               	movlb	0	; () banked
  4538  00162A  6FDD               	movwf	PWM_DutyCycle2@DC& (0+255),b
  4539  00162C  0E00               	movlw	0
  4540  00162E  0100               	movlb	0	; () banked
  4541  001630  6FDB               	movwf	(PWM_DutyCycle2@DutyCycle+1)& (0+255),b
  4542  001632  0E00               	movlw	0
  4543  001634  0100               	movlb	0	; () banked
  4544  001636  6FDA               	movwf	PWM_DutyCycle2@DutyCycle& (0+255),b
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  4548  001638  0EAE               	movlw	174
  4549  00163A  0100               	movlb	0	; () banked
  4550  00163C  6FBB               	movwf	___ftmul@f2& (0+255),b
  4551  00163E  0E23               	movlw	35
  4552  001640  0100               	movlb	0	; () banked
  4553  001642  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  4554  001644  0E41               	movlw	65
  4555  001646  0100               	movlb	0	; () banked
  4556  001648  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  4557  00164A  0100               	movlb	0	; () banked
  4558  00164C  51DC               	movf	PWM_DutyCycle2@percentageDuty& (0+255),w,b
  4559  00164E  EC26  F00E         	call	___lbtoft
  4560  001652  C0B4  F0B8         	movff	?___lbtoft,___ftmul@f1
  4561  001656  C0B5  F0B9         	movff	?___lbtoft+1,___ftmul@f1+1
  4562  00165A  C0B6  F0BA         	movff	?___lbtoft+2,___ftmul@f1+2
  4563  00165E  EC1E  F005         	call	___ftmul	;wreg free
  4564  001662  C0B8  F0C7         	movff	?___ftmul,___fttol@f1
  4565  001666  C0B9  F0C8         	movff	?___ftmul+1,___fttol@f1+1
  4566  00166A  C0BA  F0C9         	movff	?___ftmul+2,___fttol@f1+2
  4567  00166E  ECD0  F005         	call	___fttol	;wreg free
  4568  001672  C0C7  F0D6         	movff	?___fttol,??_PWM_DutyCycle2
  4569  001676  C0C8  F0D7         	movff	?___fttol+1,??_PWM_DutyCycle2+1
  4570  00167A  C0C9  F0D8         	movff	?___fttol+2,??_PWM_DutyCycle2+2
  4571  00167E  C0CA  F0D9         	movff	?___fttol+3,??_PWM_DutyCycle2+3
  4572  001682  C0D6  F0DD         	movff	??_PWM_DutyCycle2,PWM_DutyCycle2@DC
  4573  001686  C0D7  F0DE         	movff	??_PWM_DutyCycle2+1,PWM_DutyCycle2@DC+1
  4574                           
  4575                           ;pwm.c: 60: SetDCPWM2(DC);
  4576  00168A  C0DD  F0AC         	movff	PWM_DutyCycle2@DC,SetDCPWM2@dutycycle
  4577  00168E  C0DE  F0AD         	movff	PWM_DutyCycle2@DC+1,SetDCPWM2@dutycycle+1
  4578  001692  EC3D  F00D         	call	_SetDCPWM2	;wreg free
  4579                           
  4580                           ;pwm.c: 61: return;
  4581  001696  0012               	return	
  4582  001698                     __end_of_PWM_DutyCycle2:
  4583                           	opt stack 0
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           prodh	equ	0xFF4
  4589                           prodl	equ	0xFF3
  4590                           intcon	equ	0xFF2
  4591                           intcon2	equ	0xFF1
  4592                           intcon3	equ	0xFF0
  4593                           indf0	equ	0xFEF
  4594                           postinc0	equ	0xFEE
  4595                           fsr0h	equ	0xFEA
  4596                           fsr0l	equ	0xFE9
  4597                           wreg	equ	0xFE8
  4598                           postinc1	equ	0xFE6
  4599                           postdec1	equ	0xFE5
  4600                           fsr1l	equ	0xFE1
  4601                           indf2	equ	0xFDF
  4602                           postinc2	equ	0xFDE
  4603                           postdec2	equ	0xFDD
  4604                           fsr2h	equ	0xFDA
  4605                           fsr2l	equ	0xFD9
  4606                           status	equ	0xFD8
  4607                           
  4608 ;; *************** function _SetDCPWM2 *****************
  4609 ;; Defined at:
  4610 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  4615 ;; Return value:  Size  Location     Type
  4616 ;;		None               void
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4624 ;;      Params:         0       2       0       0       0       0       0       0       0
  4625 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4626 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4627 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4628 ;;Total ram usage:        6 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    4
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_PWM_DutyCycle2
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text26
  4639  001A7A                     __ptext26:
  4640                           	opt stack 0
  4641  001A7A                     _SetDCPWM2:
  4642                           	opt stack 25
  4643                           
  4644                           ;incstack = 0
  4645  001A7A  0100               	movlb	0	; () banked
  4646  001A7C  C0AC  F0AE         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  4647  001A80  0100               	movlb	0	; () banked
  4648  001A82  C0AD  F0AF         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  4649  001A86  0E06               	movlw	6
  4650  001A88                     u2025:
  4651  001A88  90D8               	bcf	status,0,c
  4652  001A8A  0100               	movlb	0	; () banked
  4653  001A8C  37AE               	rlcf	??_SetDCPWM2& (0+255),f,b
  4654  001A8E  37AF               	rlcf	(??_SetDCPWM2+1)& (0+255),f,b
  4655  001A90  2EE8               	decfsz	wreg,f,c
  4656  001A92  D7FA               	goto	u2025
  4657  001A94  C0AE  F0B0         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  4658  001A98  C0AF  F0B1         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  4659                           
  4660                           ; BSR set to: 0
  4661  001A9C  C0B1  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  4662  001AA0  C0B0  F0AE         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  4663  001AA4  0100               	movlb	0	; () banked
  4664  001AA6  90D8               	bcf	status,0,c
  4665  001AA8  33AE               	rrcf	??_SetDCPWM2& (0+255),f,b
  4666  001AAA  0100               	movlb	0	; () banked
  4667  001AAC  90D8               	bcf	status,0,c
  4668  001AAE  33AE               	rrcf	??_SetDCPWM2& (0+255),f,b
  4669  001AB0  0E30               	movlw	48
  4670  001AB2  0100               	movlb	0	; () banked
  4671  001AB4  17AE               	andwf	??_SetDCPWM2& (0+255),f,b
  4672  001AB6  50BA               	movf	4026,w,c	;volatile
  4673  001AB8  0BCF               	andlw	207
  4674  001ABA  0100               	movlb	0	; () banked
  4675  001ABC  11AE               	iorwf	??_SetDCPWM2& (0+255),w,b
  4676  001ABE  6EBA               	movwf	4026,c	;volatile
  4677                           
  4678                           ; BSR set to: 0
  4679  001AC0  0012               	return	
  4680  001AC2                     __end_of_SetDCPWM2:
  4681                           	opt stack 0
  4682                           tblptru	equ	0xFF8
  4683                           tblptrh	equ	0xFF7
  4684                           tblptrl	equ	0xFF6
  4685                           tablat	equ	0xFF5
  4686                           prodh	equ	0xFF4
  4687                           prodl	equ	0xFF3
  4688                           intcon	equ	0xFF2
  4689                           intcon2	equ	0xFF1
  4690                           intcon3	equ	0xFF0
  4691                           indf0	equ	0xFEF
  4692                           postinc0	equ	0xFEE
  4693                           fsr0h	equ	0xFEA
  4694                           fsr0l	equ	0xFE9
  4695                           wreg	equ	0xFE8
  4696                           postinc1	equ	0xFE6
  4697                           postdec1	equ	0xFE5
  4698                           fsr1l	equ	0xFE1
  4699                           indf2	equ	0xFDF
  4700                           postinc2	equ	0xFDE
  4701                           postdec2	equ	0xFDD
  4702                           fsr2h	equ	0xFDA
  4703                           fsr2l	equ	0xFD9
  4704                           status	equ	0xFD8
  4705                           
  4706 ;; *************** function _PWM_DutyCycle1 *****************
  4707 ;; Defined at:
  4708 ;;		line 33 in file "pwm.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  percentageDu    1    wreg     unsigned char 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  percentageDu    1   48[BANK0 ] unsigned char 
  4713 ;;  DC              2   49[BANK0 ] unsigned int 
  4714 ;;  DutyCycle       2   46[BANK0 ] unsigned int 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;		None               void
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4724 ;;      Params:         0       0       0       0       0       0       0       0       0
  4725 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4726 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4727 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4728 ;;Total ram usage:        9 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    6
  4731 ;; This function calls:
  4732 ;;		_SetDCPWM1
  4733 ;;		___ftmul
  4734 ;;		___fttol
  4735 ;;		___lbtoft
  4736 ;; This function is called by:
  4737 ;;		_Comando_Tablet
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text27
  4743  001698                     __ptext27:
  4744                           	opt stack 0
  4745  001698                     _PWM_DutyCycle1:
  4746                           	opt stack 24
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;incstack = 0
  4750                           ;PWM_DutyCycle1@percentageDuty stored from wreg
  4751  001698  0100               	movlb	0	; () banked
  4752  00169A  6FDC               	movwf	PWM_DutyCycle1@percentageDuty& (0+255),b
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  4756  00169C  0E00               	movlw	0
  4757  00169E  0100               	movlb	0	; () banked
  4758  0016A0  6FDE               	movwf	(PWM_DutyCycle1@DC+1)& (0+255),b
  4759  0016A2  0E00               	movlw	0
  4760  0016A4  0100               	movlb	0	; () banked
  4761  0016A6  6FDD               	movwf	PWM_DutyCycle1@DC& (0+255),b
  4762  0016A8  0E00               	movlw	0
  4763  0016AA  0100               	movlb	0	; () banked
  4764  0016AC  6FDB               	movwf	(PWM_DutyCycle1@DutyCycle+1)& (0+255),b
  4765  0016AE  0E00               	movlw	0
  4766  0016B0  0100               	movlb	0	; () banked
  4767  0016B2  6FDA               	movwf	PWM_DutyCycle1@DutyCycle& (0+255),b
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  4771  0016B4  0EAE               	movlw	174
  4772  0016B6  0100               	movlb	0	; () banked
  4773  0016B8  6FBB               	movwf	___ftmul@f2& (0+255),b
  4774  0016BA  0E23               	movlw	35
  4775  0016BC  0100               	movlb	0	; () banked
  4776  0016BE  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  4777  0016C0  0E41               	movlw	65
  4778  0016C2  0100               	movlb	0	; () banked
  4779  0016C4  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  4780  0016C6  0100               	movlb	0	; () banked
  4781  0016C8  51DC               	movf	PWM_DutyCycle1@percentageDuty& (0+255),w,b
  4782  0016CA  EC26  F00E         	call	___lbtoft
  4783  0016CE  C0B4  F0B8         	movff	?___lbtoft,___ftmul@f1
  4784  0016D2  C0B5  F0B9         	movff	?___lbtoft+1,___ftmul@f1+1
  4785  0016D6  C0B6  F0BA         	movff	?___lbtoft+2,___ftmul@f1+2
  4786  0016DA  EC1E  F005         	call	___ftmul	;wreg free
  4787  0016DE  C0B8  F0C7         	movff	?___ftmul,___fttol@f1
  4788  0016E2  C0B9  F0C8         	movff	?___ftmul+1,___fttol@f1+1
  4789  0016E6  C0BA  F0C9         	movff	?___ftmul+2,___fttol@f1+2
  4790  0016EA  ECD0  F005         	call	___fttol	;wreg free
  4791  0016EE  C0C7  F0D6         	movff	?___fttol,??_PWM_DutyCycle1
  4792  0016F2  C0C8  F0D7         	movff	?___fttol+1,??_PWM_DutyCycle1+1
  4793  0016F6  C0C9  F0D8         	movff	?___fttol+2,??_PWM_DutyCycle1+2
  4794  0016FA  C0CA  F0D9         	movff	?___fttol+3,??_PWM_DutyCycle1+3
  4795  0016FE  C0D6  F0DD         	movff	??_PWM_DutyCycle1,PWM_DutyCycle1@DC
  4796  001702  C0D7  F0DE         	movff	??_PWM_DutyCycle1+1,PWM_DutyCycle1@DC+1
  4797                           
  4798                           ;pwm.c: 38: SetDCPWM1(DC);
  4799  001706  C0DD  F0AC         	movff	PWM_DutyCycle1@DC,SetDCPWM1@dutycycle
  4800  00170A  C0DE  F0AD         	movff	PWM_DutyCycle1@DC+1,SetDCPWM1@dutycycle+1
  4801  00170E  EC61  F00D         	call	_SetDCPWM1	;wreg free
  4802                           
  4803                           ;pwm.c: 39: return;
  4804  001712  0012               	return	
  4805  001714                     __end_of_PWM_DutyCycle1:
  4806                           	opt stack 0
  4807                           tblptru	equ	0xFF8
  4808                           tblptrh	equ	0xFF7
  4809                           tblptrl	equ	0xFF6
  4810                           tablat	equ	0xFF5
  4811                           prodh	equ	0xFF4
  4812                           prodl	equ	0xFF3
  4813                           intcon	equ	0xFF2
  4814                           intcon2	equ	0xFF1
  4815                           intcon3	equ	0xFF0
  4816                           indf0	equ	0xFEF
  4817                           postinc0	equ	0xFEE
  4818                           fsr0h	equ	0xFEA
  4819                           fsr0l	equ	0xFE9
  4820                           wreg	equ	0xFE8
  4821                           postinc1	equ	0xFE6
  4822                           postdec1	equ	0xFE5
  4823                           fsr1l	equ	0xFE1
  4824                           indf2	equ	0xFDF
  4825                           postinc2	equ	0xFDE
  4826                           postdec2	equ	0xFDD
  4827                           fsr2h	equ	0xFDA
  4828                           fsr2l	equ	0xFD9
  4829                           status	equ	0xFD8
  4830                           
  4831 ;; *************** function ___lbtoft *****************
  4832 ;; Defined at:
  4833 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  c               1    wreg     unsigned char 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  c               1   11[BANK0 ] unsigned char 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  3    8[BANK0 ] float 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2, status,0, cstack
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4847 ;;      Params:         0       3       0       0       0       0       0       0       0
  4848 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4850 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4851 ;;Total ram usage:        4 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:    5
  4854 ;; This function calls:
  4855 ;;		___ftpack
  4856 ;; This function is called by:
  4857 ;;		_PWM_DutyCycle1
  4858 ;;		_PWM_DutyCycle2
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text28
  4863  001C4C                     __ptext28:
  4864                           	opt stack 0
  4865  001C4C                     ___lbtoft:
  4866                           	opt stack 24
  4867                           
  4868                           ;incstack = 0
  4869                           ;___lbtoft@c stored from wreg
  4870  001C4C  0100               	movlb	0	; () banked
  4871  001C4E  6FB7               	movwf	___lbtoft@c& (0+255),b
  4872                           
  4873                           ; BSR set to: 0
  4874  001C50  0100               	movlb	0	; () banked
  4875  001C52  51B7               	movf	___lbtoft@c& (0+255),w,b
  4876  001C54  0100               	movlb	0	; () banked
  4877  001C56  6FAC               	movwf	___ftpack@arg& (0+255),b
  4878  001C58  0100               	movlb	0	; () banked
  4879  001C5A  6BAD               	clrf	(___ftpack@arg+1)& (0+255),b
  4880  001C5C  0100               	movlb	0	; () banked
  4881  001C5E  6BAE               	clrf	(___ftpack@arg+2)& (0+255),b
  4882  001C60  0E8E               	movlw	142
  4883  001C62  0100               	movlb	0	; () banked
  4884  001C64  6FAF               	movwf	___ftpack@exp& (0+255),b
  4885  001C66  0E00               	movlw	0
  4886  001C68  0100               	movlb	0	; () banked
  4887  001C6A  6FB0               	movwf	___ftpack@sign& (0+255),b
  4888  001C6C  EC01  F007         	call	___ftpack	;wreg free
  4889  001C70  C0AC  F0B4         	movff	?___ftpack,?___lbtoft
  4890  001C74  C0AD  F0B5         	movff	?___ftpack+1,?___lbtoft+1
  4891  001C78  C0AE  F0B6         	movff	?___ftpack+2,?___lbtoft+2
  4892  001C7C  0012               	return	
  4893  001C7E                     __end_of___lbtoft:
  4894                           	opt stack 0
  4895                           tblptru	equ	0xFF8
  4896                           tblptrh	equ	0xFF7
  4897                           tblptrl	equ	0xFF6
  4898                           tablat	equ	0xFF5
  4899                           prodh	equ	0xFF4
  4900                           prodl	equ	0xFF3
  4901                           intcon	equ	0xFF2
  4902                           intcon2	equ	0xFF1
  4903                           intcon3	equ	0xFF0
  4904                           indf0	equ	0xFEF
  4905                           postinc0	equ	0xFEE
  4906                           fsr0h	equ	0xFEA
  4907                           fsr0l	equ	0xFE9
  4908                           wreg	equ	0xFE8
  4909                           postinc1	equ	0xFE6
  4910                           postdec1	equ	0xFE5
  4911                           fsr1l	equ	0xFE1
  4912                           indf2	equ	0xFDF
  4913                           postinc2	equ	0xFDE
  4914                           postdec2	equ	0xFDD
  4915                           fsr2h	equ	0xFDA
  4916                           fsr2l	equ	0xFD9
  4917                           status	equ	0xFD8
  4918                           
  4919 ;; *************** function ___fttol *****************
  4920 ;; Defined at:
  4921 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  f1              3   27[BANK0 ] float 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  lval            4   37[BANK0 ] unsigned long 
  4926 ;;  exp1            1   41[BANK0 ] unsigned char 
  4927 ;;  sign1           1   36[BANK0 ] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  4   27[BANK0 ] long 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2, status,0
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4937 ;;      Params:         0       4       0       0       0       0       0       0       0
  4938 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4939 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4940 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4941 ;;Total ram usage:       15 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    4
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_PWM_DutyCycle1
  4948 ;;		_PWM_DutyCycle2
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           	psect	text29
  4953  000BA0                     __ptext29:
  4954                           	opt stack 0
  4955  000BA0                     ___fttol:
  4956                           	opt stack 25
  4957                           
  4958                           ;incstack = 0
  4959  000BA0  0100               	movlb	0	; () banked
  4960  000BA2  C0C9  F0CB         	movff	___fttol@f1+2,??___fttol
  4961  000BA6  0100               	movlb	0	; () banked
  4962  000BA8  6BCC               	clrf	(??___fttol+1)& (0+255),b
  4963  000BAA  6BCD               	clrf	(??___fttol+2)& (0+255),b
  4964  000BAC  0100               	movlb	0	; () banked
  4965  000BAE  35C8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4966  000BB0  0100               	movlb	0	; () banked
  4967  000BB2  37CB               	rlcf	??___fttol& (0+255),f,b
  4968  000BB4  E301               	bnc	u2091
  4969  000BB6  81CC               	bsf	(??___fttol+1)& (0+255),0,b
  4970  000BB8                     u2091:
  4971  000BB8  0100               	movlb	0	; () banked
  4972  000BBA  51CB               	movf	??___fttol& (0+255),w,b
  4973  000BBC  0100               	movlb	0	; () banked
  4974  000BBE  6FD5               	movwf	___fttol@exp1& (0+255),b
  4975  000BC0  0100               	movlb	0	; () banked
  4976  000BC2  67D5               	tstfsz	___fttol@exp1& (0+255),b
  4977  000BC4  D001               	goto	l2433
  4978  000BC6  D059               	goto	u2140
  4979  000BC8                     l2433:
  4980                           
  4981                           ; BSR set to: 0
  4982  000BC8  0E17               	movlw	23
  4983  000BCA  0100               	movlb	0	; () banked
  4984  000BCC  6FCB               	movwf	??___fttol& (0+255),b
  4985  000BCE  0100               	movlb	0	; () banked
  4986  000BD0  C0C7  F0CC         	movff	___fttol@f1,??___fttol+1
  4987  000BD4  0100               	movlb	0	; () banked
  4988  000BD6  C0C8  F0CD         	movff	___fttol@f1+1,??___fttol+2
  4989  000BDA  0100               	movlb	0	; () banked
  4990  000BDC  C0C9  F0CE         	movff	___fttol@f1+2,??___fttol+3
  4991  000BE0  0100               	movlb	0	; () banked
  4992  000BE2  29CB               	incf	??___fttol& (0+255),w,b
  4993  000BE4  0100               	movlb	0	; () banked
  4994  000BE6  6FCF               	movwf	(??___fttol+4)& (0+255),b
  4995  000BE8  D005               	goto	u2110
  4996  000BEA                     u2115:
  4997  000BEA  0100               	movlb	0	; () banked
  4998  000BEC  90D8               	bcf	status,0,c
  4999  000BEE  33CE               	rrcf	(??___fttol+3)& (0+255),f,b
  5000  000BF0  33CD               	rrcf	(??___fttol+2)& (0+255),f,b
  5001  000BF2  33CC               	rrcf	(??___fttol+1)& (0+255),f,b
  5002  000BF4                     u2110:
  5003  000BF4  0100               	movlb	0	; () banked
  5004  000BF6  2FCF               	decfsz	(??___fttol+4)& (0+255),f,b
  5005  000BF8  D7F8               	goto	u2115
  5006  000BFA  0100               	movlb	0	; () banked
  5007  000BFC  51CC               	movf	(??___fttol+1)& (0+255),w,b
  5008  000BFE  0100               	movlb	0	; () banked
  5009  000C00  6FD0               	movwf	___fttol@sign1& (0+255),b
  5010                           
  5011                           ; BSR set to: 0
  5012  000C02  0100               	movlb	0	; () banked
  5013  000C04  8FC8               	bsf	(___fttol@f1+1)& (0+255),7,b
  5014                           
  5015                           ; BSR set to: 0
  5016  000C06  0EFF               	movlw	255
  5017  000C08  0100               	movlb	0	; () banked
  5018  000C0A  17C7               	andwf	___fttol@f1& (0+255),f,b
  5019  000C0C  0EFF               	movlw	255
  5020  000C0E  0100               	movlb	0	; () banked
  5021  000C10  17C8               	andwf	(___fttol@f1+1)& (0+255),f,b
  5022  000C12  0E00               	movlw	0
  5023  000C14  0100               	movlb	0	; () banked
  5024  000C16  17C9               	andwf	(___fttol@f1+2)& (0+255),f,b
  5025                           
  5026                           ; BSR set to: 0
  5027  000C18  0100               	movlb	0	; () banked
  5028  000C1A  51C7               	movf	___fttol@f1& (0+255),w,b
  5029  000C1C  0100               	movlb	0	; () banked
  5030  000C1E  6FD1               	movwf	___fttol@lval& (0+255),b
  5031  000C20  0100               	movlb	0	; () banked
  5032  000C22  51C8               	movf	(___fttol@f1+1)& (0+255),w,b
  5033  000C24  0100               	movlb	0	; () banked
  5034  000C26  6FD2               	movwf	(___fttol@lval+1)& (0+255),b
  5035  000C28  0100               	movlb	0	; () banked
  5036  000C2A  51C9               	movf	(___fttol@f1+2)& (0+255),w,b
  5037  000C2C  0100               	movlb	0	; () banked
  5038  000C2E  6FD3               	movwf	(___fttol@lval+2)& (0+255),b
  5039  000C30  0100               	movlb	0	; () banked
  5040  000C32  6BD4               	clrf	(___fttol@lval+3)& (0+255),b
  5041                           
  5042                           ; BSR set to: 0
  5043  000C34  0E8E               	movlw	142
  5044  000C36  0100               	movlb	0	; () banked
  5045  000C38  5FD5               	subwf	___fttol@exp1& (0+255),f,b
  5046                           
  5047                           ; BSR set to: 0
  5048  000C3A  0100               	movlb	0	; () banked
  5049  000C3C  AFD5               	btfss	___fttol@exp1& (0+255),7,b
  5050  000C3E  D019               	goto	l2455
  5051                           
  5052                           ; BSR set to: 0
  5053  000C40  0100               	movlb	0	; () banked
  5054  000C42  51D5               	movf	___fttol@exp1& (0+255),w,b
  5055  000C44  0A80               	xorlw	128
  5056  000C46  0100               	movlb	0	; () banked
  5057  000C48  6FCB               	movwf	??___fttol& (0+255),b
  5058  000C4A  0EF1               	movlw	241
  5059  000C4C  0A80               	xorlw	128
  5060  000C4E  0100               	movlb	0	; () banked
  5061  000C50  5DCB               	subwf	??___fttol& (0+255),w,b
  5062  000C52  A0D8               	btfss	status,0,c
  5063  000C54  D012               	goto	u2140
  5064  000C56                     l2451:
  5065                           
  5066                           ; BSR set to: 0
  5067  000C56  0100               	movlb	0	; () banked
  5068  000C58  90D8               	bcf	status,0,c
  5069  000C5A  0100               	movlb	0	; () banked
  5070  000C5C  33D4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5071  000C5E  0100               	movlb	0	; () banked
  5072  000C60  33D3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5073  000C62  0100               	movlb	0	; () banked
  5074  000C64  33D2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5075  000C66  0100               	movlb	0	; () banked
  5076  000C68  33D1               	rrcf	___fttol@lval& (0+255),f,b
  5077                           
  5078                           ; BSR set to: 0
  5079  000C6A  0100               	movlb	0	; () banked
  5080  000C6C  3FD5               	incfsz	___fttol@exp1& (0+255),f,b
  5081  000C6E  D7F3               	goto	l2451
  5082  000C70  D020               	goto	l2465
  5083  000C72                     l2455:
  5084                           
  5085                           ; BSR set to: 0
  5086  000C72  0E17               	movlw	23
  5087  000C74  0100               	movlb	0	; () banked
  5088  000C76  65D5               	cpfsgt	___fttol@exp1& (0+255),b
  5089  000C78  D019               	goto	l2463
  5090  000C7A                     u2140:
  5091                           
  5092                           ; BSR set to: 0
  5093  000C7A  0E00               	movlw	0
  5094  000C7C  0100               	movlb	0	; () banked
  5095  000C7E  6FC7               	movwf	?___fttol& (0+255),b
  5096  000C80  0E00               	movlw	0
  5097  000C82  0100               	movlb	0	; () banked
  5098  000C84  6FC8               	movwf	(?___fttol+1)& (0+255),b
  5099  000C86  0E00               	movlw	0
  5100  000C88  0100               	movlb	0	; () banked
  5101  000C8A  6FC9               	movwf	(?___fttol+2)& (0+255),b
  5102  000C8C  0E00               	movlw	0
  5103  000C8E  0100               	movlb	0	; () banked
  5104  000C90  6FCA               	movwf	(?___fttol+3)& (0+255),b
  5105  000C92  D02A               	goto	l952
  5106  000C94                     l2461:
  5107                           
  5108                           ; BSR set to: 0
  5109  000C94  0100               	movlb	0	; () banked
  5110  000C96  90D8               	bcf	status,0,c
  5111  000C98  0100               	movlb	0	; () banked
  5112  000C9A  37D1               	rlcf	___fttol@lval& (0+255),f,b
  5113  000C9C  0100               	movlb	0	; () banked
  5114  000C9E  37D2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5115  000CA0  0100               	movlb	0	; () banked
  5116  000CA2  37D3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5117  000CA4  0100               	movlb	0	; () banked
  5118  000CA6  37D4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5119  000CA8  0100               	movlb	0	; () banked
  5120  000CAA  07D5               	decf	___fttol@exp1& (0+255),f,b
  5121  000CAC                     l2463:
  5122                           
  5123                           ; BSR set to: 0
  5124  000CAC  0100               	movlb	0	; () banked
  5125  000CAE  67D5               	tstfsz	___fttol@exp1& (0+255),b
  5126  000CB0  D7F1               	goto	l2461
  5127  000CB2                     l2465:
  5128                           
  5129                           ; BSR set to: 0
  5130  000CB2  0100               	movlb	0	; () banked
  5131  000CB4  51D0               	movf	___fttol@sign1& (0+255),w,b
  5132  000CB6  B4D8               	btfsc	status,2,c
  5133  000CB8  D00F               	goto	l2469
  5134                           
  5135                           ; BSR set to: 0
  5136  000CBA  0100               	movlb	0	; () banked
  5137  000CBC  1FD4               	comf	(___fttol@lval+3)& (0+255),f,b
  5138  000CBE  0100               	movlb	0	; () banked
  5139  000CC0  1FD3               	comf	(___fttol@lval+2)& (0+255),f,b
  5140  000CC2  0100               	movlb	0	; () banked
  5141  000CC4  1FD2               	comf	(___fttol@lval+1)& (0+255),f,b
  5142  000CC6  0100               	movlb	0	; () banked
  5143  000CC8  6DD1               	negf	___fttol@lval& (0+255),b
  5144  000CCA  0E00               	movlw	0
  5145  000CCC  0100               	movlb	0	; () banked
  5146  000CCE  23D2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5147  000CD0  0100               	movlb	0	; () banked
  5148  000CD2  23D3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5149  000CD4  0100               	movlb	0	; () banked
  5150  000CD6  23D4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5151  000CD8                     l2469:
  5152                           
  5153                           ; BSR set to: 0
  5154  000CD8  C0D1  F0C7         	movff	___fttol@lval,?___fttol
  5155  000CDC  C0D2  F0C8         	movff	___fttol@lval+1,?___fttol+1
  5156  000CE0  C0D3  F0C9         	movff	___fttol@lval+2,?___fttol+2
  5157  000CE4  C0D4  F0CA         	movff	___fttol@lval+3,?___fttol+3
  5158  000CE8                     l952:
  5159                           
  5160                           ; BSR set to: 0
  5161  000CE8  0012               	return	
  5162  000CEA                     __end_of___fttol:
  5163                           	opt stack 0
  5164                           tblptru	equ	0xFF8
  5165                           tblptrh	equ	0xFF7
  5166                           tblptrl	equ	0xFF6
  5167                           tablat	equ	0xFF5
  5168                           prodh	equ	0xFF4
  5169                           prodl	equ	0xFF3
  5170                           intcon	equ	0xFF2
  5171                           intcon2	equ	0xFF1
  5172                           intcon3	equ	0xFF0
  5173                           indf0	equ	0xFEF
  5174                           postinc0	equ	0xFEE
  5175                           fsr0h	equ	0xFEA
  5176                           fsr0l	equ	0xFE9
  5177                           wreg	equ	0xFE8
  5178                           postinc1	equ	0xFE6
  5179                           postdec1	equ	0xFE5
  5180                           fsr1l	equ	0xFE1
  5181                           indf2	equ	0xFDF
  5182                           postinc2	equ	0xFDE
  5183                           postdec2	equ	0xFDD
  5184                           fsr2h	equ	0xFDA
  5185                           fsr2l	equ	0xFD9
  5186                           status	equ	0xFD8
  5187                           
  5188 ;; *************** function ___ftmul *****************
  5189 ;; Defined at:
  5190 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  f1              3   12[BANK0 ] float 
  5193 ;;  f2              3   15[BANK0 ] float 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  5196 ;;  sign            1   26[BANK0 ] unsigned char 
  5197 ;;  cntr            1   25[BANK0 ] unsigned char 
  5198 ;;  exp             1   21[BANK0 ] unsigned char 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  3   12[BANK0 ] float 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5208 ;;      Params:         0       6       0       0       0       0       0       0       0
  5209 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5210 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5211 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5212 ;;Total ram usage:       15 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    5
  5215 ;; This function calls:
  5216 ;;		___ftpack
  5217 ;; This function is called by:
  5218 ;;		_PWM_DutyCycle1
  5219 ;;		_PWM_DutyCycle2
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text30
  5224  000A3C                     __ptext30:
  5225                           	opt stack 0
  5226  000A3C                     ___ftmul:
  5227                           	opt stack 24
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;incstack = 0
  5231  000A3C  0100               	movlb	0	; () banked
  5232  000A3E  C0BA  F0BE         	movff	___ftmul@f1+2,??___ftmul
  5233  000A42  0100               	movlb	0	; () banked
  5234  000A44  6BBF               	clrf	(??___ftmul+1)& (0+255),b
  5235  000A46  6BC0               	clrf	(??___ftmul+2)& (0+255),b
  5236  000A48  0100               	movlb	0	; () banked
  5237  000A4A  35B9               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5238  000A4C  0100               	movlb	0	; () banked
  5239  000A4E  37BE               	rlcf	??___ftmul& (0+255),f,b
  5240  000A50  E301               	bnc	u2031
  5241  000A52  81BF               	bsf	(??___ftmul+1)& (0+255),0,b
  5242  000A54                     u2031:
  5243  000A54  0100               	movlb	0	; () banked
  5244  000A56  51BE               	movf	??___ftmul& (0+255),w,b
  5245  000A58  0100               	movlb	0	; () banked
  5246  000A5A  6FC1               	movwf	___ftmul@exp& (0+255),b
  5247  000A5C  0100               	movlb	0	; () banked
  5248  000A5E  67C1               	tstfsz	___ftmul@exp& (0+255),b
  5249  000A60  D001               	goto	l2385
  5250  000A62  D013               	goto	u2060
  5251  000A64                     l2385:
  5252                           
  5253                           ; BSR set to: 0
  5254  000A64  0100               	movlb	0	; () banked
  5255  000A66  C0BD  F0BE         	movff	___ftmul@f2+2,??___ftmul
  5256  000A6A  0100               	movlb	0	; () banked
  5257  000A6C  6BBF               	clrf	(??___ftmul+1)& (0+255),b
  5258  000A6E  6BC0               	clrf	(??___ftmul+2)& (0+255),b
  5259  000A70  0100               	movlb	0	; () banked
  5260  000A72  35BC               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5261  000A74  0100               	movlb	0	; () banked
  5262  000A76  37BE               	rlcf	??___ftmul& (0+255),f,b
  5263  000A78  E301               	bnc	u2051
  5264  000A7A  81BF               	bsf	(??___ftmul+1)& (0+255),0,b
  5265  000A7C                     u2051:
  5266  000A7C  0100               	movlb	0	; () banked
  5267  000A7E  51BE               	movf	??___ftmul& (0+255),w,b
  5268  000A80  0100               	movlb	0	; () banked
  5269  000A82  6FC6               	movwf	___ftmul@sign& (0+255),b
  5270  000A84  0100               	movlb	0	; () banked
  5271  000A86  67C6               	tstfsz	___ftmul@sign& (0+255),b
  5272  000A88  D00A               	goto	l2391
  5273  000A8A                     u2060:
  5274                           
  5275                           ; BSR set to: 0
  5276  000A8A  0E00               	movlw	0
  5277  000A8C  0100               	movlb	0	; () banked
  5278  000A8E  6FB8               	movwf	?___ftmul& (0+255),b
  5279  000A90  0E00               	movlw	0
  5280  000A92  0100               	movlb	0	; () banked
  5281  000A94  6FB9               	movwf	(?___ftmul+1)& (0+255),b
  5282  000A96  0E00               	movlw	0
  5283  000A98  0100               	movlb	0	; () banked
  5284  000A9A  6FBA               	movwf	(?___ftmul+2)& (0+255),b
  5285  000A9C  D080               	goto	l932
  5286  000A9E                     l2391:
  5287                           
  5288                           ; BSR set to: 0
  5289  000A9E  0100               	movlb	0	; () banked
  5290  000AA0  51C6               	movf	___ftmul@sign& (0+255),w,b
  5291  000AA2  0F7B               	addlw	123
  5292  000AA4  0100               	movlb	0	; () banked
  5293  000AA6  27C1               	addwf	___ftmul@exp& (0+255),f,b
  5294                           
  5295                           ; BSR set to: 0
  5296  000AA8  C0BA  F0C6         	movff	___ftmul@f1+2,___ftmul@sign
  5297  000AAC  0100               	movlb	0	; () banked
  5298  000AAE  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5299  000AB0  0100               	movlb	0	; () banked
  5300  000AB2  1BC6               	xorwf	___ftmul@sign& (0+255),f,b
  5301  000AB4  0E80               	movlw	128
  5302  000AB6  0100               	movlb	0	; () banked
  5303  000AB8  17C6               	andwf	___ftmul@sign& (0+255),f,b
  5304                           
  5305                           ; BSR set to: 0
  5306  000ABA  0100               	movlb	0	; () banked
  5307  000ABC  8FB9               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5308                           
  5309                           ; BSR set to: 0
  5310  000ABE  0100               	movlb	0	; () banked
  5311  000AC0  8FBC               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5312                           
  5313                           ; BSR set to: 0
  5314  000AC2  0EFF               	movlw	255
  5315  000AC4  0100               	movlb	0	; () banked
  5316  000AC6  17BB               	andwf	___ftmul@f2& (0+255),f,b
  5317  000AC8  0EFF               	movlw	255
  5318  000ACA  0100               	movlb	0	; () banked
  5319  000ACC  17BC               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5320  000ACE  0E00               	movlw	0
  5321  000AD0  0100               	movlb	0	; () banked
  5322  000AD2  17BD               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5323                           
  5324                           ; BSR set to: 0
  5325  000AD4  0E00               	movlw	0
  5326  000AD6  0100               	movlb	0	; () banked
  5327  000AD8  6FC2               	movwf	___ftmul@f3_as_product& (0+255),b
  5328  000ADA  0E00               	movlw	0
  5329  000ADC  0100               	movlb	0	; () banked
  5330  000ADE  6FC3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5331  000AE0  0E00               	movlw	0
  5332  000AE2  0100               	movlb	0	; () banked
  5333  000AE4  6FC4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5334                           
  5335                           ; BSR set to: 0
  5336  000AE6  0E07               	movlw	7
  5337  000AE8  0100               	movlb	0	; () banked
  5338  000AEA  6FC5               	movwf	___ftmul@cntr& (0+255),b
  5339  000AEC                     l2405:
  5340                           
  5341                           ; BSR set to: 0
  5342  000AEC  0100               	movlb	0	; () banked
  5343  000AEE  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  5344  000AF0  D00C               	goto	l2409
  5345                           
  5346                           ; BSR set to: 0
  5347  000AF2  0100               	movlb	0	; () banked
  5348  000AF4  51BB               	movf	___ftmul@f2& (0+255),w,b
  5349  000AF6  0100               	movlb	0	; () banked
  5350  000AF8  27C2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5351  000AFA  0100               	movlb	0	; () banked
  5352  000AFC  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  5353  000AFE  0100               	movlb	0	; () banked
  5354  000B00  23C3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5355  000B02  0100               	movlb	0	; () banked
  5356  000B04  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5357  000B06  0100               	movlb	0	; () banked
  5358  000B08  23C4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5359  000B0A                     l2409:
  5360                           
  5361                           ; BSR set to: 0
  5362  000B0A  0100               	movlb	0	; () banked
  5363  000B0C  90D8               	bcf	status,0,c
  5364  000B0E  0100               	movlb	0	; () banked
  5365  000B10  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5366  000B12  0100               	movlb	0	; () banked
  5367  000B14  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5368  000B16  0100               	movlb	0	; () banked
  5369  000B18  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  5370  000B1A  0100               	movlb	0	; () banked
  5371  000B1C  90D8               	bcf	status,0,c
  5372  000B1E  0100               	movlb	0	; () banked
  5373  000B20  37BB               	rlcf	___ftmul@f2& (0+255),f,b
  5374  000B22  0100               	movlb	0	; () banked
  5375  000B24  37BC               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5376  000B26  0100               	movlb	0	; () banked
  5377  000B28  37BD               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5378                           
  5379                           ; BSR set to: 0
  5380  000B2A  0100               	movlb	0	; () banked
  5381  000B2C  2FC5               	decfsz	___ftmul@cntr& (0+255),f,b
  5382  000B2E  D7DE               	goto	l2405
  5383                           
  5384                           ; BSR set to: 0
  5385                           
  5386                           ; BSR set to: 0
  5387  000B30  0E09               	movlw	9
  5388  000B32  0100               	movlb	0	; () banked
  5389  000B34  6FC5               	movwf	___ftmul@cntr& (0+255),b
  5390  000B36                     l2415:
  5391                           
  5392                           ; BSR set to: 0
  5393  000B36  0100               	movlb	0	; () banked
  5394  000B38  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  5395  000B3A  D00C               	goto	l2419
  5396                           
  5397                           ; BSR set to: 0
  5398  000B3C  0100               	movlb	0	; () banked
  5399  000B3E  51BB               	movf	___ftmul@f2& (0+255),w,b
  5400  000B40  0100               	movlb	0	; () banked
  5401  000B42  27C2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5402  000B44  0100               	movlb	0	; () banked
  5403  000B46  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  5404  000B48  0100               	movlb	0	; () banked
  5405  000B4A  23C3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5406  000B4C  0100               	movlb	0	; () banked
  5407  000B4E  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5408  000B50  0100               	movlb	0	; () banked
  5409  000B52  23C4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5410  000B54                     l2419:
  5411                           
  5412                           ; BSR set to: 0
  5413  000B54  0100               	movlb	0	; () banked
  5414  000B56  90D8               	bcf	status,0,c
  5415  000B58  0100               	movlb	0	; () banked
  5416  000B5A  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5417  000B5C  0100               	movlb	0	; () banked
  5418  000B5E  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5419  000B60  0100               	movlb	0	; () banked
  5420  000B62  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  5421  000B64  0100               	movlb	0	; () banked
  5422  000B66  90D8               	bcf	status,0,c
  5423  000B68  0100               	movlb	0	; () banked
  5424  000B6A  33C4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5425  000B6C  0100               	movlb	0	; () banked
  5426  000B6E  33C3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5427  000B70  0100               	movlb	0	; () banked
  5428  000B72  33C2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5429                           
  5430                           ; BSR set to: 0
  5431  000B74  0100               	movlb	0	; () banked
  5432  000B76  2FC5               	decfsz	___ftmul@cntr& (0+255),f,b
  5433  000B78  D7DE               	goto	l2415
  5434                           
  5435                           ; BSR set to: 0
  5436                           
  5437                           ; BSR set to: 0
  5438  000B7A  C0C2  F0AC         	movff	___ftmul@f3_as_product,___ftpack@arg
  5439  000B7E  C0C3  F0AD         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5440  000B82  C0C4  F0AE         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5441  000B86  C0C1  F0AF         	movff	___ftmul@exp,___ftpack@exp
  5442  000B8A  C0C6  F0B0         	movff	___ftmul@sign,___ftpack@sign
  5443  000B8E  EC01  F007         	call	___ftpack	;wreg free
  5444  000B92  C0AC  F0B8         	movff	?___ftpack,?___ftmul
  5445  000B96  C0AD  F0B9         	movff	?___ftpack+1,?___ftmul+1
  5446  000B9A  C0AE  F0BA         	movff	?___ftpack+2,?___ftmul+2
  5447  000B9E                     l932:
  5448  000B9E  0012               	return	
  5449  000BA0                     __end_of___ftmul:
  5450                           	opt stack 0
  5451                           tblptru	equ	0xFF8
  5452                           tblptrh	equ	0xFF7
  5453                           tblptrl	equ	0xFF6
  5454                           tablat	equ	0xFF5
  5455                           prodh	equ	0xFF4
  5456                           prodl	equ	0xFF3
  5457                           intcon	equ	0xFF2
  5458                           intcon2	equ	0xFF1
  5459                           intcon3	equ	0xFF0
  5460                           indf0	equ	0xFEF
  5461                           postinc0	equ	0xFEE
  5462                           fsr0h	equ	0xFEA
  5463                           fsr0l	equ	0xFE9
  5464                           wreg	equ	0xFE8
  5465                           postinc1	equ	0xFE6
  5466                           postdec1	equ	0xFE5
  5467                           fsr1l	equ	0xFE1
  5468                           indf2	equ	0xFDF
  5469                           postinc2	equ	0xFDE
  5470                           postdec2	equ	0xFDD
  5471                           fsr2h	equ	0xFDA
  5472                           fsr2l	equ	0xFD9
  5473                           status	equ	0xFD8
  5474                           
  5475 ;; *************** function ___ftpack *****************
  5476 ;; Defined at:
  5477 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  arg             3    0[BANK0 ] unsigned um
  5480 ;;  exp             1    3[BANK0 ] unsigned char 
  5481 ;;  sign            1    4[BANK0 ] unsigned char 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  3    0[BANK0 ] float 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5493 ;;      Params:         0       5       0       0       0       0       0       0       0
  5494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5495 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5496 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5497 ;;Total ram usage:        8 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    4
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		___ftmul
  5504 ;;		___lbtoft
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text31
  5509  000E02                     __ptext31:
  5510                           	opt stack 0
  5511  000E02                     ___ftpack:
  5512                           	opt stack 24
  5513                           
  5514                           ;incstack = 0
  5515  000E02  0100               	movlb	0	; () banked
  5516  000E04  51AF               	movf	___ftpack@exp& (0+255),w,b
  5517  000E06  B4D8               	btfsc	status,2,c
  5518  000E08  D008               	goto	l2209
  5519                           
  5520                           ; BSR set to: 0
  5521  000E0A  0100               	movlb	0	; () banked
  5522  000E0C  51AC               	movf	___ftpack@arg& (0+255),w,b
  5523  000E0E  0100               	movlb	0	; () banked
  5524  000E10  11AD               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  5525  000E12  0100               	movlb	0	; () banked
  5526  000E14  11AE               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  5527  000E16  A4D8               	btfss	status,2,c
  5528  000E18  D014               	goto	l2215
  5529  000E1A                     l2209:
  5530                           
  5531                           ; BSR set to: 0
  5532  000E1A  0E00               	movlw	0
  5533  000E1C  0100               	movlb	0	; () banked
  5534  000E1E  6FAC               	movwf	?___ftpack& (0+255),b
  5535  000E20  0E00               	movlw	0
  5536  000E22  0100               	movlb	0	; () banked
  5537  000E24  6FAD               	movwf	(?___ftpack+1)& (0+255),b
  5538  000E26  0E00               	movlw	0
  5539  000E28  0100               	movlb	0	; () banked
  5540  000E2A  6FAE               	movwf	(?___ftpack+2)& (0+255),b
  5541  000E2C  D06E               	goto	l848
  5542  000E2E                     l2213:
  5543                           
  5544                           ; BSR set to: 0
  5545  000E2E  0100               	movlb	0	; () banked
  5546  000E30  2BAF               	incf	___ftpack@exp& (0+255),f,b
  5547  000E32  0100               	movlb	0	; () banked
  5548  000E34  90D8               	bcf	status,0,c
  5549  000E36  0100               	movlb	0	; () banked
  5550  000E38  33AE               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5551  000E3A  0100               	movlb	0	; () banked
  5552  000E3C  33AD               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5553  000E3E  0100               	movlb	0	; () banked
  5554  000E40  33AC               	rrcf	___ftpack@arg& (0+255),f,b
  5555  000E42                     l2215:
  5556                           
  5557                           ; BSR set to: 0
  5558  000E42  0E00               	movlw	0
  5559  000E44  0100               	movlb	0	; () banked
  5560  000E46  15AC               	andwf	___ftpack@arg& (0+255),w,b
  5561  000E48  0100               	movlb	0	; () banked
  5562  000E4A  6FB1               	movwf	??___ftpack& (0+255),b
  5563  000E4C  0E00               	movlw	0
  5564  000E4E  0100               	movlb	0	; () banked
  5565  000E50  15AD               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5566  000E52  0100               	movlb	0	; () banked
  5567  000E54  6FB2               	movwf	(??___ftpack+1)& (0+255),b
  5568  000E56  0EFE               	movlw	254
  5569  000E58  0100               	movlb	0	; () banked
  5570  000E5A  15AE               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5571  000E5C  0100               	movlb	0	; () banked
  5572  000E5E  6FB3               	movwf	(??___ftpack+2)& (0+255),b
  5573  000E60  0100               	movlb	0	; () banked
  5574  000E62  51B1               	movf	??___ftpack& (0+255),w,b
  5575  000E64  11B2               	iorwf	(??___ftpack+1)& (0+255),w,b
  5576  000E66  11B3               	iorwf	(??___ftpack+2)& (0+255),w,b
  5577  000E68  B4D8               	btfsc	status,2,c
  5578  000E6A  D014               	goto	l2221
  5579  000E6C  D7E0               	goto	l2213
  5580  000E6E                     l2217:
  5581                           
  5582                           ; BSR set to: 0
  5583  000E6E  0100               	movlb	0	; () banked
  5584  000E70  2BAF               	incf	___ftpack@exp& (0+255),f,b
  5585                           
  5586                           ; BSR set to: 0
  5587  000E72  0E01               	movlw	1
  5588  000E74  0100               	movlb	0	; () banked
  5589  000E76  27AC               	addwf	___ftpack@arg& (0+255),f,b
  5590  000E78  0E00               	movlw	0
  5591  000E7A  0100               	movlb	0	; () banked
  5592  000E7C  23AD               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  5593  000E7E  0E00               	movlw	0
  5594  000E80  0100               	movlb	0	; () banked
  5595  000E82  23AE               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  5596  000E84  0100               	movlb	0	; () banked
  5597  000E86  90D8               	bcf	status,0,c
  5598  000E88  0100               	movlb	0	; () banked
  5599  000E8A  33AE               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5600  000E8C  0100               	movlb	0	; () banked
  5601  000E8E  33AD               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5602  000E90  0100               	movlb	0	; () banked
  5603  000E92  33AC               	rrcf	___ftpack@arg& (0+255),f,b
  5604  000E94                     l2221:
  5605                           
  5606                           ; BSR set to: 0
  5607  000E94  0E00               	movlw	0
  5608  000E96  0100               	movlb	0	; () banked
  5609  000E98  15AC               	andwf	___ftpack@arg& (0+255),w,b
  5610  000E9A  0100               	movlb	0	; () banked
  5611  000E9C  6FB1               	movwf	??___ftpack& (0+255),b
  5612  000E9E  0E00               	movlw	0
  5613  000EA0  0100               	movlb	0	; () banked
  5614  000EA2  15AD               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5615  000EA4  0100               	movlb	0	; () banked
  5616  000EA6  6FB2               	movwf	(??___ftpack+1)& (0+255),b
  5617  000EA8  0EFF               	movlw	255
  5618  000EAA  0100               	movlb	0	; () banked
  5619  000EAC  15AE               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5620  000EAE  0100               	movlb	0	; () banked
  5621  000EB0  6FB3               	movwf	(??___ftpack+2)& (0+255),b
  5622  000EB2  0100               	movlb	0	; () banked
  5623  000EB4  51B1               	movf	??___ftpack& (0+255),w,b
  5624  000EB6  11B2               	iorwf	(??___ftpack+1)& (0+255),w,b
  5625  000EB8  11B3               	iorwf	(??___ftpack+2)& (0+255),w,b
  5626  000EBA  B4D8               	btfsc	status,2,c
  5627  000EBC  D00B               	goto	l2225
  5628  000EBE  D7D7               	goto	l2217
  5629  000EC0                     l2223:
  5630                           
  5631                           ; BSR set to: 0
  5632  000EC0  0100               	movlb	0	; () banked
  5633  000EC2  07AF               	decf	___ftpack@exp& (0+255),f,b
  5634  000EC4  0100               	movlb	0	; () banked
  5635  000EC6  90D8               	bcf	status,0,c
  5636  000EC8  0100               	movlb	0	; () banked
  5637  000ECA  37AC               	rlcf	___ftpack@arg& (0+255),f,b
  5638  000ECC  0100               	movlb	0	; () banked
  5639  000ECE  37AD               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  5640  000ED0  0100               	movlb	0	; () banked
  5641  000ED2  37AE               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  5642  000ED4                     l2225:
  5643                           
  5644                           ; BSR set to: 0
  5645  000ED4  0100               	movlb	0	; () banked
  5646  000ED6  AFAD               	btfss	(___ftpack@arg+1)& (0+255),7,b
  5647  000ED8  D7F3               	goto	l2223
  5648                           
  5649                           ; BSR set to: 0
  5650  000EDA  0100               	movlb	0	; () banked
  5651  000EDC  B1AF               	btfsc	___ftpack@exp& (0+255),0,b
  5652  000EDE  D002               	goto	l2229
  5653                           
  5654                           ; BSR set to: 0
  5655  000EE0  0100               	movlb	0	; () banked
  5656  000EE2  9FAD               	bcf	(___ftpack@arg+1)& (0+255),7,b
  5657  000EE4                     l2229:
  5658                           
  5659                           ; BSR set to: 0
  5660  000EE4  0100               	movlb	0	; () banked
  5661  000EE6  90D8               	bcf	status,0,c
  5662  000EE8  33AF               	rrcf	___ftpack@exp& (0+255),f,b
  5663  000EEA  0100               	movlb	0	; () banked
  5664  000EEC  51AF               	movf	___ftpack@exp& (0+255),w,b
  5665  000EEE  0100               	movlb	0	; () banked
  5666  000EF0  13AE               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  5667                           
  5668                           ; BSR set to: 0
  5669  000EF2  0100               	movlb	0	; () banked
  5670  000EF4  51B0               	movf	___ftpack@sign& (0+255),w,b
  5671  000EF6  B4D8               	btfsc	status,2,c
  5672  000EF8  D002               	goto	l2235
  5673                           
  5674                           ; BSR set to: 0
  5675  000EFA  0100               	movlb	0	; () banked
  5676  000EFC  8FAE               	bsf	(___ftpack@arg+2)& (0+255),7,b
  5677  000EFE                     l2235:
  5678                           
  5679                           ; BSR set to: 0
  5680  000EFE  C0AC  F0AC         	movff	___ftpack@arg,?___ftpack
  5681  000F02  C0AD  F0AD         	movff	___ftpack@arg+1,?___ftpack+1
  5682  000F06  C0AE  F0AE         	movff	___ftpack@arg+2,?___ftpack+2
  5683  000F0A                     l848:
  5684                           
  5685                           ; BSR set to: 0
  5686  000F0A  0012               	return	
  5687  000F0C                     __end_of___ftpack:
  5688                           	opt stack 0
  5689                           tblptru	equ	0xFF8
  5690                           tblptrh	equ	0xFF7
  5691                           tblptrl	equ	0xFF6
  5692                           tablat	equ	0xFF5
  5693                           prodh	equ	0xFF4
  5694                           prodl	equ	0xFF3
  5695                           intcon	equ	0xFF2
  5696                           intcon2	equ	0xFF1
  5697                           intcon3	equ	0xFF0
  5698                           indf0	equ	0xFEF
  5699                           postinc0	equ	0xFEE
  5700                           fsr0h	equ	0xFEA
  5701                           fsr0l	equ	0xFE9
  5702                           wreg	equ	0xFE8
  5703                           postinc1	equ	0xFE6
  5704                           postdec1	equ	0xFE5
  5705                           fsr1l	equ	0xFE1
  5706                           indf2	equ	0xFDF
  5707                           postinc2	equ	0xFDE
  5708                           postdec2	equ	0xFDD
  5709                           fsr2h	equ	0xFDA
  5710                           fsr2l	equ	0xFD9
  5711                           status	equ	0xFD8
  5712                           
  5713 ;; *************** function _SetDCPWM1 *****************
  5714 ;; Defined at:
  5715 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  5720 ;; Return value:  Size  Location     Type
  5721 ;;		None               void
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5729 ;;      Params:         0       2       0       0       0       0       0       0       0
  5730 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5731 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5732 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5733 ;;Total ram usage:        6 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; Hardware stack levels required when called:    4
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_PWM_DutyCycle1
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text32
  5744  001AC2                     __ptext32:
  5745                           	opt stack 0
  5746  001AC2                     _SetDCPWM1:
  5747                           	opt stack 25
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;incstack = 0
  5751  001AC2  0100               	movlb	0	; () banked
  5752  001AC4  C0AC  F0AE         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  5753  001AC8  0100               	movlb	0	; () banked
  5754  001ACA  C0AD  F0AF         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  5755  001ACE  0E06               	movlw	6
  5756  001AD0                     u1995:
  5757  001AD0  90D8               	bcf	status,0,c
  5758  001AD2  0100               	movlb	0	; () banked
  5759  001AD4  37AE               	rlcf	??_SetDCPWM1& (0+255),f,b
  5760  001AD6  37AF               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  5761  001AD8  2EE8               	decfsz	wreg,f,c
  5762  001ADA  D7FA               	goto	u1995
  5763  001ADC  C0AE  F0B0         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  5764  001AE0  C0AF  F0B1         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  5765                           
  5766                           ; BSR set to: 0
  5767  001AE4  C0B1  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  5768  001AE8  C0B0  F0AE         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  5769  001AEC  0100               	movlb	0	; () banked
  5770  001AEE  90D8               	bcf	status,0,c
  5771  001AF0  33AE               	rrcf	??_SetDCPWM1& (0+255),f,b
  5772  001AF2  0100               	movlb	0	; () banked
  5773  001AF4  90D8               	bcf	status,0,c
  5774  001AF6  33AE               	rrcf	??_SetDCPWM1& (0+255),f,b
  5775  001AF8  0E30               	movlw	48
  5776  001AFA  0100               	movlb	0	; () banked
  5777  001AFC  17AE               	andwf	??_SetDCPWM1& (0+255),f,b
  5778  001AFE  50BD               	movf	4029,w,c	;volatile
  5779  001B00  0BCF               	andlw	207
  5780  001B02  0100               	movlb	0	; () banked
  5781  001B04  11AE               	iorwf	??_SetDCPWM1& (0+255),w,b
  5782  001B06  6EBD               	movwf	4029,c	;volatile
  5783                           
  5784                           ; BSR set to: 0
  5785  001B08  0012               	return	
  5786  001B0A                     __end_of_SetDCPWM1:
  5787                           	opt stack 0
  5788                           tblptru	equ	0xFF8
  5789                           tblptrh	equ	0xFF7
  5790                           tblptrl	equ	0xFF6
  5791                           tablat	equ	0xFF5
  5792                           prodh	equ	0xFF4
  5793                           prodl	equ	0xFF3
  5794                           intcon	equ	0xFF2
  5795                           intcon2	equ	0xFF1
  5796                           intcon3	equ	0xFF0
  5797                           indf0	equ	0xFEF
  5798                           postinc0	equ	0xFEE
  5799                           fsr0h	equ	0xFEA
  5800                           fsr0l	equ	0xFE9
  5801                           wreg	equ	0xFE8
  5802                           postinc1	equ	0xFE6
  5803                           postdec1	equ	0xFE5
  5804                           fsr1l	equ	0xFE1
  5805                           indf2	equ	0xFDF
  5806                           postinc2	equ	0xFDE
  5807                           postdec2	equ	0xFDD
  5808                           fsr2h	equ	0xFDA
  5809                           fsr2l	equ	0xFD9
  5810                           status	equ	0xFD8
  5811                           
  5812 ;; *************** function _TMRO_USART *****************
  5813 ;; Defined at:
  5814 ;;		line 84 in file "robot.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;		None               void
  5821 ;; Registers used:
  5822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5830 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5831 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5832 ;;Total ram usage:       14 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    3
  5835 ;; This function calls:
  5836 ;;		_ReadUSART
  5837 ;;		i2_PWM_DutyCycle1
  5838 ;;		i2_PWM_DutyCycle2
  5839 ;; This function is called by:
  5840 ;;		Interrupt level 2
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	intcode
  5845  000008                     __pintcode:
  5846                           	opt stack 0
  5847  000008                     _TMRO_USART:
  5848                           	opt stack 21
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;incstack = 0
  5852  000008  CFFA F034          	movff	pclath,??_TMRO_USART
  5853  00000C  CFFB F035          	movff	pclatu,??_TMRO_USART+1
  5854  000010  CFE9 F036          	movff	fsr0l,??_TMRO_USART+2
  5855  000014  ED75  F006         	call	int_func,f	;refresh shadow registers
  5856                           pclatu	equ	0xFFB
  5857                           pclath	equ	0xFFA
  5858                           tblptru	equ	0xFF8
  5859                           tblptrh	equ	0xFF7
  5860                           tblptrl	equ	0xFF6
  5861                           tablat	equ	0xFF5
  5862                           prodh	equ	0xFF4
  5863                           prodl	equ	0xFF3
  5864                           intcon	equ	0xFF2
  5865                           intcon2	equ	0xFF1
  5866                           intcon3	equ	0xFF0
  5867                           indf0	equ	0xFEF
  5868                           postinc0	equ	0xFEE
  5869                           fsr0h	equ	0xFEA
  5870                           fsr0l	equ	0xFE9
  5871                           wreg	equ	0xFE8
  5872                           postinc1	equ	0xFE6
  5873                           postdec1	equ	0xFE5
  5874                           fsr1l	equ	0xFE1
  5875                           indf2	equ	0xFDF
  5876                           postinc2	equ	0xFDE
  5877                           postdec2	equ	0xFDD
  5878                           fsr2h	equ	0xFDA
  5879                           fsr2l	equ	0xFD9
  5880                           status	equ	0xFD8
  5881                           
  5882                           	psect	intcode_body
  5883  000CEA                     __pintcode_body:
  5884                           	opt stack 21
  5885  000CEA                     int_func:
  5886                           	opt stack 21
  5887  000CEA  0006               	pop		; remove dummy address from shadow register refresh
  5888  000CEC  CFEA F037          	movff	fsr0h,??_TMRO_USART+3
  5889  000CF0  CFE1 F038          	movff	fsr1l,??_TMRO_USART+4
  5890  000CF4  CFE2 F039          	movff	fsr1h,??_TMRO_USART+5
  5891  000CF8  CFD9 F03A          	movff	fsr2l,??_TMRO_USART+6
  5892  000CFC  CFDA F03B          	movff	fsr2h,??_TMRO_USART+7
  5893  000D00  CFF3 F03C          	movff	prodl,??_TMRO_USART+8
  5894  000D04  CFF4 F03D          	movff	prodh,??_TMRO_USART+9
  5895  000D08  CFF6 F03E          	movff	tblptrl,??_TMRO_USART+10
  5896  000D0C  CFF7 F03F          	movff	tblptrh,??_TMRO_USART+11
  5897  000D10  CFF8 F040          	movff	tblptru,??_TMRO_USART+12
  5898  000D14  CFF5 F041          	movff	tablat,??_TMRO_USART+13
  5899                           
  5900                           ;robot.c: 89: if (PIR1bits.RCIF) {
  5901  000D18  AA9E               	btfss	3998,5,c	;volatile
  5902  000D1A  D034               	goto	i2l323
  5903                           
  5904                           ;robot.c: 91: BluetoothDato[cad] = ReadUSART();
  5905  000D1C  5055               	movf	_cad,w,c
  5906  000D1E  0D01               	mullw	1
  5907  000D20  0100               	movlb	0	; () banked
  5908  000D22  0E65               	movlw	low _BluetoothDato
  5909  000D24  24F3               	addwf	prodl,w,c
  5910  000D26  6ED9               	movwf	fsr2l,c
  5911  000D28  0100               	movlb	0	; () banked
  5912  000D2A  0E00               	movlw	high _BluetoothDato
  5913  000D2C  20F4               	addwfc	prodh,w,c
  5914  000D2E  6EDA               	movwf	fsr2h,c
  5915  000D30  EC77  F00E         	call	_ReadUSART	;wreg free
  5916  000D34  6EDF               	movwf	indf2,c
  5917                           
  5918                           ;robot.c: 92: if (BluetoothDato[cad] == '#') {
  5919  000D36  5055               	movf	_cad,w,c
  5920  000D38  0D01               	mullw	1
  5921  000D3A  0100               	movlb	0	; () banked
  5922  000D3C  0E65               	movlw	low _BluetoothDato
  5923  000D3E  24F3               	addwf	prodl,w,c
  5924  000D40  6ED9               	movwf	fsr2l,c
  5925  000D42  0100               	movlb	0	; () banked
  5926  000D44  0E00               	movlw	high _BluetoothDato
  5927  000D46  20F4               	addwfc	prodh,w,c
  5928  000D48  6EDA               	movwf	fsr2h,c
  5929  000D4A  0E23               	movlw	35
  5930  000D4C  62DF               	cpfseq	indf2,c
  5931  000D4E  D015               	goto	i2l3045
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;robot.c: 93: if (ComanTFlag == 0) {
  5935  000D50  664C               	tstfsz	_ComanTFlag,c
  5936  000D52  D008               	goto	i2l3041
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;robot.c: 94: EntTrama = 1;
  5940  000D54  0E01               	movlw	1
  5941  000D56  6E4F               	movwf	_EntTrama,c
  5942                           
  5943                           ;robot.c: 95: FinComandT = 0;
  5944  000D58  0E00               	movlw	0
  5945  000D5A  0100               	movlb	0	; () banked
  5946  000D5C  6F63               	movwf	_FinComandT& (0+255),b
  5947                           
  5948                           ;robot.c: 96: ComanTFlag = 1;
  5949  000D5E  0E01               	movlw	1
  5950  000D60  6E4C               	movwf	_ComanTFlag,c
  5951  000D62  D00E               	goto	i2u310_40
  5952  000D64                     i2l3041:
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;robot.c: 99: else if (ComanTFlag == 1) {
  5956  000D64  044C               	decf	_ComanTFlag,w,c
  5957  000D66  A4D8               	btfss	status,2,c
  5958  000D68  D02A               	goto	i2l330
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;robot.c: 100: ComanTFlag = 0;
  5962  000D6A  0E00               	movlw	0
  5963  000D6C  6E4C               	movwf	_ComanTFlag,c
  5964                           
  5965                           ;robot.c: 101: FinComandT = 1;
  5966  000D6E  0E01               	movlw	1
  5967  000D70  0100               	movlb	0	; () banked
  5968  000D72  6F63               	movwf	_FinComandT& (0+255),b
  5969                           
  5970                           ;robot.c: 102: EntTrama = 0;
  5971  000D74  0E00               	movlw	0
  5972  000D76  6E4F               	movwf	_EntTrama,c
  5973  000D78  D022               	goto	i2l330
  5974  000D7A                     i2l3045:
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;robot.c: 106: else if (EntTrama == 1)
  5978  000D7A  044F               	decf	_EntTrama,w,c
  5979  000D7C  A4D8               	btfss	status,2,c
  5980  000D7E  D01F               	goto	i2l330
  5981  000D80                     i2u310_40:
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;robot.c: 107: cad++;
  5985  000D80  2A55               	incf	_cad,f,c
  5986  000D82  D01D               	goto	i2l330
  5987  000D84                     i2l323:
  5988                           
  5989                           ;robot.c: 111: else if(INTCONbits.INT0F == 1){
  5990  000D84  A2F2               	btfss	intcon,1,c	;volatile
  5991  000D86  D007               	goto	i2l331
  5992                           
  5993                           ;robot.c: 115: PWM_DutyCycle1(100);
  5994  000D88  0E64               	movlw	100
  5995  000D8A  EC75  F00C         	call	i2_PWM_DutyCycle1
  5996                           
  5997                           ;robot.c: 116: PWM_DutyCycle2(0);
  5998  000D8E  0E00               	movlw	0
  5999  000D90  EC40  F00C         	call	i2_PWM_DutyCycle2
  6000                           
  6001                           ;robot.c: 117: }
  6002  000D94  D014               	goto	i2l330
  6003  000D96                     i2l331:
  6004                           
  6005                           ;robot.c: 119: else if(INTCON3bits.INT1F == 1){
  6006  000D96  A0F0               	btfss	intcon3,0,c	;volatile
  6007  000D98  D007               	goto	i2l333
  6008                           
  6009                           ;robot.c: 123: PWM_DutyCycle1(0);
  6010  000D9A  0E00               	movlw	0
  6011  000D9C  EC75  F00C         	call	i2_PWM_DutyCycle1
  6012                           
  6013                           ;robot.c: 124: PWM_DutyCycle2(100);
  6014  000DA0  0E64               	movlw	100
  6015  000DA2  EC40  F00C         	call	i2_PWM_DutyCycle2
  6016                           
  6017                           ;robot.c: 125: }
  6018  000DA6  D00B               	goto	i2l330
  6019  000DA8                     i2l333:
  6020                           
  6021                           ;robot.c: 126: else if(INTCON3bits.INT2F == 1){
  6022  000DA8  A2F0               	btfss	intcon3,1,c	;volatile
  6023  000DAA  D007               	goto	i2l335
  6024                           
  6025                           ;robot.c: 130: PWM_DutyCycle1(100);
  6026  000DAC  0E64               	movlw	100
  6027  000DAE  EC75  F00C         	call	i2_PWM_DutyCycle1
  6028                           
  6029                           ;robot.c: 131: PWM_DutyCycle2(100);
  6030  000DB2  0E64               	movlw	100
  6031  000DB4  EC40  F00C         	call	i2_PWM_DutyCycle2
  6032                           
  6033                           ;robot.c: 132: }
  6034  000DB8  D002               	goto	i2l330
  6035  000DBA                     i2l335:
  6036                           
  6037                           ;robot.c: 133: else if(PIR1bits.TMR2IF){
  6038  000DBA  B29E               	btfsc	3998,1,c	;volatile
  6039                           
  6040                           ;robot.c: 135: PIE1bits.TMR2IE = 0;
  6041  000DBC  929D               	bcf	3997,1,c	;volatile
  6042  000DBE                     i2l330:
  6043                           
  6044                           ;robot.c: 136: }
  6045                           ;robot.c: 137: INTCON3bits.INT2F = 0;
  6046  000DBE  92F0               	bcf	intcon3,1,c	;volatile
  6047                           
  6048                           ;robot.c: 138: INTCON3bits.INT1F = 0;
  6049  000DC0  90F0               	bcf	intcon3,0,c	;volatile
  6050                           
  6051                           ;robot.c: 139: INTCONbits.INT0F = 0;
  6052  000DC2  92F2               	bcf	intcon,1,c	;volatile
  6053                           
  6054                           ;robot.c: 140: PIR1bits.TMR2IF=0;
  6055  000DC4  929E               	bcf	3998,1,c	;volatile
  6056                           
  6057                           ;robot.c: 141: PIR1bits.RCIF=0;
  6058  000DC6  9A9E               	bcf	3998,5,c	;volatile
  6059                           
  6060                           ;robot.c: 143: return;
  6061  000DC8  C041  FFF5         	movff	??_TMRO_USART+13,tablat
  6062  000DCC  C040  FFF8         	movff	??_TMRO_USART+12,tblptru
  6063  000DD0  C03F  FFF7         	movff	??_TMRO_USART+11,tblptrh
  6064  000DD4  C03E  FFF6         	movff	??_TMRO_USART+10,tblptrl
  6065  000DD8  C03D  FFF4         	movff	??_TMRO_USART+9,prodh
  6066  000DDC  C03C  FFF3         	movff	??_TMRO_USART+8,prodl
  6067  000DE0  C03B  FFDA         	movff	??_TMRO_USART+7,fsr2h
  6068  000DE4  C03A  FFD9         	movff	??_TMRO_USART+6,fsr2l
  6069  000DE8  C039  FFE2         	movff	??_TMRO_USART+5,fsr1h
  6070  000DEC  C038  FFE1         	movff	??_TMRO_USART+4,fsr1l
  6071  000DF0  C037  FFEA         	movff	??_TMRO_USART+3,fsr0h
  6072  000DF4  C036  FFE9         	movff	??_TMRO_USART+2,fsr0l
  6073  000DF8  C035  FFFB         	movff	??_TMRO_USART+1,pclatu
  6074  000DFC  C034  FFFA         	movff	??_TMRO_USART,pclath
  6075  000E00  0011               	retfie		f
  6076  000E02                     __end_of_TMRO_USART:
  6077                           	opt stack 0
  6078                           pclatu	equ	0xFFB
  6079                           pclath	equ	0xFFA
  6080                           tblptru	equ	0xFF8
  6081                           tblptrh	equ	0xFF7
  6082                           tblptrl	equ	0xFF6
  6083                           tablat	equ	0xFF5
  6084                           prodh	equ	0xFF4
  6085                           prodl	equ	0xFF3
  6086                           intcon	equ	0xFF2
  6087                           intcon2	equ	0xFF1
  6088                           intcon3	equ	0xFF0
  6089                           indf0	equ	0xFEF
  6090                           postinc0	equ	0xFEE
  6091                           fsr0h	equ	0xFEA
  6092                           fsr0l	equ	0xFE9
  6093                           wreg	equ	0xFE8
  6094                           postinc1	equ	0xFE6
  6095                           postdec1	equ	0xFE5
  6096                           fsr1h	equ	0xFE2
  6097                           fsr1l	equ	0xFE1
  6098                           indf2	equ	0xFDF
  6099                           postinc2	equ	0xFDE
  6100                           postdec2	equ	0xFDD
  6101                           fsr2h	equ	0xFDA
  6102                           fsr2l	equ	0xFD9
  6103                           status	equ	0xFD8
  6104                           
  6105 ;; *************** function i2_PWM_DutyCycle2 *****************
  6106 ;; Defined at:
  6107 ;;		line 55 in file "pwm.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  percentageDu    1    wreg     unsigned char 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  percentageDu    1   48[COMRAM] unsigned char 
  6112 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
  6113 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;		None               void
  6116 ;; Registers used:
  6117 ;;		wreg, status,2, status,0, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6123 ;;      Params:         0       0       0       0       0       0       0       0       0
  6124 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6125 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6126 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6127 ;;Total ram usage:        9 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:    2
  6130 ;; This function calls:
  6131 ;;		i2_SetDCPWM2
  6132 ;;		i2___ftmul
  6133 ;;		i2___fttol
  6134 ;;		i2___lbtoft
  6135 ;; This function is called by:
  6136 ;;		_TMRO_USART
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text34
  6141  001880                     __ptext34:
  6142                           	opt stack 0
  6143  001880                     i2_PWM_DutyCycle2:
  6144                           	opt stack 21
  6145                           
  6146                           ;incstack = 0
  6147                           ;i2PWM_DutyCycle2@percentageDuty stored from wreg
  6148  001880  6E31               	movwf	i2PWM_DutyCycle2@percentageDuty,c
  6149                           
  6150                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  6151  001882  0E00               	movlw	0
  6152  001884  6E33               	movwf	i2PWM_DutyCycle2@DC+1,c
  6153  001886  0E00               	movlw	0
  6154  001888  6E32               	movwf	i2PWM_DutyCycle2@DC,c
  6155  00188A  0E00               	movlw	0
  6156  00188C  6E30               	movwf	i2PWM_DutyCycle2@DutyCycle+1,c
  6157  00188E  0E00               	movlw	0
  6158  001890  6E2F               	movwf	i2PWM_DutyCycle2@DutyCycle,c
  6159                           
  6160                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  6161  001892  0EAE               	movlw	174
  6162  001894  6E10               	movwf	i2___ftmul@f2,c
  6163  001896  0E23               	movlw	35
  6164  001898  6E11               	movwf	i2___ftmul@f2+1,c
  6165  00189A  0E41               	movlw	65
  6166  00189C  6E12               	movwf	i2___ftmul@f2+2,c
  6167  00189E  5031               	movf	i2PWM_DutyCycle2@percentageDuty,w,c
  6168  0018A0  EC65  F00E         	call	i2___lbtoft
  6169  0018A4  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
  6170  0018A8  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
  6171  0018AC  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
  6172  0018B0  EC86  F007         	call	i2___ftmul	;wreg free
  6173  0018B4  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
  6174  0018B8  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
  6175  0018BC  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
  6176  0018C0  ECF8  F007         	call	i2___fttol	;wreg free
  6177  0018C4  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle2
  6178  0018C8  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle2+1
  6179  0018CC  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle2+2
  6180  0018D0  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle2+3
  6181  0018D4  C02B  F032         	movff	??i2_PWM_DutyCycle2,i2PWM_DutyCycle2@DC
  6182  0018D8  C02C  F033         	movff	??i2_PWM_DutyCycle2+1,i2PWM_DutyCycle2@DC+1
  6183                           
  6184                           ;pwm.c: 60: SetDCPWM2(DC);
  6185  0018DC  C032  F001         	movff	i2PWM_DutyCycle2@DC,i2SetDCPWM2@dutycycle
  6186  0018E0  C033  F002         	movff	i2PWM_DutyCycle2@DC+1,i2SetDCPWM2@dutycycle+1
  6187  0018E4  ECEC  F00D         	call	i2_SetDCPWM2	;wreg free
  6188                           
  6189                           ;pwm.c: 61: return;
  6190  0018E8  0012               	return	
  6191  0018EA                     __end_ofi2_PWM_DutyCycle2:
  6192                           	opt stack 0
  6193                           pclatu	equ	0xFFB
  6194                           pclath	equ	0xFFA
  6195                           tblptru	equ	0xFF8
  6196                           tblptrh	equ	0xFF7
  6197                           tblptrl	equ	0xFF6
  6198                           tablat	equ	0xFF5
  6199                           prodh	equ	0xFF4
  6200                           prodl	equ	0xFF3
  6201                           intcon	equ	0xFF2
  6202                           intcon2	equ	0xFF1
  6203                           intcon3	equ	0xFF0
  6204                           indf0	equ	0xFEF
  6205                           postinc0	equ	0xFEE
  6206                           fsr0h	equ	0xFEA
  6207                           fsr0l	equ	0xFE9
  6208                           wreg	equ	0xFE8
  6209                           postinc1	equ	0xFE6
  6210                           postdec1	equ	0xFE5
  6211                           fsr1h	equ	0xFE2
  6212                           fsr1l	equ	0xFE1
  6213                           indf2	equ	0xFDF
  6214                           postinc2	equ	0xFDE
  6215                           postdec2	equ	0xFDD
  6216                           fsr2h	equ	0xFDA
  6217                           fsr2l	equ	0xFD9
  6218                           status	equ	0xFD8
  6219                           
  6220 ;; *************** function i2_SetDCPWM2 *****************
  6221 ;; Defined at:
  6222 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  dutycycle       2    0[COMRAM] unsigned int 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;  SetDCPWM2       2    4[COMRAM] struct PWMDC
  6227 ;; Return value:  Size  Location     Type
  6228 ;;		None               void
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6236 ;;      Params:         2       0       0       0       0       0       0       0       0
  6237 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6238 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6239 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6240 ;;Total ram usage:        6 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		i2_PWM_DutyCycle2
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text35
  6250  001BD8                     __ptext35:
  6251                           	opt stack 0
  6252  001BD8                     i2_SetDCPWM2:
  6253                           	opt stack 22
  6254                           
  6255                           ;incstack = 0
  6256  001BD8  C001  F003         	movff	i2SetDCPWM2@dutycycle,??i2_SetDCPWM2
  6257  001BDC  C002  F004         	movff	i2SetDCPWM2@dutycycle+1,??i2_SetDCPWM2+1
  6258  001BE0  0E06               	movlw	6
  6259  001BE2                     i2u277_45:
  6260  001BE2  90D8               	bcf	status,0,c
  6261  001BE4  3603               	rlcf	??i2_SetDCPWM2,f,c
  6262  001BE6  3604               	rlcf	??i2_SetDCPWM2+1,f,c
  6263  001BE8  2EE8               	decfsz	wreg,f,c
  6264  001BEA  D7FB               	goto	i2u277_45
  6265  001BEC  C003  F005         	movff	??i2_SetDCPWM2,i2SetDCPWM2@DCycle
  6266  001BF0  C004  F006         	movff	??i2_SetDCPWM2+1,i2SetDCPWM2@DCycle+1
  6267  001BF4  C006  FFBB         	movff	i2SetDCPWM2@DCycle+1,4027	;volatile
  6268  001BF8  C005  F003         	movff	i2SetDCPWM2@DCycle,??i2_SetDCPWM2
  6269  001BFC  90D8               	bcf	status,0,c
  6270  001BFE  3203               	rrcf	??i2_SetDCPWM2,f,c
  6271  001C00  90D8               	bcf	status,0,c
  6272  001C02  3203               	rrcf	??i2_SetDCPWM2,f,c
  6273  001C04  0E30               	movlw	48
  6274  001C06  1603               	andwf	??i2_SetDCPWM2,f,c
  6275  001C08  50BA               	movf	4026,w,c	;volatile
  6276  001C0A  0BCF               	andlw	207
  6277  001C0C  1003               	iorwf	??i2_SetDCPWM2,w,c
  6278  001C0E  6EBA               	movwf	4026,c	;volatile
  6279  001C10  0012               	return	
  6280  001C12                     __end_ofi2_SetDCPWM2:
  6281                           	opt stack 0
  6282                           pclatu	equ	0xFFB
  6283                           pclath	equ	0xFFA
  6284                           tblptru	equ	0xFF8
  6285                           tblptrh	equ	0xFF7
  6286                           tblptrl	equ	0xFF6
  6287                           tablat	equ	0xFF5
  6288                           prodh	equ	0xFF4
  6289                           prodl	equ	0xFF3
  6290                           intcon	equ	0xFF2
  6291                           intcon2	equ	0xFF1
  6292                           intcon3	equ	0xFF0
  6293                           indf0	equ	0xFEF
  6294                           postinc0	equ	0xFEE
  6295                           fsr0h	equ	0xFEA
  6296                           fsr0l	equ	0xFE9
  6297                           wreg	equ	0xFE8
  6298                           postinc1	equ	0xFE6
  6299                           postdec1	equ	0xFE5
  6300                           fsr1h	equ	0xFE2
  6301                           fsr1l	equ	0xFE1
  6302                           indf2	equ	0xFDF
  6303                           postinc2	equ	0xFDE
  6304                           postdec2	equ	0xFDD
  6305                           fsr2h	equ	0xFDA
  6306                           fsr2l	equ	0xFD9
  6307                           status	equ	0xFD8
  6308                           
  6309 ;; *************** function i2_PWM_DutyCycle1 *****************
  6310 ;; Defined at:
  6311 ;;		line 33 in file "pwm.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  percentageDu    1    wreg     unsigned char 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  percentageDu    1   48[COMRAM] unsigned char 
  6316 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
  6317 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;		None               void
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0, cstack
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6327 ;;      Params:         0       0       0       0       0       0       0       0       0
  6328 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6329 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6330 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6331 ;;Total ram usage:        9 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    2
  6334 ;; This function calls:
  6335 ;;		i2_SetDCPWM1
  6336 ;;		i2___ftmul
  6337 ;;		i2___fttol
  6338 ;;		i2___lbtoft
  6339 ;; This function is called by:
  6340 ;;		_TMRO_USART
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text36
  6345  0018EA                     __ptext36:
  6346                           	opt stack 0
  6347  0018EA                     i2_PWM_DutyCycle1:
  6348                           	opt stack 21
  6349                           
  6350                           ;incstack = 0
  6351                           ;i2PWM_DutyCycle1@percentageDuty stored from wreg
  6352  0018EA  6E31               	movwf	i2PWM_DutyCycle1@percentageDuty,c
  6353                           
  6354                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  6355  0018EC  0E00               	movlw	0
  6356  0018EE  6E33               	movwf	i2PWM_DutyCycle1@DC+1,c
  6357  0018F0  0E00               	movlw	0
  6358  0018F2  6E32               	movwf	i2PWM_DutyCycle1@DC,c
  6359  0018F4  0E00               	movlw	0
  6360  0018F6  6E30               	movwf	i2PWM_DutyCycle1@DutyCycle+1,c
  6361  0018F8  0E00               	movlw	0
  6362  0018FA  6E2F               	movwf	i2PWM_DutyCycle1@DutyCycle,c
  6363                           
  6364                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  6365  0018FC  0EAE               	movlw	174
  6366  0018FE  6E10               	movwf	i2___ftmul@f2,c
  6367  001900  0E23               	movlw	35
  6368  001902  6E11               	movwf	i2___ftmul@f2+1,c
  6369  001904  0E41               	movlw	65
  6370  001906  6E12               	movwf	i2___ftmul@f2+2,c
  6371  001908  5031               	movf	i2PWM_DutyCycle1@percentageDuty,w,c
  6372  00190A  EC65  F00E         	call	i2___lbtoft
  6373  00190E  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
  6374  001912  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
  6375  001916  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
  6376  00191A  EC86  F007         	call	i2___ftmul	;wreg free
  6377  00191E  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
  6378  001922  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
  6379  001926  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
  6380  00192A  ECF8  F007         	call	i2___fttol	;wreg free
  6381  00192E  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle1
  6382  001932  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle1+1
  6383  001936  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle1+2
  6384  00193A  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle1+3
  6385  00193E  C02B  F032         	movff	??i2_PWM_DutyCycle1,i2PWM_DutyCycle1@DC
  6386  001942  C02C  F033         	movff	??i2_PWM_DutyCycle1+1,i2PWM_DutyCycle1@DC+1
  6387                           
  6388                           ;pwm.c: 38: SetDCPWM1(DC);
  6389  001946  C032  F001         	movff	i2PWM_DutyCycle1@DC,i2SetDCPWM1@dutycycle
  6390  00194A  C033  F002         	movff	i2PWM_DutyCycle1@DC+1,i2SetDCPWM1@dutycycle+1
  6391  00194E  EC09  F00E         	call	i2_SetDCPWM1	;wreg free
  6392                           
  6393                           ;pwm.c: 39: return;
  6394  001952  0012               	return	
  6395  001954                     __end_ofi2_PWM_DutyCycle1:
  6396                           	opt stack 0
  6397                           pclatu	equ	0xFFB
  6398                           pclath	equ	0xFFA
  6399                           tblptru	equ	0xFF8
  6400                           tblptrh	equ	0xFF7
  6401                           tblptrl	equ	0xFF6
  6402                           tablat	equ	0xFF5
  6403                           prodh	equ	0xFF4
  6404                           prodl	equ	0xFF3
  6405                           intcon	equ	0xFF2
  6406                           intcon2	equ	0xFF1
  6407                           intcon3	equ	0xFF0
  6408                           indf0	equ	0xFEF
  6409                           postinc0	equ	0xFEE
  6410                           fsr0h	equ	0xFEA
  6411                           fsr0l	equ	0xFE9
  6412                           wreg	equ	0xFE8
  6413                           postinc1	equ	0xFE6
  6414                           postdec1	equ	0xFE5
  6415                           fsr1h	equ	0xFE2
  6416                           fsr1l	equ	0xFE1
  6417                           indf2	equ	0xFDF
  6418                           postinc2	equ	0xFDE
  6419                           postdec2	equ	0xFDD
  6420                           fsr2h	equ	0xFDA
  6421                           fsr2l	equ	0xFD9
  6422                           status	equ	0xFD8
  6423                           
  6424 ;; *************** function i2___lbtoft *****************
  6425 ;; Defined at:
  6426 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  c               1    wreg     unsigned char 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  c               1   11[COMRAM] unsigned char 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  3    8[COMRAM] float 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6440 ;;      Params:         3       0       0       0       0       0       0       0       0
  6441 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6443 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6444 ;;Total ram usage:        4 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:    1
  6447 ;; This function calls:
  6448 ;;		i2___ftpack
  6449 ;; This function is called by:
  6450 ;;		i2_PWM_DutyCycle1
  6451 ;;		i2_PWM_DutyCycle2
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text37
  6456  001CCA                     __ptext37:
  6457                           	opt stack 0
  6458  001CCA                     i2___lbtoft:
  6459                           	opt stack 21
  6460                           
  6461                           ;incstack = 0
  6462                           ;i2___lbtoft@c stored from wreg
  6463  001CCA  6E0C               	movwf	i2___lbtoft@c,c
  6464  001CCC  500C               	movf	i2___lbtoft@c,w,c
  6465  001CCE  6E01               	movwf	i2___ftpack@arg,c
  6466  001CD0  6A02               	clrf	i2___ftpack@arg+1,c
  6467  001CD2  6A03               	clrf	i2___ftpack@arg+2,c
  6468  001CD4  0E8E               	movlw	142
  6469  001CD6  6E04               	movwf	i2___ftpack@exp,c
  6470  001CD8  0E00               	movlw	0
  6471  001CDA  6E05               	movwf	i2___ftpack@sign,c
  6472  001CDC  ECF3  F009         	call	i2___ftpack	;wreg free
  6473  001CE0  C001  F009         	movff	?i2___ftpack,?i2___lbtoft
  6474  001CE4  C002  F00A         	movff	?i2___ftpack+1,?i2___lbtoft+1
  6475  001CE8  C003  F00B         	movff	?i2___ftpack+2,?i2___lbtoft+2
  6476  001CEC  0012               	return	
  6477  001CEE                     __end_ofi2___lbtoft:
  6478                           	opt stack 0
  6479                           pclatu	equ	0xFFB
  6480                           pclath	equ	0xFFA
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           intcon	equ	0xFF2
  6488                           intcon2	equ	0xFF1
  6489                           intcon3	equ	0xFF0
  6490                           indf0	equ	0xFEF
  6491                           postinc0	equ	0xFEE
  6492                           fsr0h	equ	0xFEA
  6493                           fsr0l	equ	0xFE9
  6494                           wreg	equ	0xFE8
  6495                           postinc1	equ	0xFE6
  6496                           postdec1	equ	0xFE5
  6497                           fsr1h	equ	0xFE2
  6498                           fsr1l	equ	0xFE1
  6499                           indf2	equ	0xFDF
  6500                           postinc2	equ	0xFDE
  6501                           postdec2	equ	0xFDD
  6502                           fsr2h	equ	0xFDA
  6503                           fsr2l	equ	0xFD9
  6504                           status	equ	0xFD8
  6505                           
  6506 ;; *************** function i2___fttol *****************
  6507 ;; Defined at:
  6508 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  f1              3   27[COMRAM] float 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  __fttol         4   37[COMRAM] unsigned long 
  6513 ;;  __fttol         1   41[COMRAM] unsigned char 
  6514 ;;  __fttol         1   36[COMRAM] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  4   27[COMRAM] long 
  6517 ;; Registers used:
  6518 ;;		wreg, status,2, status,0
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6524 ;;      Params:         4       0       0       0       0       0       0       0       0
  6525 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6526 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6527 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6528 ;;Total ram usage:       15 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		i2_PWM_DutyCycle1
  6534 ;;		i2_PWM_DutyCycle2
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text38
  6539  000FF0                     __ptext38:
  6540                           	opt stack 0
  6541  000FF0                     i2___fttol:
  6542                           	opt stack 22
  6543                           
  6544                           ;incstack = 0
  6545  000FF0  C01E  F020         	movff	i2___fttol@f1+2,??i2___fttol
  6546  000FF4  6A21               	clrf	(??i2___fttol+1)& (0+255),c
  6547  000FF6  6A22               	clrf	(??i2___fttol+2)& (0+255),c
  6548  000FF8  341D               	rlcf	i2___fttol@f1+1,w,c
  6549  000FFA  3620               	rlcf	??i2___fttol& (0+255),f,c
  6550  000FFC  E301               	bnc	u284_41
  6551  000FFE  8021               	bsf	(??i2___fttol+1)& (0+255),0,c
  6552  001000                     u284_41:
  6553  001000  5020               	movf	??i2___fttol,w,c
  6554  001002  6E2A               	movwf	i2___fttol@exp1,c
  6555  001004  662A               	tstfsz	i2___fttol@exp1& (0+255),c
  6556  001006  D001               	goto	i2l2827
  6557  001008  D038               	goto	i2u289_40
  6558  00100A                     i2l2827:
  6559  00100A  0E17               	movlw	23
  6560  00100C  6E20               	movwf	??i2___fttol& (0+255),c
  6561  00100E  C01C  F021         	movff	i2___fttol@f1,??i2___fttol+1
  6562  001012  C01D  F022         	movff	i2___fttol@f1+1,??i2___fttol+2
  6563  001016  C01E  F023         	movff	i2___fttol@f1+2,??i2___fttol+3
  6564  00101A  2820               	incf	??i2___fttol,w,c
  6565  00101C  6E24               	movwf	(??i2___fttol+4)& (0+255),c
  6566  00101E  D004               	goto	i2u286_40
  6567  001020                     i2u286_45:
  6568  001020  90D8               	bcf	status,0,c
  6569  001022  3223               	rrcf	??i2___fttol+3,f,c
  6570  001024  3222               	rrcf	??i2___fttol+2,f,c
  6571  001026  3221               	rrcf	??i2___fttol+1,f,c
  6572  001028                     i2u286_40:
  6573  001028  2E24               	decfsz	(??i2___fttol+4)& (0+255),f,c
  6574  00102A  D7FA               	goto	i2u286_45
  6575  00102C  5021               	movf	??i2___fttol+1,w,c
  6576  00102E  6E25               	movwf	i2___fttol@sign1,c
  6577  001030  8E1D               	bsf	i2___fttol@f1+1,7,c
  6578  001032  0EFF               	movlw	255
  6579  001034  161C               	andwf	i2___fttol@f1,f,c
  6580  001036  0EFF               	movlw	255
  6581  001038  161D               	andwf	i2___fttol@f1+1,f,c
  6582  00103A  0E00               	movlw	0
  6583  00103C  161E               	andwf	i2___fttol@f1+2,f,c
  6584  00103E  501C               	movf	i2___fttol@f1,w,c
  6585  001040  6E26               	movwf	i2___fttol@lval,c
  6586  001042  501D               	movf	i2___fttol@f1+1,w,c
  6587  001044  6E27               	movwf	i2___fttol@lval+1,c
  6588  001046  501E               	movf	i2___fttol@f1+2,w,c
  6589  001048  6E28               	movwf	i2___fttol@lval+2,c
  6590  00104A  6A29               	clrf	i2___fttol@lval+3,c
  6591  00104C  0E8E               	movlw	142
  6592  00104E  5E2A               	subwf	i2___fttol@exp1,f,c
  6593  001050  AE2A               	btfss	i2___fttol@exp1,7,c
  6594  001052  D010               	goto	i2l2849
  6595  001054  502A               	movf	i2___fttol@exp1,w,c
  6596  001056  0A80               	xorlw	128
  6597  001058  6E20               	movwf	??i2___fttol& (0+255),c
  6598  00105A  0EF1               	movlw	241
  6599  00105C  0A80               	xorlw	128
  6600  00105E  5C20               	subwf	??i2___fttol,w,c
  6601  001060  A0D8               	btfss	status,0,c
  6602  001062  D00B               	goto	i2u289_40
  6603  001064                     i2l2845:
  6604  001064  90D8               	bcf	status,0,c
  6605  001066  3229               	rrcf	i2___fttol@lval+3,f,c
  6606  001068  3228               	rrcf	i2___fttol@lval+2,f,c
  6607  00106A  3227               	rrcf	i2___fttol@lval+1,f,c
  6608  00106C  3226               	rrcf	i2___fttol@lval,f,c
  6609  00106E  3E2A               	incfsz	i2___fttol@exp1,f,c
  6610  001070  D7F9               	goto	i2l2845
  6611  001072  D014               	goto	i2l2859
  6612  001074                     i2l2849:
  6613  001074  0E17               	movlw	23
  6614  001076  642A               	cpfsgt	i2___fttol@exp1,c
  6615  001078  D00F               	goto	i2l2857
  6616  00107A                     i2u289_40:
  6617  00107A  0E00               	movlw	0
  6618  00107C  6E1C               	movwf	?i2___fttol,c
  6619  00107E  0E00               	movlw	0
  6620  001080  6E1D               	movwf	?i2___fttol+1,c
  6621  001082  0E00               	movlw	0
  6622  001084  6E1E               	movwf	?i2___fttol+2,c
  6623  001086  0E00               	movlw	0
  6624  001088  6E1F               	movwf	?i2___fttol+3,c
  6625  00108A  D01B               	goto	i2l952
  6626  00108C                     i2l2855:
  6627  00108C  90D8               	bcf	status,0,c
  6628  00108E  3626               	rlcf	i2___fttol@lval,f,c
  6629  001090  3627               	rlcf	i2___fttol@lval+1,f,c
  6630  001092  3628               	rlcf	i2___fttol@lval+2,f,c
  6631  001094  3629               	rlcf	i2___fttol@lval+3,f,c
  6632  001096  062A               	decf	i2___fttol@exp1,f,c
  6633  001098                     i2l2857:
  6634  001098  662A               	tstfsz	i2___fttol@exp1,c
  6635  00109A  D7F8               	goto	i2l2855
  6636  00109C                     i2l2859:
  6637  00109C  5025               	movf	i2___fttol@sign1,w,c
  6638  00109E  B4D8               	btfsc	status,2,c
  6639  0010A0  D008               	goto	i2l2863
  6640  0010A2  1E29               	comf	i2___fttol@lval+3,f,c
  6641  0010A4  1E28               	comf	i2___fttol@lval+2,f,c
  6642  0010A6  1E27               	comf	i2___fttol@lval+1,f,c
  6643  0010A8  6C26               	negf	i2___fttol@lval,c
  6644  0010AA  0E00               	movlw	0
  6645  0010AC  2227               	addwfc	i2___fttol@lval+1,f,c
  6646  0010AE  2228               	addwfc	i2___fttol@lval+2,f,c
  6647  0010B0  2229               	addwfc	i2___fttol@lval+3,f,c
  6648  0010B2                     i2l2863:
  6649  0010B2  C026  F01C         	movff	i2___fttol@lval,?i2___fttol
  6650  0010B6  C027  F01D         	movff	i2___fttol@lval+1,?i2___fttol+1
  6651  0010BA  C028  F01E         	movff	i2___fttol@lval+2,?i2___fttol+2
  6652  0010BE  C029  F01F         	movff	i2___fttol@lval+3,?i2___fttol+3
  6653  0010C2                     i2l952:
  6654  0010C2  0012               	return	
  6655  0010C4                     __end_ofi2___fttol:
  6656                           	opt stack 0
  6657                           pclatu	equ	0xFFB
  6658                           pclath	equ	0xFFA
  6659                           tblptru	equ	0xFF8
  6660                           tblptrh	equ	0xFF7
  6661                           tblptrl	equ	0xFF6
  6662                           tablat	equ	0xFF5
  6663                           prodh	equ	0xFF4
  6664                           prodl	equ	0xFF3
  6665                           intcon	equ	0xFF2
  6666                           intcon2	equ	0xFF1
  6667                           intcon3	equ	0xFF0
  6668                           indf0	equ	0xFEF
  6669                           postinc0	equ	0xFEE
  6670                           fsr0h	equ	0xFEA
  6671                           fsr0l	equ	0xFE9
  6672                           wreg	equ	0xFE8
  6673                           postinc1	equ	0xFE6
  6674                           postdec1	equ	0xFE5
  6675                           fsr1h	equ	0xFE2
  6676                           fsr1l	equ	0xFE1
  6677                           indf2	equ	0xFDF
  6678                           postinc2	equ	0xFDE
  6679                           postdec2	equ	0xFDD
  6680                           fsr2h	equ	0xFDA
  6681                           fsr2l	equ	0xFD9
  6682                           status	equ	0xFD8
  6683                           
  6684 ;; *************** function i2___ftmul *****************
  6685 ;; Defined at:
  6686 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  f1              3   12[COMRAM] float 
  6689 ;;  f2              3   15[COMRAM] float 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  __ftmul         3   22[COMRAM] unsigned um
  6692 ;;  __ftmul         1   26[COMRAM] unsigned char 
  6693 ;;  __ftmul         1   25[COMRAM] unsigned char 
  6694 ;;  __ftmul         1   21[COMRAM] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  3   12[COMRAM] float 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6704 ;;      Params:         6       0       0       0       0       0       0       0       0
  6705 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6706 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6707 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6708 ;;Total ram usage:       15 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    1
  6711 ;; This function calls:
  6712 ;;		i2___ftpack
  6713 ;; This function is called by:
  6714 ;;		i2_PWM_DutyCycle1
  6715 ;;		i2_PWM_DutyCycle2
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text39
  6720  000F0C                     __ptext39:
  6721                           	opt stack 0
  6722  000F0C                     i2___ftmul:
  6723                           	opt stack 21
  6724                           
  6725                           ;incstack = 0
  6726  000F0C  C00F  F013         	movff	i2___ftmul@f1+2,??i2___ftmul
  6727  000F10  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  6728  000F12  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  6729  000F14  340E               	rlcf	i2___ftmul@f1+1,w,c
  6730  000F16  3613               	rlcf	??i2___ftmul& (0+255),f,c
  6731  000F18  E301               	bnc	u278_41
  6732  000F1A  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  6733  000F1C                     u278_41:
  6734  000F1C  5013               	movf	??i2___ftmul,w,c
  6735  000F1E  6E16               	movwf	i2___ftmul@exp,c
  6736  000F20  6616               	tstfsz	i2___ftmul@exp& (0+255),c
  6737  000F22  D001               	goto	i2l2779
  6738  000F24  D00C               	goto	i2u281_40
  6739  000F26                     i2l2779:
  6740  000F26  C012  F013         	movff	i2___ftmul@f2+2,??i2___ftmul
  6741  000F2A  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  6742  000F2C  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  6743  000F2E  3411               	rlcf	i2___ftmul@f2+1,w,c
  6744  000F30  3613               	rlcf	??i2___ftmul& (0+255),f,c
  6745  000F32  E301               	bnc	u280_41
  6746  000F34  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  6747  000F36                     u280_41:
  6748  000F36  5013               	movf	??i2___ftmul,w,c
  6749  000F38  6E1B               	movwf	i2___ftmul@sign,c
  6750  000F3A  661B               	tstfsz	i2___ftmul@sign& (0+255),c
  6751  000F3C  D007               	goto	i2l2785
  6752  000F3E                     i2u281_40:
  6753  000F3E  0E00               	movlw	0
  6754  000F40  6E0D               	movwf	?i2___ftmul,c
  6755  000F42  0E00               	movlw	0
  6756  000F44  6E0E               	movwf	?i2___ftmul+1,c
  6757  000F46  0E00               	movlw	0
  6758  000F48  6E0F               	movwf	?i2___ftmul+2,c
  6759  000F4A  D051               	goto	i2l932
  6760  000F4C                     i2l2785:
  6761  000F4C  501B               	movf	i2___ftmul@sign,w,c
  6762  000F4E  0F7B               	addlw	123
  6763  000F50  2616               	addwf	i2___ftmul@exp,f,c
  6764  000F52  C00F  F01B         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  6765  000F56  5012               	movf	i2___ftmul@f2+2,w,c
  6766  000F58  1A1B               	xorwf	i2___ftmul@sign,f,c
  6767  000F5A  0E80               	movlw	128
  6768  000F5C  161B               	andwf	i2___ftmul@sign,f,c
  6769  000F5E  8E0E               	bsf	i2___ftmul@f1+1,7,c
  6770  000F60  8E11               	bsf	i2___ftmul@f2+1,7,c
  6771  000F62  0EFF               	movlw	255
  6772  000F64  1610               	andwf	i2___ftmul@f2,f,c
  6773  000F66  0EFF               	movlw	255
  6774  000F68  1611               	andwf	i2___ftmul@f2+1,f,c
  6775  000F6A  0E00               	movlw	0
  6776  000F6C  1612               	andwf	i2___ftmul@f2+2,f,c
  6777  000F6E  0E00               	movlw	0
  6778  000F70  6E17               	movwf	i2___ftmul@f3_as_product,c
  6779  000F72  0E00               	movlw	0
  6780  000F74  6E18               	movwf	i2___ftmul@f3_as_product+1,c
  6781  000F76  0E00               	movlw	0
  6782  000F78  6E19               	movwf	i2___ftmul@f3_as_product+2,c
  6783  000F7A  0E07               	movlw	7
  6784  000F7C  6E1A               	movwf	i2___ftmul@cntr,c
  6785  000F7E                     i2l2799:
  6786  000F7E  A00D               	btfss	i2___ftmul@f1,0,c
  6787  000F80  D006               	goto	i2l2803
  6788  000F82  5010               	movf	i2___ftmul@f2,w,c
  6789  000F84  2617               	addwf	i2___ftmul@f3_as_product,f,c
  6790  000F86  5011               	movf	i2___ftmul@f2+1,w,c
  6791  000F88  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  6792  000F8A  5012               	movf	i2___ftmul@f2+2,w,c
  6793  000F8C  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  6794  000F8E                     i2l2803:
  6795  000F8E  90D8               	bcf	status,0,c
  6796  000F90  320F               	rrcf	i2___ftmul@f1+2,f,c
  6797  000F92  320E               	rrcf	i2___ftmul@f1+1,f,c
  6798  000F94  320D               	rrcf	i2___ftmul@f1,f,c
  6799  000F96  90D8               	bcf	status,0,c
  6800  000F98  3610               	rlcf	i2___ftmul@f2,f,c
  6801  000F9A  3611               	rlcf	i2___ftmul@f2+1,f,c
  6802  000F9C  3612               	rlcf	i2___ftmul@f2+2,f,c
  6803  000F9E  2E1A               	decfsz	i2___ftmul@cntr,f,c
  6804  000FA0  D7EE               	goto	i2l2799
  6805  000FA2  0E09               	movlw	9
  6806  000FA4  6E1A               	movwf	i2___ftmul@cntr,c
  6807  000FA6                     i2l2809:
  6808  000FA6  A00D               	btfss	i2___ftmul@f1,0,c
  6809  000FA8  D006               	goto	i2l2813
  6810  000FAA  5010               	movf	i2___ftmul@f2,w,c
  6811  000FAC  2617               	addwf	i2___ftmul@f3_as_product,f,c
  6812  000FAE  5011               	movf	i2___ftmul@f2+1,w,c
  6813  000FB0  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  6814  000FB2  5012               	movf	i2___ftmul@f2+2,w,c
  6815  000FB4  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  6816  000FB6                     i2l2813:
  6817  000FB6  90D8               	bcf	status,0,c
  6818  000FB8  320F               	rrcf	i2___ftmul@f1+2,f,c
  6819  000FBA  320E               	rrcf	i2___ftmul@f1+1,f,c
  6820  000FBC  320D               	rrcf	i2___ftmul@f1,f,c
  6821  000FBE  90D8               	bcf	status,0,c
  6822  000FC0  3219               	rrcf	i2___ftmul@f3_as_product+2,f,c
  6823  000FC2  3218               	rrcf	i2___ftmul@f3_as_product+1,f,c
  6824  000FC4  3217               	rrcf	i2___ftmul@f3_as_product,f,c
  6825  000FC6  2E1A               	decfsz	i2___ftmul@cntr,f,c
  6826  000FC8  D7EE               	goto	i2l2809
  6827  000FCA  C017  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  6828  000FCE  C018  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  6829  000FD2  C019  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  6830  000FD6  C016  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  6831  000FDA  C01B  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  6832  000FDE  ECF3  F009         	call	i2___ftpack	;wreg free
  6833  000FE2  C001  F00D         	movff	?i2___ftpack,?i2___ftmul
  6834  000FE6  C002  F00E         	movff	?i2___ftpack+1,?i2___ftmul+1
  6835  000FEA  C003  F00F         	movff	?i2___ftpack+2,?i2___ftmul+2
  6836  000FEE                     i2l932:
  6837  000FEE  0012               	return	
  6838  000FF0                     __end_ofi2___ftmul:
  6839                           	opt stack 0
  6840                           pclatu	equ	0xFFB
  6841                           pclath	equ	0xFFA
  6842                           tblptru	equ	0xFF8
  6843                           tblptrh	equ	0xFF7
  6844                           tblptrl	equ	0xFF6
  6845                           tablat	equ	0xFF5
  6846                           prodh	equ	0xFF4
  6847                           prodl	equ	0xFF3
  6848                           intcon	equ	0xFF2
  6849                           intcon2	equ	0xFF1
  6850                           intcon3	equ	0xFF0
  6851                           indf0	equ	0xFEF
  6852                           postinc0	equ	0xFEE
  6853                           fsr0h	equ	0xFEA
  6854                           fsr0l	equ	0xFE9
  6855                           wreg	equ	0xFE8
  6856                           postinc1	equ	0xFE6
  6857                           postdec1	equ	0xFE5
  6858                           fsr1h	equ	0xFE2
  6859                           fsr1l	equ	0xFE1
  6860                           indf2	equ	0xFDF
  6861                           postinc2	equ	0xFDE
  6862                           postdec2	equ	0xFDD
  6863                           fsr2h	equ	0xFDA
  6864                           fsr2l	equ	0xFD9
  6865                           status	equ	0xFD8
  6866                           
  6867 ;; *************** function i2___ftpack *****************
  6868 ;; Defined at:
  6869 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;  arg             3    0[COMRAM] unsigned um
  6872 ;;  exp             1    3[COMRAM] unsigned char 
  6873 ;;  sign            1    4[COMRAM] unsigned char 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  3    0[COMRAM] float 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6885 ;;      Params:         5       0       0       0       0       0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6887 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6888 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6889 ;;Total ram usage:        8 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		i2___ftmul
  6895 ;;		i2___lbtoft
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text40
  6900  0013E6                     __ptext40:
  6901                           	opt stack 0
  6902  0013E6                     i2___ftpack:
  6903                           	opt stack 21
  6904                           
  6905                           ;incstack = 0
  6906  0013E6  5004               	movf	i2___ftpack@exp,w,c
  6907  0013E8  B4D8               	btfsc	status,2,c
  6908  0013EA  D005               	goto	i2l2481
  6909  0013EC  5001               	movf	i2___ftpack@arg,w,c
  6910  0013EE  1002               	iorwf	i2___ftpack@arg+1,w,c
  6911  0013F0  1003               	iorwf	i2___ftpack@arg+2,w,c
  6912  0013F2  A4D8               	btfss	status,2,c
  6913  0013F4  D00C               	goto	i2l2487
  6914  0013F6                     i2l2481:
  6915  0013F6  0E00               	movlw	0
  6916  0013F8  6E01               	movwf	?i2___ftpack,c
  6917  0013FA  0E00               	movlw	0
  6918  0013FC  6E02               	movwf	?i2___ftpack+1,c
  6919  0013FE  0E00               	movlw	0
  6920  001400  6E03               	movwf	?i2___ftpack+2,c
  6921  001402  D044               	goto	i2l848
  6922  001404                     i2l2485:
  6923  001404  2A04               	incf	i2___ftpack@exp,f,c
  6924  001406  90D8               	bcf	status,0,c
  6925  001408  3203               	rrcf	i2___ftpack@arg+2,f,c
  6926  00140A  3202               	rrcf	i2___ftpack@arg+1,f,c
  6927  00140C  3201               	rrcf	i2___ftpack@arg,f,c
  6928  00140E                     i2l2487:
  6929  00140E  0E00               	movlw	0
  6930  001410  1401               	andwf	i2___ftpack@arg,w,c
  6931  001412  6E06               	movwf	??i2___ftpack& (0+255),c
  6932  001414  0E00               	movlw	0
  6933  001416  1402               	andwf	i2___ftpack@arg+1,w,c
  6934  001418  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  6935  00141A  0EFE               	movlw	254
  6936  00141C  1403               	andwf	i2___ftpack@arg+2,w,c
  6937  00141E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  6938  001420  5006               	movf	??i2___ftpack,w,c
  6939  001422  1007               	iorwf	??i2___ftpack+1,w,c
  6940  001424  1008               	iorwf	??i2___ftpack+2,w,c
  6941  001426  B4D8               	btfsc	status,2,c
  6942  001428  D00C               	goto	i2l2493
  6943  00142A  D7EC               	goto	i2l2485
  6944  00142C                     i2l2489:
  6945  00142C  2A04               	incf	i2___ftpack@exp,f,c
  6946  00142E  0E01               	movlw	1
  6947  001430  2601               	addwf	i2___ftpack@arg,f,c
  6948  001432  0E00               	movlw	0
  6949  001434  2202               	addwfc	i2___ftpack@arg+1,f,c
  6950  001436  0E00               	movlw	0
  6951  001438  2203               	addwfc	i2___ftpack@arg+2,f,c
  6952  00143A  90D8               	bcf	status,0,c
  6953  00143C  3203               	rrcf	i2___ftpack@arg+2,f,c
  6954  00143E  3202               	rrcf	i2___ftpack@arg+1,f,c
  6955  001440  3201               	rrcf	i2___ftpack@arg,f,c
  6956  001442                     i2l2493:
  6957  001442  0E00               	movlw	0
  6958  001444  1401               	andwf	i2___ftpack@arg,w,c
  6959  001446  6E06               	movwf	??i2___ftpack& (0+255),c
  6960  001448  0E00               	movlw	0
  6961  00144A  1402               	andwf	i2___ftpack@arg+1,w,c
  6962  00144C  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  6963  00144E  0EFF               	movlw	255
  6964  001450  1403               	andwf	i2___ftpack@arg+2,w,c
  6965  001452  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  6966  001454  5006               	movf	??i2___ftpack,w,c
  6967  001456  1007               	iorwf	??i2___ftpack+1,w,c
  6968  001458  1008               	iorwf	??i2___ftpack+2,w,c
  6969  00145A  B4D8               	btfsc	status,2,c
  6970  00145C  D006               	goto	i2l2497
  6971  00145E  D7E6               	goto	i2l2489
  6972  001460                     i2l2495:
  6973  001460  0604               	decf	i2___ftpack@exp,f,c
  6974  001462  90D8               	bcf	status,0,c
  6975  001464  3601               	rlcf	i2___ftpack@arg,f,c
  6976  001466  3602               	rlcf	i2___ftpack@arg+1,f,c
  6977  001468  3603               	rlcf	i2___ftpack@arg+2,f,c
  6978  00146A                     i2l2497:
  6979  00146A  AE02               	btfss	i2___ftpack@arg+1,7,c
  6980  00146C  D7F9               	goto	i2l2495
  6981  00146E  A004               	btfss	i2___ftpack@exp,0,c
  6982  001470  9E02               	bcf	i2___ftpack@arg+1,7,c
  6983  001472  90D8               	bcf	status,0,c
  6984  001474  3204               	rrcf	i2___ftpack@exp,f,c
  6985  001476  5004               	movf	i2___ftpack@exp,w,c
  6986  001478  1203               	iorwf	i2___ftpack@arg+2,f,c
  6987  00147A  5005               	movf	i2___ftpack@sign,w,c
  6988  00147C  A4D8               	btfss	status,2,c
  6989  00147E  8E03               	bsf	i2___ftpack@arg+2,7,c
  6990  001480  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  6991  001484  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  6992  001488  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  6993  00148C                     i2l848:
  6994  00148C  0012               	return	
  6995  00148E                     __end_ofi2___ftpack:
  6996                           	opt stack 0
  6997                           pclatu	equ	0xFFB
  6998                           pclath	equ	0xFFA
  6999                           tblptru	equ	0xFF8
  7000                           tblptrh	equ	0xFF7
  7001                           tblptrl	equ	0xFF6
  7002                           tablat	equ	0xFF5
  7003                           prodh	equ	0xFF4
  7004                           prodl	equ	0xFF3
  7005                           intcon	equ	0xFF2
  7006                           intcon2	equ	0xFF1
  7007                           intcon3	equ	0xFF0
  7008                           indf0	equ	0xFEF
  7009                           postinc0	equ	0xFEE
  7010                           fsr0h	equ	0xFEA
  7011                           fsr0l	equ	0xFE9
  7012                           wreg	equ	0xFE8
  7013                           postinc1	equ	0xFE6
  7014                           postdec1	equ	0xFE5
  7015                           fsr1h	equ	0xFE2
  7016                           fsr1l	equ	0xFE1
  7017                           indf2	equ	0xFDF
  7018                           postinc2	equ	0xFDE
  7019                           postdec2	equ	0xFDD
  7020                           fsr2h	equ	0xFDA
  7021                           fsr2l	equ	0xFD9
  7022                           status	equ	0xFD8
  7023                           
  7024 ;; *************** function i2_SetDCPWM1 *****************
  7025 ;; Defined at:
  7026 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  dutycycle       2    0[COMRAM] unsigned int 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  SetDCPWM1       2    4[COMRAM] struct PWMDC
  7031 ;; Return value:  Size  Location     Type
  7032 ;;		None               void
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7040 ;;      Params:         2       0       0       0       0       0       0       0       0
  7041 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7042 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7043 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7044 ;;Total ram usage:        6 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; This function calls:
  7047 ;;		Nothing
  7048 ;; This function is called by:
  7049 ;;		i2_PWM_DutyCycle1
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           	psect	text41
  7054  001C12                     __ptext41:
  7055                           	opt stack 0
  7056  001C12                     i2_SetDCPWM1:
  7057                           	opt stack 22
  7058                           
  7059                           ;incstack = 0
  7060  001C12  C001  F003         	movff	i2SetDCPWM1@dutycycle,??i2_SetDCPWM1
  7061  001C16  C002  F004         	movff	i2SetDCPWM1@dutycycle+1,??i2_SetDCPWM1+1
  7062  001C1A  0E06               	movlw	6
  7063  001C1C                     i2u276_45:
  7064  001C1C  90D8               	bcf	status,0,c
  7065  001C1E  3603               	rlcf	??i2_SetDCPWM1,f,c
  7066  001C20  3604               	rlcf	??i2_SetDCPWM1+1,f,c
  7067  001C22  2EE8               	decfsz	wreg,f,c
  7068  001C24  D7FB               	goto	i2u276_45
  7069  001C26  C003  F005         	movff	??i2_SetDCPWM1,i2SetDCPWM1@DCycle
  7070  001C2A  C004  F006         	movff	??i2_SetDCPWM1+1,i2SetDCPWM1@DCycle+1
  7071  001C2E  C006  FFBE         	movff	i2SetDCPWM1@DCycle+1,4030	;volatile
  7072  001C32  C005  F003         	movff	i2SetDCPWM1@DCycle,??i2_SetDCPWM1
  7073  001C36  90D8               	bcf	status,0,c
  7074  001C38  3203               	rrcf	??i2_SetDCPWM1,f,c
  7075  001C3A  90D8               	bcf	status,0,c
  7076  001C3C  3203               	rrcf	??i2_SetDCPWM1,f,c
  7077  001C3E  0E30               	movlw	48
  7078  001C40  1603               	andwf	??i2_SetDCPWM1,f,c
  7079  001C42  50BD               	movf	4029,w,c	;volatile
  7080  001C44  0BCF               	andlw	207
  7081  001C46  1003               	iorwf	??i2_SetDCPWM1,w,c
  7082  001C48  6EBD               	movwf	4029,c	;volatile
  7083  001C4A  0012               	return	
  7084  001C4C                     __end_ofi2_SetDCPWM1:
  7085                           	opt stack 0
  7086                           pclatu	equ	0xFFB
  7087                           pclath	equ	0xFFA
  7088                           tblptru	equ	0xFF8
  7089                           tblptrh	equ	0xFF7
  7090                           tblptrl	equ	0xFF6
  7091                           tablat	equ	0xFF5
  7092                           prodh	equ	0xFF4
  7093                           prodl	equ	0xFF3
  7094                           intcon	equ	0xFF2
  7095                           intcon2	equ	0xFF1
  7096                           intcon3	equ	0xFF0
  7097                           indf0	equ	0xFEF
  7098                           postinc0	equ	0xFEE
  7099                           fsr0h	equ	0xFEA
  7100                           fsr0l	equ	0xFE9
  7101                           wreg	equ	0xFE8
  7102                           postinc1	equ	0xFE6
  7103                           postdec1	equ	0xFE5
  7104                           fsr1h	equ	0xFE2
  7105                           fsr1l	equ	0xFE1
  7106                           indf2	equ	0xFDF
  7107                           postinc2	equ	0xFDE
  7108                           postdec2	equ	0xFDD
  7109                           fsr2h	equ	0xFDA
  7110                           fsr2l	equ	0xFD9
  7111                           status	equ	0xFD8
  7112                           
  7113 ;; *************** function _ReadUSART *****************
  7114 ;; Defined at:
  7115 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  data            1    0[COMRAM] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      unsigned char 
  7122 ;; Registers used:
  7123 ;;		wreg, status,2, status,0
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7129 ;;      Params:         0       0       0       0       0       0       0       0       0
  7130 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7132 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7133 ;;Total ram usage:        1 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_TMRO_USART
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text42
  7143  001CEE                     __ptext42:
  7144                           	opt stack 0
  7145  001CEE                     _ReadUSART:
  7146                           	opt stack 23
  7147                           
  7148                           ;incstack = 0
  7149  001CEE  0EF2               	movlw	242
  7150  001CF0  1654               	andwf	_USART_Status,f,c
  7151  001CF2  ACAB               	btfss	4011,6,c	;volatile
  7152  001CF4  D003               	goto	i2l524
  7153  001CF6  9054               	bcf	_USART_Status,0,c
  7154  001CF8  B0AB               	btfsc	4011,0,c	;volatile
  7155  001CFA  8054               	bsf	_USART_Status,0,c
  7156  001CFC                     i2l524:
  7157  001CFC  B4AB               	btfsc	4011,2,c	;volatile
  7158  001CFE  8454               	bsf	_USART_Status,2,c
  7159  001D00  B2AB               	btfsc	4011,1,c	;volatile
  7160  001D02  8654               	bsf	_USART_Status,3,c
  7161  001D04  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7162  001D08  5001               	movf	ReadUSART@data,w,c
  7163  001D0A  0012               	return	
  7164  001D0C                     __end_of_ReadUSART:
  7165                           	opt stack 0
  7166                           pclatu	equ	0xFFB
  7167                           pclath	equ	0xFFA
  7168                           tblptru	equ	0xFF8
  7169                           tblptrh	equ	0xFF7
  7170                           tblptrl	equ	0xFF6
  7171                           tablat	equ	0xFF5
  7172                           prodh	equ	0xFF4
  7173                           prodl	equ	0xFF3
  7174                           intcon	equ	0xFF2
  7175                           intcon2	equ	0xFF1
  7176                           intcon3	equ	0xFF0
  7177                           indf0	equ	0xFEF
  7178                           postinc0	equ	0xFEE
  7179                           fsr0h	equ	0xFEA
  7180                           fsr0l	equ	0xFE9
  7181                           wreg	equ	0xFE8
  7182                           postinc1	equ	0xFE6
  7183                           postdec1	equ	0xFE5
  7184                           fsr1h	equ	0xFE2
  7185                           fsr1l	equ	0xFE1
  7186                           indf2	equ	0xFDF
  7187                           postinc2	equ	0xFDE
  7188                           postdec2	equ	0xFDD
  7189                           fsr2h	equ	0xFDA
  7190                           fsr2l	equ	0xFD9
  7191                           status	equ	0xFD8
  7192                           pclatu	equ	0xFFB
  7193                           pclath	equ	0xFFA
  7194                           tblptru	equ	0xFF8
  7195                           tblptrh	equ	0xFF7
  7196                           tblptrl	equ	0xFF6
  7197                           tablat	equ	0xFF5
  7198                           prodh	equ	0xFF4
  7199                           prodl	equ	0xFF3
  7200                           intcon	equ	0xFF2
  7201                           intcon2	equ	0xFF1
  7202                           intcon3	equ	0xFF0
  7203                           indf0	equ	0xFEF
  7204                           postinc0	equ	0xFEE
  7205                           fsr0h	equ	0xFEA
  7206                           fsr0l	equ	0xFE9
  7207                           wreg	equ	0xFE8
  7208                           postinc1	equ	0xFE6
  7209                           postdec1	equ	0xFE5
  7210                           fsr1h	equ	0xFE2
  7211                           fsr1l	equ	0xFE1
  7212                           indf2	equ	0xFDF
  7213                           postinc2	equ	0xFDE
  7214                           postdec2	equ	0xFDD
  7215                           fsr2h	equ	0xFDA
  7216                           fsr2l	equ	0xFD9
  7217                           status	equ	0xFD8
  7218                           
  7219                           	psect	rparam
  7220  0000                     pclatu	equ	0xFFB
  7221                           pclath	equ	0xFFA
  7222                           tblptru	equ	0xFF8
  7223                           tblptrh	equ	0xFF7
  7224                           tblptrl	equ	0xFF6
  7225                           tablat	equ	0xFF5
  7226                           prodh	equ	0xFF4
  7227                           prodl	equ	0xFF3
  7228                           intcon	equ	0xFF2
  7229                           intcon2	equ	0xFF1
  7230                           intcon3	equ	0xFF0
  7231                           indf0	equ	0xFEF
  7232                           postinc0	equ	0xFEE
  7233                           fsr0h	equ	0xFEA
  7234                           fsr0l	equ	0xFE9
  7235                           wreg	equ	0xFE8
  7236                           postinc1	equ	0xFE6
  7237                           postdec1	equ	0xFE5
  7238                           fsr1h	equ	0xFE2
  7239                           fsr1l	equ	0xFE1
  7240                           indf2	equ	0xFDF
  7241                           postinc2	equ	0xFDE
  7242                           postdec2	equ	0xFDD
  7243                           fsr2h	equ	0xFDA
  7244                           fsr2l	equ	0xFD9
  7245                           status	equ	0xFD8


Data Sizes:
    Strings     95
    Constant    10
    Data        20
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      95
    BANK0           160     56     150
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> putcBluetoothInt@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1363$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    putSTRINGU1@dato	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 

    putcBluetoothString@a	PTR unsigned char  size(2) Largest target is 2
		 -> STR_10(CODE[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> comando(BANK0[20]), 

    SendBlueToothCommand@command	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMRO_USART in COMRAM

    _TMRO_USART->i2_PWM_DutyCycle1
    _TMRO_USART->i2_PWM_DutyCycle2
    i2_PWM_DutyCycle2->i2___fttol
    i2_PWM_DutyCycle1->i2___fttol
    i2___lbtoft->i2___ftpack
    i2___fttol->i2___ftmul
    i2___ftmul->i2___lbtoft

Critical Paths under _main in BANK0

    _main->_Comando_Tablet
    _Inicializa_Driveby->_BT_Init
    _PWM_init2->_OpenPWM2
    _PWM_init1->_OpenPWM1
    _BT_Init->_SendBlueToothCommand
    _SendBlueToothCommand->_putSTRINGU1
    _putSTRINGU1->_putcTxU1
    _putcTxU1->_WriteUSART
    _Pause_seg->_Pause_ms
    _Comando_Tablet->_putcBluetoothInt
    _putcBluetoothString->_UART1_Init
    _putcBluetoothInt->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART1_Init->_OpenUSART
    _PWM_DutyCycle2->___fttol
    _PWM_DutyCycle1->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lbtoft

Critical Paths under _TMRO_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMRO_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMRO_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMRO_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMRO_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMRO_USART in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMRO_USART in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMRO_USART in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25787
                     _Comando_Tablet
                 _Inicializa_Driveby
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                         _UART1_Init
                     _clrBufferUSART
                  _motor_Backforward
 ---------------------------------------------------------------------------------
 (1) _motor_Backforward                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Inicializa_Driveby                                   3     3      0    2297
                                             32 BANK0      3     3      0
                            _BT_Init
                          _PWM_init1
                          _PWM_init2
                          _Pause_seg
                     _clrBufferUSART
            _external_interrupt_init
 ---------------------------------------------------------------------------------
 (2) _external_interrupt_init                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init2                                            1     1      0      68
                                              3 BANK0      1     1      0
                           _OpenPWM2
 ---------------------------------------------------------------------------------
 (3) _OpenPWM2                                             4     4      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _PWM_init1                                            1     1      0      44
                                              1 BANK0      1     1      0
                           _OpenPWM1
 ---------------------------------------------------------------------------------
 (3) _OpenPWM1                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BT_Init                                             18    18      0    1720
                                             14 BANK0     18    18      0
                          _Pause_seg
               _SendBlueToothCommand
                         _UART1_Init
 ---------------------------------------------------------------------------------
 (3) _SendBlueToothCommand                                 4     0      4    1039
                                             10 BANK0      4     0      4
                        _putSTRINGU1
 ---------------------------------------------------------------------------------
 (4) _putSTRINGU1                                          8     4      4     355
                                              2 BANK0      8     4      4
                           _putcTxU1
 ---------------------------------------------------------------------------------
 (5) _putcTxU1                                             1     1      0      44
                                              1 BANK0      1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _Pause_seg                                            2     2      0     350
                                              5 BANK0      2     2      0
                           _Pause_ms
 ---------------------------------------------------------------------------------
 (3) _Pause_ms                                             5     3      2     303
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Comando_Tablet                                       2     2      0   12704
                                             54 BANK0      2     2      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                     _clrBufferUSART
                      _getCNY70Value
                   _putcBluetoothInt
                _putcBluetoothString
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothString                                  6     4      2     482
                                              7 BANK0      6     4      2
                         _UART1_Init
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothInt                                    24    22      2    1718
                                             30 BANK0     24    22      2
                         _UART1_Init
                         _WriteUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    12      6    1182
                                             12 BANK0     18    12      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _WriteUSART                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           1     1      0     306
                                              6 BANK0      1     1      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _getCNY70Value                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _clrBufferUSART                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       9     9      0    5206
                                             42 BANK0      9     9      0
                          _SetDCPWM2
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM2                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       9     9      0    5206
                                             42 BANK0      9     9      0
                          _SetDCPWM1
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    1992
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     380
                                             27 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2654
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1970
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM1                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _TMRO_USART                                          14    14      0    3275
                                             51 COMRAM    14    14      0
                          _ReadUSART
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (8) i2_PWM_DutyCycle2                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM2
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (9) i2_SetDCPWM2                                          6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) i2_PWM_DutyCycle1                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM1
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (9) i2___lbtoft                                           4     1      3     387
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___fttol                                           15    11      4     304
                                             27 COMRAM    15    11      4
                          i2___ftmul (ARG)
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___ftmul                                           15     9      6     795
                                             12 COMRAM    15     9      6
                         i2___ftpack
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftpack                                          8     3      5     365
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (9) i2_SetDCPWM1                                          6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comando_Tablet
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _clrBufferUSART
     _getCNY70Value
     _putcBluetoothInt
       _UART1_Init
         _OpenUSART
       _WriteUSART
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putcBluetoothString
       _UART1_Init
         _OpenUSART
       _WriteUSART
   _Inicializa_Driveby
     _BT_Init
       _Pause_seg
         _Pause_ms
       _SendBlueToothCommand
         _putSTRINGU1
           _putcTxU1
             _WriteUSART
       _UART1_Init
         _OpenUSART
     _PWM_init1
       _OpenPWM1
     _PWM_init2
       _OpenPWM2
     _Pause_seg
       _Pause_ms
     _clrBufferUSART
     _external_interrupt_init
   _PWM_DutyCycle1
     _SetDCPWM1
     ___ftmul
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _PWM_DutyCycle2
     _SetDCPWM2
     ___ftmul
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _UART1_Init
     _OpenUSART
   _clrBufferUSART
   _motor_Backforward

 _TMRO_USART (ROOT)
   _ReadUSART
   i2_PWM_DutyCycle1
     i2_SetDCPWM1
     i2___ftmul
       i2___ftpack
       i2___lbtoft (ARG)
         i2___ftpack
     i2___fttol
       i2___ftmul (ARG)
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft (ARG)
         i2___ftpack
     i2___lbtoft
       i2___ftpack
   i2_PWM_DutyCycle2
     i2_SetDCPWM2
     i2___ftmul
       i2___ftpack
       i2___lbtoft (ARG)
         i2___ftpack
     i2___fttol
       i2___ftmul (ARG)
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft (ARG)
         i2___ftpack
     i2___lbtoft
       i2___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      96       5       93.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D      20        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Oct 04 14:19:02 2017

                               _i 0048                                 _j 0058  
         __size_of_PWM_DutyCycle1 007C           __size_of_PWM_DutyCycle2 007C  
                              l54 1BD6                                l59 14D0  
                              l68 156C                     _InicioComando 0050  
                     __CFG_BORV$3 000000                        i2___ftpack 13E6  
                      i2___lbtoft 1CCA                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                               l214 1B3A  
                             l400 12BC                               l402 12D6  
                             l235 1D9C                               l404 12E6  
                             l406 1300                               l510 15E2  
                             l511 15E4                               l512 15F0  
                             l513 15F2                               l506 15C8  
                             l194 179C                               l515 161A  
                             l195 17CC                               l391 1272  
                             l392 1326                               l472 1B7C  
                             l473 1B88                               l394 1282  
                             l474 1B8A                               l396 129C  
                             l398 12AC                               l932 0B9E  
                             l848 0F0A                               l952 0CE8  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                      __CFG_BOR$OFF 000000  
                             _cad 0055                               prod 000FF3  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1054 1876  
                            l1064 1A70                              l2131 1336  
                            l2221 0E94                              l2213 0E2E  
                            l2125 1D78                              l2141 13A6  
                            l2223 0EC0                              l2215 0E42  
                            l2151 1B24                              l2225 0ED4  
                            l2217 0E6E                              l2209 0E1A  
                            l2305 08D6                              l2137 1380  
                            l2235 0EFE                              l2315 091E  
                            l2147 13D8                              l2229 0EE4  
                            l2405 0AEC                              l2173 15CA  
                            l2165 15B8                              l2245 1826  
                            l2415 0B36                              l2247 1832  
                            l2343 0A00                              l2335 098C  
                            l3071 1740                              l2409 0B0A  
                            l2433 0BC8                              l2257 1868  
                            l2249 1838                              l2273 1A62  
                            l2265 1A2C                              l2337 0992  
                            l2329 096C                              l2345 0A0C  
                            l2281 1966                              l3065 172E  
                            l2419 0B54                              l2451 0C56  
                            l2267 1A38                              l2347 0A2E  
                            l2371 1B76                              l2461 0C94  
                            l2269 1A3E                              l2293 087E  
                            l2285 19AA                              l3085 1764  
                            l2391 0A9E                              l2463 0CAC  
                            l2455 0C72                              l3095 177C  
                            l2385 0A64                              l2465 0CB2  
                            l2561 14DA                              l2299 089E  
                            l2469 0CD8                              l2557 14A2  
                            l2575 1552                              l2745 131A  
                            l2579 1576                              l2909 115E  
                            l2951 1802                              l2949 17E0  
                            STR_1 0852                              STR_2 080B  
                            STR_3 085E                              STR_4 085E  
                            STR_5 0867                              STR_6 081A  
                            STR_7 0828                              STR_8 0844  
                            STR_9 0836                  i2_PWM_DutyCycle1 18EA  
                i2_PWM_DutyCycle2 1880                   __end_of_BT_Init 1262  
                            u2110 0BF4                              u2031 0A54  
                            u2025 1A88                              u2051 0A7C  
                            u2115 0BEA                              u2060 0A8A  
                            u2140 0C7A                              u2241 11AA  
                            u1610 1374                              u2091 0BB8  
                            u3207 1B2C                              u2600 12CC  
                            u1640 13CA                              u1617 136A  
                            u2700 12F6                              u1647 13C0  
                            _PIE1 000F9D                              u3187 10EC  
                            u3197 114C                              u2750 1310  
                            u1995 1AD0                              _TMR2 000FCC  
                            _main 1714                      ___ftpack@arg 00AC  
                    ___ftpack@exp 00AF                              fsr0h 000FEA  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0018                     __CFG_IESO$OFF 000000  
                      _FinComandB 0062                        _FinComandT 0063  
                    i2___lbtoft@c 000C                     __CFG_MCLRE$ON 000000  
                    ___ftmul@cntr 00C5                      i2___ftmul@f1 000D  
                    i2___ftmul@f2 0010                      ___ftmul@sign 00C6  
                    i2___fttol@f1 001C                       ?_UART1_Init 0001  
                    ___fttol@exp1 00D5                      ___fttol@lval 00D1  
                      _ComanBFlag 004B           __size_of_clrBufferUSART 0044  
                   __CFG_PLLDIV$1 000000                        _ComanTFlag 004C  
                  __CFG_CCP2MX$ON 000000                             ?_main 0001  
                           STR_10 0818                   __end_of___ftmul 0BA0  
                 __end_of___fttol 0CEA                             _T2CON 000FCA  
                     _RXComandoTB 0051                    __CFG_DEBUG$OFF 000000  
                 __end_of___lwdiv 1880                   __end_of___lwmod 1A7A  
                           i2l330 0DBE                             i2l331 0D96  
                           i2l323 0D84                             i2l333 0DA8  
                           i2l335 0DBA                             i2l524 1CFC  
                           i2l932 0FEE                             i2l848 148C  
                           i2l952 10C2                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _SPBRG 000FAF  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTC 000F82                             _PORTD 000F83  
                           _PORTE 000F84                     __CFG_USBDIV$2 000000  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             _TXREG 000FAD  
                           _TXSTA 000FAC                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000           PWM_DutyCycle1@DutyCycle 00DA  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                 __end_of_dpowers 080B                             _array 0114  
                   ___ftpack@sign 00B0                             tablat 000FF5  
         PWM_DutyCycle2@DutyCycle 00DA                             status 000FD8  
                 __end_of_sprintf 0A3C                    __CFG_ICPRT$OFF 000000  
                      Pause_seg@i 00B2                        Pause_seg@x 00B1  
              __size_ofi2___ftmul 00E4                __size_ofi2___fttol 00D4  
                     ?_TMRO_USART 0001                    WriteUSART@data 00AC  
              __size_of_PWM_init1 0026                __size_of_PWM_init2 0026  
                 __initialization 19B8                      __end_of_main 178E  
                   i2___ftmul@exp 0016       __size_of_Inicializa_Driveby 00D0  
                     ?i2___ftpack 0001                       ?i2___lbtoft 0009  
               ?_putcBluetoothInt 00CA                  __end_of_OpenPWM1 1D6A  
                __end_of_OpenPWM2 1B94                            ??_main 00E4  
                   ___fttol@sign1 00D0                  __end_of_Pause_ms 1B50  
                   __activetblptr 000003                ??_putcBluetoothInt 00CC  
              i2PWM_DutyCycle1@DC 0032                i2PWM_DutyCycle2@DC 0032  
                       ??_BT_Init 00BA                            _CCPR1L 000FBE  
                          _CCPR2L 000FBB                   putSTRINGU1@dato 00AE  
                 putSTRINGU1@cont 00B5                  __end_of___ftpack 0F0C  
                __end_of___lbtoft 1C7E                   putSTRINGU1@last 00B4  
                 clrBufferUSART@i 00AC               __size_of_UART1_Init 0016  
                          i2l3041 0D64                            i2l3045 0D7A  
                          i2l2481 13F6                            i2l2803 0F8E  
                          i2l2493 1442                            i2l2485 1404  
                          i2l2813 0FB6                            i2l2495 1460  
                          i2l2487 140E                            i2l2497 146A  
                          i2l2489 142C                            i2l2809 0FA6  
                          i2l2827 100A                            i2l2845 1064  
                          i2l2863 10B2                            i2l2855 108C  
                          i2l2785 0F4C                            i2l2857 1098  
                          i2l2849 1074                            i2l2779 0F26  
                          i2l2859 109C                            i2l2799 0F7E  
                          _INTCON 000FF2                            u280_41 0F36  
                          u284_41 1000                __size_of_ReadUSART 001E  
                          u278_41 0F1C              i2SetDCPWM1@dutycycle 0001  
             _putcBluetoothString 148E                            _SPBRGH 000FB0  
              __size_of_SetDCPWM1 0048                __size_of_SetDCPWM2 0048  
                  __CFG_XINST$OFF 000000              i2SetDCPWM2@dutycycle 0001  
                          _Timer1 0053                __size_of_OpenUSART 0080  
   __size_of_SendBlueToothCommand 001A                __size_of_Pause_seg 0064  
                    ?_putSTRINGU1 00AE                    _PWM_DutyCycle1 1698  
                  _PWM_DutyCycle2 161C                    __CFG_STVREN$ON 000000  
                       ??___ftmul 00BE                         ??___fttol 00CB  
                       ??___lwdiv 00B0                         ??___lwmod 00B7  
        ?_external_interrupt_init 0001                            _packet 005D  
                          _lenght 0059                            clear_0 19BE  
                          clear_1 19CA                            clear_2 19D6  
            ?_putcBluetoothString 00B3             ___ftmul@f3_as_product 00C2  
                    __pdataCOMRAM 005E                 __end_ofi2___ftmul 0FF0  
               __end_ofi2___fttol 10C4                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8               __size_of_TMRO_USART 0DFA  
                    ?i2_SetDCPWM1 0001                      ?i2_SetDCPWM2 0001  
               __end_of_PWM_init1 1CCA                 __end_of_PWM_init2 1CA4  
                __end_of_putcTxU1 1DA2                         ??_sprintf 00BE  
         __size_of_Comando_Tablet 007A                 i2SetDCPWM1@DCycle 0005  
               i2SetDCPWM2@DCycle 0005                 _motor_Backforward 1DA2  
                      __accesstop 0060           __end_of__initialization 1A14  
                 __CFG_PBADEN$OFF 000000               __size_ofi2___ftpack 00A8  
             __size_ofi2___lbtoft 0024                ?_motor_Backforward 0001  
    PWM_DutyCycle2@percentageDuty 00DC                    i2___ftpack@arg 0001  
                  i2___ftpack@exp 0004                        ___lbtoft@c 00B7  
          __end_of_PWM_DutyCycle1 1714            __end_of_PWM_DutyCycle2 1698  
                      ___ftmul@f1 00B8                        ___ftmul@f2 00BB  
                      ___fttol@f1 00C7                        _WriteUSART 1D6A  
                  __pcstackCOMRAM 0001               ??_motor_Backforward 00AC  
                    __pidataBANK0 1D7E                    _clrBufferUSART 1B94  
                  i2___ftmul@cntr 001A                    i2___ftmul@sign 001B  
        __end_ofi2_PWM_DutyCycle1 1954          __end_ofi2_PWM_DutyCycle2 18EA  
           ??_putcBluetoothString 00B5                 __end_of_ReadUSART 1D0C  
                  i2___fttol@exp1 002A                    i2___fttol@lval 0026  
               __end_of_SetDCPWM1 1B0A                 __end_of_SetDCPWM2 1AC2  
                   ReadUSART@data 0001              putcBluetoothString@a 00B3  
            putcBluetoothString@i 00B7                 __end_of_OpenUSART 161C  
       __end_of_motor_Backforward 1DAC                     UART1_Init@bdr 00B2  
               __end_of_Pause_seg 19B8                        __pbssBANK0 0060  
                      __pbssBANK1 0100                         ?_OpenPWM1 0001  
                       ?_OpenPWM2 0001                         ?_Pause_ms 00AC  
          __end_of_clrBufferUSART 1BD8                   ?_PWM_DutyCycle1 0001  
                 ?_PWM_DutyCycle2 0001                      ??_UART1_Init 00B2  
             Inicializa_Driveby@i 00CD            __size_of_getCNY70Value 00C6  
                         _CCP1CON 000FBD                           _CCP2CON 000FBA  
     SendBlueToothCommand@command 00B6                         ?___ftpack 00AC  
                       ?___lbtoft 00B4                  putSTRINGU1@total 00B0  
                         _BT_Init 1194                           _SBUSART 0052  
              __end_of_UART1_Init 1D56                   __CFG_VREGEN$OFF 000000  
                         _Comando 004D                           _Med_lsb 0042  
                         _Med_msb 0044                        ??_OpenPWM1 00AC  
                      ??_OpenPWM2 00AC                        ??_Pause_ms 00AE  
                    ??_TMRO_USART 0034                           __Hparam 0000  
                         __Lparam 0000                   ?_clrBufferUSART 0001  
                     ?_WriteUSART 0001                         ?_putcTxU1 0001  
                         ___ftmul 0A3C                           ___fttol 0BA0  
                         ___lwdiv 1808                           ___lwmod 1A1A  
                    __psmallconst 0800                           __pcinit 19B8  
                    ??i2___ftpack 0006                      ??i2___lbtoft 000C  
                      ??___ftpack 00B1                        ??___lbtoft 00B7  
            __size_of_putSTRINGU1 00BE                      BT_Init@F5675 00E4  
         i2___ftmul@f3_as_product 0017                           __ramtop 0800  
                         __ptext0 1714                           __ptext1 1DA2  
                         __ptext2 10C4                           __ptext3 1D0C  
                         __ptext4 1C7E                           __ptext5 1B50  
                         __ptext6 1CA4                           __ptext7 1D56  
                         __ptext8 1194                           __ptext9 1D26  
  i2PWM_DutyCycle1@percentageDuty 0031                           _comando 0097  
                         _countup 005E                           _dpowers 0801  
                       _T2CONbits 000FCA                __end_of_TMRO_USART 0E02  
                  _Comando_Tablet 178E        __size_of_motor_Backforward 000A  
                         _sprintf 086C                     _getCNY70Value 1262  
                  __pintcode_body 0CEA              __size_ofi2_SetDCPWM1 003A  
            __size_ofi2_SetDCPWM2 003A              end_of_initialization 1A14  
                     _TramaTablet 0100         __size_of_putcBluetoothInt 0086  
                         int_func 0CEA                __end_ofi2___ftpack 148E  
              __end_ofi2___lbtoft 1CEE         i2PWM_DutyCycle1@DutyCycle 002F  
                       _RCSTAbits 000FAB        __end_of_Inicializa_Driveby 1194  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                        ??_putcTxU1 00AD  
                      _num_med_hi 005A         i2PWM_DutyCycle2@DutyCycle 002F  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTDbits 000F83            __end_of_Comando_Tablet 1808  
    __end_of_SendBlueToothCommand 1D40                         _TRISBbits 000F93  
                       _TRISCbits 000F94                    ?_getCNY70Value 00AC  
             __size_of_WriteUSART 0014  __size_of_external_interrupt_init 001A  
                       i2___ftmul 0F0C                         i2___fttol 0FF0  
                       _PWM_init1 1CA4                         _PWM_init2 1C7E  
                       _TXSTAbits 000FAC                   i2___ftpack@sign 0005  
                     ___ftmul@exp 00C1                 ?i2_PWM_DutyCycle1 0001  
               ?i2_PWM_DutyCycle2 0001                     __pidataCOMRAM 1DAC  
              ??i2_PWM_DutyCycle1 002B                ??i2_PWM_DutyCycle2 002B  
             start_initialization 19B8                         Pause_ms@i 00AF  
                       Pause_ms@x 00AC                   ?_Comando_Tablet 0001  
                       _ReadUSART 1CEE                         _SetDCPWM1 1AC2  
                       _SetDCPWM2 1A7A                   SetDCPWM1@DCycle 00B0  
                 SetDCPWM2@DCycle 00B0                   i2___fttol@sign1 0025  
                       _DutyCycle 0060                        ?i2___ftmul 000D  
                      ?i2___fttol 001C                        ?_PWM_init1 0001  
                      ?_PWM_init2 0001              Comando_Tablet@sensed 00E2  
                       _OpenUSART 159C                  ??_PWM_DutyCycle1 00D6  
                ??_PWM_DutyCycle2 00D6                         _Pause_seg 1954  
     __end_of_putcBluetoothString 1516                 __size_of_OpenPWM1 0014  
               __size_of_OpenPWM2 0044                 __size_of_Pause_ms 0046  
                     __pdataBANK0 00E4                  __CFG_LPT1OSC$OFF 000000  
                  _num_med_medium 005C                 __size_of___ftpack 010A  
               __size_of___lbtoft 0032                       __pbssCOMRAM 0042  
                 ??_getCNY70Value 00AE                        ?_ReadUSART 0001  
                        ?_BT_Init 0001                     __pcstackBANK0 00AC  
                      ?_SetDCPWM1 00AC                        ?_SetDCPWM2 00AC  
             __end_of__stringdata 086A                  _putcBluetoothInt 1516  
                      ?_OpenUSART 00AC                       sprintf@_val 00C4  
                     sprintf@flag 00C2                  ??_clrBufferUSART 00AC  
                      ?_Pause_seg 0001                       sprintf@prec 00C3  
                       _cleanBfer 0064                  ___lwdiv@dividend 00AC  
                    ??_WriteUSART 00AC              _SendBlueToothCommand 1D26  
                       __pintcode 0008                          ?___ftmul 00B8  
                        ?___fttol 00C7                          ?___lwdiv 00AC  
                        ?___lwmod 00B3                 putcTxU1@character 00AD  
               __size_of_putcTxU1 0012                         _contador2 0057  
                     __smallconst 0800         SendBlueToothCommand@total 00B8  
         _external_interrupt_init 1D0C                      _TamanhoTrama 0046  
                ___lwdiv@quotient 00B0                          ?_sprintf 00B8  
                     ??i2___ftmul 0013                       ??i2___fttol 0020  
              __end_of_WriteUSART 1D7E                       ??_PWM_init1 00AD  
                     ??_PWM_init2 00AF      PWM_DutyCycle1@percentageDuty 00DC  
                   _ComandoTablet 004E                          _PIE1bits 000F9D  
                        i2u310_40 0D80                          i2u281_40 0F3E  
                        _PIR1bits 000F9E                          i2u276_45 1C1C  
                        i2u277_45 1BE2                          i2u286_40 1028  
                        i2u286_45 1020                          i2u289_40 107A  
           ?_SendBlueToothCommand 00B6                  __CFG_WDTPS$32768 000000  
                   ??_putSTRINGU1 00B2                        _ADCON1bits 000FC1  
                     __stringdata 080B                          _CheckSum 004A  
                     ??_ReadUSART 0001                _Inicializa_Driveby 10C4  
                   ??i2_SetDCPWM1 0003                     ??i2_SetDCPWM2 0003  
                     ??_SetDCPWM1 00AE                       ??_SetDCPWM2 00AE  
                __size_of_BT_Init 00CE                       _INTCON2bits 000FF1  
                     _INTCON3bits 000FF0                         copy_data0 19F0  
                        _EntTrama 004F               ?_Inicializa_Driveby 0001  
                   _BluetoothDato 0065                       ??_OpenUSART 00AE  
              SetDCPWM1@dutycycle 00AC                       ??_Pause_seg 00B1  
                 OpenUSART@config 00B1                      _Timer2Config 00AB  
                        _OpenPWM1 1D56                          _OpenPWM2 1B50  
                        _Pause_ms 1B0A                          __Hrparam 0000  
                        __Lrparam 0000                SetDCPWM2@dutycycle 00AC  
            ??_Inicializa_Driveby 00CC                  PWM_DutyCycle1@DC 00DD  
                PWM_DutyCycle2@DC 00DD                  __size_of___ftmul 0164  
                __size_of___fttol 014A                  __size_of___lwdiv 0078  
                __size_of___lwmod 0060                  ??_Comando_Tablet 00E2  
                        ___ftpack 0E02                          ___lbtoft 1C4C  
                  OpenPWM2@ccp2mx 00AE             __CFG_FOSC$INTOSCIO_EC 000000  
             __end_of_putSTRINGU1 13E6         ??_external_interrupt_init 00AC  
                  OpenPWM1@period 00AC                    OpenPWM2@period 00AD  
                 ___lwdiv@divisor 00AE                   ___lwdiv@counter 00B2  
                        __ptext10 1328                          __ptext11 1D90  
                        __ptext20 1D6A                          __ptext12 1954  
                        __ptext21 1D40                          __ptext13 1B0A  
                        __ptext30 0A3C                          __ptext22 159C  
                        __ptext14 178E                          __ptext31 0E02  
                        __ptext23 1262                          __ptext15 148E  
                        __ptext40 13E6                          __ptext32 1AC2  
                        __ptext24 1B94                          __ptext16 1516  
                        __ptext41 1C12                          __ptext25 161C  
                        __ptext17 086C                          __ptext42 1CEE  
                        __ptext34 1880                          __ptext26 1A7A  
                        __ptext18 1A1A                          __ptext35 1BD8  
                        __ptext27 1698                          __ptext19 1808  
                        __ptext36 18EA                          __ptext28 1C4C  
                        __ptext37 1CCA                          __ptext29 0BA0  
                        __ptext38 0FF0                          __ptext39 0F0C  
                 PWM_init1@period 00AD                   PWM_init2@period 00AF  
                        _contador 0056         __size_ofi2_PWM_DutyCycle1 006A  
       __size_ofi2_PWM_DutyCycle2 006A                  __size_of_sprintf 01D0  
             __end_ofi2_SetDCPWM1 1C4C               __end_ofi2_SetDCPWM2 1C12  
                   __size_of_main 007A            ??_SendBlueToothCommand 00BA  
                        _putcTxU1 1D90                     BT_Init@nameBT 00BA  
        __end_of_putcBluetoothInt 159C             __CFG_CPUDIV$OSC1_PLL2 000000  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 00AC  
               putcBluetoothInt@a 00CA                 putcBluetoothInt@i 00E0  
               putcBluetoothInt@s 00CC                          intlevel2 0000  
                       sprintf@ap 00C0                         sprintf@sp 00B8  
                ___lwmod@dividend 00B3   __end_of_external_interrupt_init 1D26  
                      _OSCCONbits 000FD3                        _UART1_Init 1D40  
                     _putSTRINGU1 1328      __size_of_putcBluetoothString 0088  
                     _num_med_low 005B                          sprintf@c 00C9  
                        sprintf@f 00BA                   ___lwmod@divisor 00B5  
  i2PWM_DutyCycle2@percentageDuty 0031                   ___lwmod@counter 00B7  
                     i2_SetDCPWM1 1C12                       i2_SetDCPWM2 1BD8  
           __end_of_getCNY70Value 1328                      _USART_Status 0054  
                      _TMRO_USART 0008  
